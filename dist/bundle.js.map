{"version":3,"sources":["webpack:///webpack/bootstrap 44fd8d169eed347fde1a","webpack:///./src/common/geometrics.ts","webpack:///./src/common/v3.ts","webpack:///./src/common/Pool.ts","webpack:///(webpack)/buildin/global.js","webpack:///./src/client/engine/chunk/EngineChunkVertexArrayPool.ts","webpack:///./src/client/engine/chunk/EngineChunkRenderer.ts","webpack:///external \"twgl\"","webpack:///./src/common/BlockTypes.ts","webpack:///./src/client/engine/chunk/EngineChunkQuadWriter.ts","webpack:///./src/client/engine/chunk/EngineChunkBuilder.ts","webpack:///./src/client/engine/DebugHud.ts","webpack:///./src/client/Config.ts","webpack:///./src/client/engine/chunk/EngineChunkQuadLookupPool.ts","webpack:///./src/client/ChunkData.ts","webpack:///./src/client/worker/WorkerManager.ts","webpack:///./src/client/main.ts","webpack:///./src/client/singleplayer/LocalAuthority.ts","webpack:///./src/client/engine/Engine.ts","webpack:///./src/client/engine/chunk/EngineChunk.ts","webpack:///./src/client/engine/chunk/EngineChunkMesh.ts","webpack:///./src/common/gl.ts","webpack:///./src/client/engine/chunk/EngineChunkMeshVAO.ts","webpack:///./src/common/BlockPos.ts","webpack:///./src/client/engine/PlayerInput.ts","webpack:///./node_modules/keycode/index.js","webpack:///./src/client/singleplayer/ChunkLoader.ts","webpack:///./src/client/worker/TaskGenerateAndMeshChunk.ts","webpack:///./src/client/singleplayer/ChunkGeneration.ts","webpack:///./node_modules/libnoise/artifacts/js/libnoise.js","webpack:///./src/common/VoxelsInSphere.ts","webpack:///./src/client/worker/WorkerOverseer.ts","webpack:///./src/client/worker.ts"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","worldPos","clone","divideScalar","CHUNK_SIZE","floor","CHUNK_SIZE_SQUARED","CHUNK_SIZE_CUBED","facesPerCube","uniqVertsPerFace","maxVerts","maxQuadsPerMesh","quadVertexElementSize","quadVertexByteSize","Uint32Array","BYTES_PER_ELEMENT","quadByteStride","bufferByteSize","T","id","axis","axisDelta","verts","dx","dy","dz","size","deltaIndex","B","N","S","E","W","key","side","deltaV3","__WEBPACK_IMPORTED_MODULE_0_v3__","tangents","opposite","Sides","byName","TOP","BOTTOM","NORTH","SOUTH","EAST","WEST","byId","byAxis","each","callback","sideId","v3","x","y","z","this","a","Float32Array","v","set","setFrom","b","setSum","toString","lengthSqr","ax","ay","az","length","Math","sqrt","ceil","negate","invert","normalize","lenSqr","multiplyScalar","scalar","add","that","subtract","multiply","divide","dot","cross","bx","by","bz","lerp","t","exactEquals","equals","abs","max","Pool","createCallback","releaseCallback","items","acquire","pop","release","item","push","g","Function","eval","e","window","createPool","__WEBPACK_IMPORTED_MODULE_1_Pool__","__WEBPACK_IMPORTED_MODULE_0_geometrics__","__webpack_exports__","mainPool","vertexArray","createPrefilledPool","existingItems","pool","glBuffer","numElements","indices","indexBuffer","elementType","indexBufferGlType","attribs","a_junk","buffer","junkBuffer","numComponents","type","__WEBPACK_IMPORTED_MODULE_1_gl__","BYTE","divisor","a_packed","INT","stride","offset","vaoPool","vao","useProgram","programInfo","program","uniforms","u_texture","texture","__WEBPACK_IMPORTED_MODULE_2_twgl_js__","worldViewProjectionMatrix","u_worldViewProjection","packedAttribOrder","UNSIGNED_SHORT","Uint16Array","ELEMENT_ARRAY_BUFFER","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","src","mag","NEAREST","min","level","auto","crossOrigin","__WEBPACK_IMPORTED_MODULE_3_Pool__","__WEBPACK_IMPORTED_MODULE_4__EngineChunkMeshVAO__","twgl","addBlockType","tileIndex","BlockTypes","blockType","BlockType","_this","textureSides","makeTextureSide","setSideTile","drawQuad","quadId","blockPos","uvs","brightnesses","flipQuad","packedInt0","pos","packedInt1","vertexArrayCursor","calculateVertexColours","airBlockPos","tangentIndex","tangentSide","edgeOccludingBlockPos","setAdjacentToBlockPos","blockDataSource","isTransparent","diagonalTangentSide","cornerOccludingBlockPos","occludedBrightnesses","__WEBPACK_IMPORTED_MODULE_2_BlockPos__","undefined","__WEBPACK_IMPORTED_MODULE_5_v3__","ChunkPrewriter","blockData","quadIdsByBlockAndSide","vertexArrayPool","quadCount","vertexArrays","currentVertexArray","addVertexArray","addQuad","__WEBPACK_IMPORTED_MODULE_3__EngineChunkQuadWriter__","drawInternalChunkQuads","solidBlockPos","eachBlockInChunk","__WEBPACK_IMPORTED_MODULE_1_BlockTypes__","reusableVertexArrays","__WEBPACK_IMPORTED_MODULE_4__EngineChunkVertexArrayPool__","prewriter","unusedVertexArrays","unstitchChunk","chunk","eachBlockOnFace","removeQuad","stitchChunks","newCenterChunk","fixAO","getQuadId","blockTypeId","getBlockData","aoAirBlockPos","engineChunk","updateQuadAO","addFace","nearBlockPos","farBlockPos","axis1","sideIndex1","side1","faceNeighbourChunk","neighboursBySideId","nearIsTransparent","farIsTransparent","axis2","sideIndex2","side2","edgeNeighbourChunk","eachBlockOnEdge","tangentAxis","sideIndex3","side3","cornerNeighbourChunk","setBlockOnCorner","DebugHud","init","div","document","createElement","style","position","top","left","color","padding","backgroundColor","fontFamily","whiteSpace","textNode","createTextNode","appendChild","body","update","updatePlayer","playerPos","playerRot","posString","quadrant","round","PI","updateChunks","loadedChunkCount","addQueueLength","removeQueueLength","chunkString","text","data","global","copyFromStorageToConfig","source","target","createSettersForConfig","newValue","localStorage","setItem","JSON","stringify","Config","chunkRange","chunkLoading","speed","slowFrame","rememberPlayerTransform","foo","bar","self","storageString_1","getItem","parse","exposedConfigWithSetters","location","reload","removeItem","ChunkData","__WEBPACK_IMPORTED_MODULE_2_v3__","blocks","Uint8Array","setChunkPos","chunkPos","processQueue","inactiveWorkerControllers","queuedTasks","task","shift","worker","assignedWorkerId","workerId","startWorker","startResponse","onStart","requestPayload","transferableObjects","activeTasksByWorkerId","taskId","start","taskType","responsePayload","cancelled","onCancelled","onComplete","workerControllers_","workerControllers","forEach","workerController","taskIdCounter","taskFromQueue","task_1","splice","cancel","WorkerController","addEventListener","activeTaskId","onResponse","activeTaskType","postMessage","cancelTask","onFrame","time","authority","gl","finish","requestAnimationFrame","__WEBPACK_IMPORTED_MODULE_1__worker_WorkerOverseer__","__WEBPACK_IMPORTED_MODULE_0__singleplayer_LocalAuthority__","chunkLoadRadius","__WEBPACK_IMPORTED_MODULE_4__Config__","LocalAuthority","chunks","chunkLoader","__WEBPACK_IMPORTED_MODULE_1__ChunkLoader__","engine","__WEBPACK_IMPORTED_MODULE_0__engine_Engine__","updatePlayerPos","authOnFrame","newPlayerPos","newPlayerRot","onChunkLoaded","chunkData","authAddChunkData","onChunkUnloaded","authRemoveChunkData","__WEBPACK_IMPORTED_MODULE_3__ChunkData__","engineUpdatePlayerPos","m4","__WEBPACK_IMPORTED_MODULE_5_twgl_js__","projectionMatrix","identity","fov","Engine","started","__WEBPACK_IMPORTED_MODULE_4_v3__","chunkDrawTaskIds","playerInput","__WEBPACK_IMPORTED_MODULE_6__PlayerInput__","event","onPlayerInputClick","lastFrameTime","performance","now","__WEBPACK_IMPORTED_MODULE_7__DebugHud__","enable","DEPTH_TEST","CULL_FACE","console","log","button","authSetPlayerTransform","newPos","newRot","pitch","heading","__WEBPACK_IMPORTED_MODULE_1__chunk_EngineChunk__","neighbourChunkPos","chunkTestId","neighbourChunk","attachNeighbour","__WEBPACK_IMPORTED_MODULE_3__chunk_EngineChunkBuilder__","detatchNeighbour","__WEBPACK_IMPORTED_MODULE_9__chunk_EngineChunkQuadLookupPool__","destroy","authAddEntity","authRemoveEntity","authStart","elapsed","playerRotationMatrix","rotateY","rotateX","forwardInput","keysDown","w","rightInput","upInput","space","__WEBPACK_IMPORTED_MODULE_8__Config__","render","canvas","viewport","width","height","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","renderChunks","__WEBPACK_IMPORTED_MODULE_2__chunk_EngineChunkRenderer__","aspect","clientWidth","clientHeight","perspective","cameraMatrix","translate","viewMatrix","inverse","viewProjectionMatrix","renderBudget","chunkId","chunkLoaderUnloading","translation","renderStep","EngineChunk","initialVertexArrays","meshes","initialVertexArray","initialWriteCount","__WEBPACK_IMPORTED_MODULE_2__EngineChunkMesh__","quadDirtyList","quadHoleList","addNewMesh","newVertexArray","__WEBPACK_IMPORTED_MODULE_1__EngineChunkVertexArrayPool__","mesh","meshIndex","meshQuadId","blockAndSideId","cleanupRemovedQuads","meshId","meshQuadCount","clearQuad","EngineChunkMesh","readyToRender","minDirtyQuad","Infinity","maxDirtyQuad","__WEBPACK_IMPORTED_MODULE_1__EngineChunkRenderer__","__WEBPACK_IMPORTED_MODULE_0__EngineChunkQuadWriter__","updateVAO","quadPushCount","bufferSubData","__WEBPACK_IMPORTED_MODULE_2_geometrics__","partialRender","getElementById","getContext","antialias","EngineChunkMeshVAO","bufferInfo","vaoInfo","drawElementsInstanced","TRIANGLES","BlockPos","blockDataOverride","__WEBPACK_IMPORTED_MODULE_1_v3__","recalculateIndex","getWorldPoint","outV3","getBlockType","__WEBPACK_IMPORTED_MODULE_2__BlockTypes__","isOpaque","refBlockPos","newAxisPos","newIndex","freeAxis1","freeAxis2","freeAxis","keynames","_a","__WEBPACK_IMPORTED_MODULE_0_keycode__","PlayerInput","onClick","domElement","mouseSpeed","pointerLocked","keysPressed","initMouse","initKeys","requestPointerLock","onPointerLockChange","bind","_event","pointerLockElement","keyname","which","codes","searchInput","hasKeyCode","keyCode","charCode","names","search","String","foundNamedKey","toLowerCase","aliases","charCodeAt","code","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","page up","page down","end","home","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","cursorPos","ChunkLoader","localAuthority","radius","centerPos","NaN","addQueue","removeQueue","tasks","sortedRelativePositions","__WEBPACK_IMPORTED_MODULE_3_VoxelsInSphere__","getSortedList","newTag","newCenterPos","positionCount","deltaPos","cursorHash","loadedChunk","chunkLoaderTag","tag","__WEBPACK_IMPORTED_MODULE_2__worker_TaskGenerateAndMeshChunk__","removeChunkId","chunkId_1","queue","__WEBPACK_IMPORTED_MODULE_4__engine_DebugHud__","keys","__WEBPACK_IMPORTED_MODULE_2__WorkerManager__","__WEBPACK_IMPORTED_MODULE_1__ChunkData__","__WEBPACK_IMPORTED_MODULE_6__engine_chunk_EngineChunkQuadLookupPool__","__WEBPACK_IMPORTED_MODULE_5__engine_chunk_EngineChunkVertexArrayPool__","map","completePayload","cancelledPayload","cancelledQuadIdsByBlockAndSide","work","responseCallback","chunkPosRaw","__WEBPACK_IMPORTED_MODULE_3__singleplayer_ChunkGeneration__","fill","__WEBPACK_IMPORTED_MODULE_4__engine_chunk_EngineChunkBuilder__","arr","chunkBlocks","chunkBlockIndex","sampleVector","groundHeight","ridged0","getValue","depth","__WEBPACK_IMPORTED_MODULE_2_BlockTypes__","air","snow","stone","dirt","grass","quality","__WEBPACK_IMPORTED_MODULE_3_libnoise__","QualityMode","MEDIUM","generator","Perlin","RidgedMultifractal","$hx_exports","$extend","from","fields","Inherit","proto","__name__","haxe_ds_ArraySort","sort","cmp","rec","to","middle","_g1","_g","j","swap","doMerge","pivot","len1","len2","first_cut","second_cut","len11","len22","lower","upper","rotate","new_mid","mid","gcd","val","p1","p2","half","len","tmp","js__$Boot_HaxeError","Error","message","captureStackTrace","wrap","__super__","js_Boot","__string_rec","__ename__","Array","__enum__","str","str1","_g11","_g2","i2","tostr","s2","k","str2","hasp","substring","libnoise_ModuleBase","count","this1","index","value","libnoise_QualityMode","__constructs__","LOW","HIGH","libnoise_E_$QualityMode","libnoise_Utils","GradientCoherentNoise3D","seed","x0","x1","y0","y1","z0","z1","xs","ys","zs","value1","value2","MapQuinticSCurve","n0","GradientNoise3D","n1","ix0","InterpolateLinear","ix1","iy0","iy1","fx","fy","fz","ix","iy","iz","GeneratorNoiseX","GeneratorNoiseY","GeneratorNoiseZ","GeneratorSeed","GeneratorShift","Randoms","InterpolateCubic","fmod","MakeInt32Range","MapCubicSCurve","a3","a4","ValueNoise3D","ValueNoise3DInt","Clamp","libnoise_generator_Billow","frequency","lacunarity","persistence","octaves","curp","nx","ny","nz","_seed","signal","libnoise_generator_Checker","libnoise_generator_Const","libnoise_generator_Cylinder","dfc","dfss","dfls","libnoise_generator_Perlin","cp","libnoise_generator_RidgedMultifractal","weights","updateWeights","weight","f","pow","libnoise_generator_Sphere","libnoise_generator_Voronoi","displacement","distance","xi","md","xc","yc","zc","zcu","_g3","ycu","_g5","_g4","xcu","xp","yp","zp","xd","yd","zd","xd1","yd1","zd1","libnoise_operator_Abs","input","libnoise_operator_Add","lhs","rhs","libnoise_operator_Blend","controller","set_controller","get_controller","libnoise_operator_Cache","cached","cx","cy","cz","libnoise_operator_Clamp","libnoise_operator_Curve","controlPointCount","output","vec","smv","ip","i0","max1","i1","max2","max3","i3","ip0","libnoise_operator_Displace","exponent","set_X","get_X","set_Y","get_Y","set_Z","get_Z","libnoise_operator_Exponent","libnoise_operator_Invert","libnoise_operator_Max","libnoise_operator_Min","libnoise_operator_Multiply","libnoise_operator_Power","libnoise_operator_Rotate","rx","ry","rz","setAngles","_rx","_ry","_rz","cos","sin","x1Matrix","y1Matrix","z1Matrix","x2Matrix","y2Matrix","z2Matrix","x3Matrix","y3Matrix","z3Matrix","libnoise_operator_Scale","sx","sy","sz","libnoise_operator_ScaleBias","scale","bias","libnoise_operator_Select","fallOff","inputA","inputB","cv","lc","lc1","libnoise_operator_Subtract","libnoise_operator_Terrace","inverted","generate","steps","ts","v0","v1","libnoise_operator_Translate","libnoise_operator_Turbulence","power","distortX","distortY","distortZ","xDistort","yDistort","zDistort","setFrequency","setRoughness","roughness","setSeed","SQRT3","OctavesMaximum","Deg2Rad","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","voxelCount","voxelSphereAreaByDistance","sortedVoxelDistances","slice","estimatedLogicalCoresAvailable","navigator","hardwareConcurrency","__WEBPACK_IMPORTED_MODULE_1_worker_loader_name_worker_js_worker___default","__WEBPACK_IMPORTED_MODULE_0__WorkerManager__","Worker"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44fd8d169eed347fde1a","import v3 from \"v3\"\r\n\r\nexport const CHUNK_SIZE         = 32\r\nexport const CHUNK_SIZE_SQUARED = CHUNK_SIZE * CHUNK_SIZE\r\nexport const CHUNK_SIZE_CUBED   = CHUNK_SIZE * CHUNK_SIZE * CHUNK_SIZE\r\n\t\r\nexport const facesPerCube     = 6\r\nexport const uniqVertsPerFace = 4\r\nexport const indicesPerFace   = 6\r\n\r\nexport const maxVerts         = 64 * 1024 // this should be 64k\r\nexport const maxQuadsPerChunk = maxVerts / uniqVertsPerFace\r\nexport const maxQuadsPerMesh  = 2400\r\n\r\nexport const quadVertexElementSize = 2\r\nexport const quadVertexByteSize = Uint32Array.BYTES_PER_ELEMENT * quadVertexElementSize\r\nexport const quadByteStride = /*geometrics.VertexArrayType*/Uint32Array.BYTES_PER_ELEMENT * 2\r\nexport const bufferByteSize = maxQuadsPerMesh * quadByteStride\r\n\r\nexport type VertexArrayType = Uint32Array\r\n\r\n\r\nexport function worldPosToChunkPos(worldPos: v3) {\r\n\treturn worldPos.clone().divideScalar(CHUNK_SIZE).floor()\r\n}\r\n\r\n\r\n// Sides\r\n\r\nexport interface SideType {\r\n\tname: string,\r\n\tid: number,\r\n\taxis: number,\r\n\taxisDelta: number,\r\n\tverts: Array<number>,\r\n\tdx: number,\r\n\tdy: number,\r\n\tdz: number,\r\n\tsize: number,\r\n\tdeltaIndex: number,\r\n\tdeltaV3?: v3,\r\n\ttangents?: Array<{ side: SideType, tangents: Array<SideType> }>,\r\n\topposite?: SideType,\r\n}\r\n\r\nconst s: { [key: string]: SideType } = {\r\n\tT: { name: \"TOP\", id: 0, axis: 1, axisDelta: 1, verts: [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,], dx: 0, dy: 1, dz: 0, size: CHUNK_SIZE, deltaIndex: 1, },\r\n\tB: { name: \"BOTTOM\", id: 1, axis: 1, axisDelta: -1, verts: [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1,], dx: 0, dy: -1, dz: 0, size: CHUNK_SIZE, deltaIndex: -1, },\r\n\tN: { name: \"NORTH\", id: 2, axis: 2, axisDelta: 1, verts: [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,], dx: 0, dy: 0, dz: 1, size: CHUNK_SIZE, deltaIndex: CHUNK_SIZE, },\r\n\tS: { name: \"SOUTH\", id: 3, axis: 2, axisDelta: -1, verts: [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0,], dx: 0, dy: 0, dz: -1, size: CHUNK_SIZE, deltaIndex: -CHUNK_SIZE, },\r\n\tE: { name: \"EAST\", id: 4, axis: 0, axisDelta: 1, verts: [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,], dx: 1, dy: 0, dz: 0, size: CHUNK_SIZE, deltaIndex: CHUNK_SIZE_SQUARED, },\r\n\tW: { name: \"WEST\", id: 5, axis: 0, axisDelta: -1, verts: [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,], dx: -1, dy: 0, dz: 0, size: CHUNK_SIZE, deltaIndex: -CHUNK_SIZE_SQUARED, },\r\n}\r\n\r\nfor (let key in s) {\r\n\tconst side = s[key]\r\n\tside.deltaV3 = new v3(side.dx, side.dy, side.dz)\r\n}\r\n\r\ns.T.tangents = [{ side: s.N, tangents: [s.E, s.W] }, { side: s.E, tangents: [s.S, s.N] }, { side: s.S, tangents: [s.W, s.E] }, { side: s.W, tangents: [s.N, s.S] }]\r\ns.B.tangents = [{ side: s.S, tangents: [s.W, s.E] }, { side: s.E, tangents: [s.S, s.N] }, { side: s.N, tangents: [s.E, s.W] }, { side: s.W, tangents: [s.N, s.S] }]\r\ns.N.tangents = [{ side: s.E, tangents: [s.T, s.B] }, { side: s.T, tangents: [s.E, s.W] }, { side: s.W, tangents: [s.B, s.T] }, { side: s.B, tangents: [s.W, s.E] }]\r\ns.S.tangents = [{ side: s.W, tangents: [s.B, s.T] }, { side: s.T, tangents: [s.E, s.W] }, { side: s.E, tangents: [s.T, s.B] }, { side: s.B, tangents: [s.W, s.E] }]\r\ns.E.tangents = [{ side: s.S, tangents: [s.T, s.B] }, { side: s.T, tangents: [s.N, s.S] }, { side: s.N, tangents: [s.B, s.T] }, { side: s.B, tangents: [s.S, s.N] }]\r\ns.W.tangents = [{ side: s.N, tangents: [s.B, s.T] }, { side: s.T, tangents: [s.N, s.S] }, { side: s.S, tangents: [s.T, s.B] }, { side: s.B, tangents: [s.S, s.N] }]\r\n\r\ns.T.opposite = s.B\r\ns.B.opposite = s.T\r\ns.N.opposite = s.S\r\ns.S.opposite = s.N\r\ns.E.opposite = s.W\r\ns.W.opposite = s.E\r\n\r\nexport const Sides = {\r\n\tbyName: { TOP: s.T, BOTTOM: s.B, NORTH: s.N, SOUTH: s.S, EAST: s.E, WEST: s.W },\r\n\tbyId: [s.T, s.B, s.N, s.S, s.E, s.W],\r\n\tbyAxis: [[s.E, s.W], [s.T, s.B], [s.N, s.S]],\r\n\teach(callback: (side: SideType) => void) {\r\n\t\tfor (var sideId = 0; sideId < 6; sideId += 1) {\r\n\t\t\tcallback(Sides.byId[sideId])\r\n\t\t}\r\n\t},\r\n\t//findFromNormal(normal: v3) {\r\n\t//\treturn _.minBy(Sides.byId, side => {   // TODO: rewrite without lodash for worker?\r\n\t//\t\treturn Math.abs(side.dx - normal.x) + Math.abs(side.dy - normal.y) + Math.abs(side.dz - normal.z)\r\n\t//\t})\r\n\t//},\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/geometrics.ts","const EPSILON = 0.000001\r\n\r\nexport default class v3 {\r\n\r\n\ta: Float32Array\r\n\r\n\tconstructor(x = 0, y = 0, z = 0) {\r\n\t\tthis.a = new Float32Array([ x, y, z ])\r\n\t}\r\n\tget x() { return this.a[0] }\r\n\tget y() { return this.a[1] }\r\n\tget z() { return this.a[2] }\r\n\tset x(v: number) { this.a[0] = v }\r\n\tset y(v: number) { this.a[1] = v }\r\n\tset z(v: number) { this.a[2] = v }\r\n\tclone() {\r\n\t\treturn new v3(this.a[0], this.a[1], this.a[2])\r\n\t}\r\n\tset(x: number, y: number, z: number) {\r\n\t\tthis.a[0] = x\r\n\t\tthis.a[1] = y\r\n\t\tthis.a[2] = z\r\n\t\treturn this\r\n\t}\r\n\tsetFrom(b: v3) {\r\n\t\tthis.a[0] = b.a[0]\r\n\t\tthis.a[1] = b.a[1]\r\n\t\tthis.a[2] = b.a[2]\r\n\t\treturn this\r\n\t}\r\n\tsetSum(b: v3, c: v3) {\r\n\t\tthis.a[0] = b.a[0] + c.a[0]\r\n\t\tthis.a[1] = b.a[1] + c.a[1]\r\n\t\tthis.a[2] = b.a[2] + c.a[2]\r\n\t\treturn this\r\n\t}\r\n\ttoString() {\r\n\t\treturn this.a[0] + ',' + this.a[1] + ',' + this.a[2]\r\n\t}\r\n\tget id() {\r\n\t\treturn this.a[0] + ',' + this.a[1] + ',' + this.a[2]\r\n\t}\r\n\r\n\t// operations involving no arguments\r\n\tlengthSqr() {\r\n\t\tconst ax = this.a[0], ay = this.a[1], az = this.a[2]\r\n\t\treturn ax * ax + ay * ay + az * az\r\n\t}\r\n\tlength() {\r\n\t\treturn Math.sqrt(this.lengthSqr())\r\n\t}\r\n\tceil() {\r\n\t\tthis.a[0] = Math.ceil(this.a[0])\r\n\t\tthis.a[1] = Math.ceil(this.a[1])\r\n\t\tthis.a[2] = Math.ceil(this.a[2])\r\n\t\treturn this\r\n\t}\r\n\tfloor() {\r\n\t\tthis.a[0] = Math.floor(this.a[0])\r\n\t\tthis.a[1] = Math.floor(this.a[1])\r\n\t\tthis.a[2] = Math.floor(this.a[2])\r\n\t\treturn this\r\n\t}\r\n\tnegate() {\r\n\t\tthis.a[0] = -(this.a[0])\r\n\t\tthis.a[1] = -(this.a[1])\r\n\t\tthis.a[2] = -(this.a[2])\r\n\t\treturn this\r\n\t}\r\n\tinvert() {\r\n\t\tthis.a[0] = 1 / this.a[0]\r\n\t\tthis.a[1] = 1 / this.a[1]\r\n\t\tthis.a[2] = 1 / this.a[2]\r\n\t\treturn this\r\n\t}\r\n\tnormalize() {\r\n\t\tconst lenSqr = this.lengthSqr()\r\n\t\tif (lenSqr > 0) {\r\n\t\t\tthis.multiplyScalar(1 / Math.sqrt(lenSqr))\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t// operations involving a scalar argument\r\n\tmultiplyScalar(scalar: number) {\r\n\t\tthis.a[0] *= scalar\r\n\t\tthis.a[1] *= scalar\r\n\t\tthis.a[2] *= scalar\r\n\t\treturn this\r\n\t}\r\n\tdivideScalar(scalar: number) {\r\n\t\tthis.a[0] /= scalar\r\n\t\tthis.a[1] /= scalar\r\n\t\tthis.a[2] /= scalar\r\n\t\treturn this\r\n\t}\r\n\r\n\t// operations involving a second vector\r\n\tadd(that: v3) {\r\n\t\tthis.a[0] += that.a[0]\r\n\t\tthis.a[1] += that.a[1]\r\n\t\tthis.a[2] += that.a[2]\r\n\t\treturn this\r\n\t}\r\n\tsubtract(that: v3) {\r\n\t\tthis.a[0] -= that.a[0]\r\n\t\tthis.a[1] -= that.a[1]\r\n\t\tthis.a[2] -= that.a[2]\r\n\t\treturn this\r\n\t}\r\n\tmultiply(that: v3) {\r\n\t\tthis.a[0] *= that.a[0]\r\n\t\tthis.a[1] *= that.a[1]\r\n\t\tthis.a[2] *= that.a[2]\r\n\t\treturn this\r\n\t}\r\n\tdivide(that: v3) {\r\n\t\tthis.a[0] /= that.a[0]\r\n\t\tthis.a[1] /= that.a[1]\r\n\t\tthis.a[2] /= that.a[2]\r\n\t\treturn this\r\n\t}\r\n\tdot(that: v3) {\r\n\t\treturn this.a[0] * that.a[0] + this.a[1] * that.a[1] + this.a[2] * that.a[2]\r\n\t}\r\n\tcross(that: v3) {\r\n\t\tconst ax = this.a[0], ay = this.a[1], az = this.a[2]\r\n\t\tconst bx = that.a[0], by = that.a[1], bz = that.a[2]\r\n\t\tthis.a[0] = ay * bz - az * by\r\n\t\tthis.a[1] = az * bx - ax * bz\r\n\t\tthis.a[2] = ax * by - ay * bx\r\n\t\treturn this\r\n\t}\r\n\tlerp(that: v3, t: number) {\r\n\t\tconst ax = this.a[0], ay = this.a[1], az = this.a[2]\r\n\t\tthis.a[0] = ay + t * (that.a[0] - ax)\r\n\t\tthis.a[1] = az + t * (that.a[1] - ay)\r\n\t\tthis.a[2] = ax + t * (that.a[2] - az)\r\n\t\treturn this\r\n\t}\r\n\texactEquals(that: v3) {\r\n\t\treturn this.a[0] === that.a[0] && this.a[1] === that.a[1] && this.a[2] === that.a[2]\r\n\t}\r\n\tequals(that: v3) {\r\n\t\tconst ax = this.a[0], ay = this.a[1], az = this.a[2]\r\n\t\tconst bx = that.a[0], by = that.a[1], bz = that.a[2]\r\n\t\treturn (Math.abs(ax - bx) <= EPSILON * Math.max(1.0, Math.abs(ax), Math.abs(bx)) &&\r\n\t\t\tMath.abs(ay - by) <= EPSILON * Math.max(1.0, Math.abs(ay), Math.abs(by)) &&\r\n\t\t\tMath.abs(az - bz) <= EPSILON * Math.max(1.0, Math.abs(az), Math.abs(bz)))\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/v3.ts","export default class Pool<T> {\r\n\r\n\titems: Array<T>\r\n\r\n\tconstructor(private createCallback: () => T, private releaseCallback?: (T: T) => void) {\r\n\t\tthis.items = []\r\n\t}\r\n\tacquire(): T {\r\n\t\tif (this.items.length) {\r\n\t\t\treturn this.items.pop()\r\n\t\t}\r\n\t\treturn this.createCallback()\r\n\t}\r\n\trelease(item: T): void {\r\n\t\tif (this.releaseCallback) {\r\n\t\t\tthis.releaseCallback(item)\r\n\t\t}\r\n\t\tthis.items.push(item)\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Pool.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","import * as geometrics from \"geometrics\"\r\nimport Pool from \"Pool\"\r\n\r\nfunction createPool(): Pool<geometrics.VertexArrayType> {\r\n\treturn new Pool(() => {\r\n\t\treturn new Uint32Array(geometrics.maxQuadsPerMesh * geometrics.quadVertexByteSize)\r\n\t})\r\n}\r\n\r\nexport default {\r\n\tmainPool: createPool(),\r\n\tacquire(): geometrics.VertexArrayType {\r\n\t\treturn this.mainPool.acquire()\r\n\t},\r\n\trelease(vertexArray: geometrics.VertexArrayType) {\r\n\t\tthis.mainPool.release(vertexArray)\r\n\t},\r\n\tcreatePrefilledPool(existingItems: Array<geometrics.VertexArrayType>): Pool<geometrics.VertexArrayType> {\r\n\t\tconst pool = createPool()\r\n\t\tpool.items = existingItems\r\n\t\treturn pool\r\n\t},\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkVertexArrayPool.ts","import * as geometrics from \"geometrics\"\r\nimport gl from \"gl\"\r\nimport * as twgl from \"twgl.js\"\r\nimport Pool from \"Pool\"\r\nimport EngineChunkMeshVAO from \"./EngineChunkMeshVAO\"\r\n\r\nconst packedAttribOrder = [\r\n\t\"a_packed\",\r\n\t\"a_junk\", // firefox hack: see notes on junkBuffer below\r\n]\r\n\r\nconst vertexShaderSource = `#version 300 es\r\n\tprecision mediump float;\r\n\r\n\tconst vec3 cornerPositions[28] = vec3[](\r\n\t\tvec3(0., 1., 1.), vec3(1., 1., 1.), vec3(1., 1., 0.), vec3(0., 1., 0.),\r\n\t\tvec3(0., 0., 0.), vec3(1., 0., 0.), vec3(1., 0., 1.), vec3(0., 0., 1.),\r\n\t\tvec3(1., 0., 1.), vec3(1., 1., 1.), vec3(0., 1., 1.), vec3(0., 0., 1.),\r\n\t\tvec3(0., 0., 0.), vec3(0., 1., 0.), vec3(1., 1., 0.), vec3(1., 0., 0.),\r\n\t\tvec3(1., 0., 0.), vec3(1., 1., 0.), vec3(1., 1., 1.), vec3(1., 0., 1.),\r\n\t\tvec3(0., 0., 1.), vec3(0., 1., 1.), vec3(0., 1., 0.), vec3(0., 0., 0.),\r\n\t\tvec3(0., 0., 0.), vec3(0., 0., 0.), vec3(0., 0., 0.), vec3(0., 0., 0.) // invalid side used to hide quad\r\n\t);\r\n\tconst vec2 cornerTexcoords[] = vec2[](\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 1.), vec2(0., 0.), vec2(1., 0.), vec2(1., 1.),\r\n\t\tvec2(0., 0.), vec2(0., 0.), vec2(0., 0.), vec2(0., 0.) // invalid side used to hide quad\r\n\t);\r\n\r\n\tuniform mat4 u_worldViewProjection;\r\n\tin ivec2 a_packed;\r\n\tin int a_junk;\r\n\tout vec2 v_texcoord;\r\n\tout float v_color;\r\n\r\n\tvoid main() {\r\n\t\tint cornerId = gl_VertexID % 4; \r\n\t\tcornerId += a_junk; // XXX: force this attribute to not get optimized away\r\n\t\tint sideId = (a_packed[0] >> 15) & 0x7;\r\n\t\tint flipQuad = (a_packed[0] >> 18) & 0x1;\r\n\r\n\t\tcornerId = (cornerId + flipQuad) % 4;\r\n\t\t\r\n\t\tvec3 cornerPos = cornerPositions[(sideId * 4) + cornerId];\r\n\t\tvec4 position = vec4(\r\n\t\t\tfloat((a_packed[0] >> 0) & 0x1f) + cornerPos.x,\r\n\t\t\tfloat((a_packed[0] >> 5) & 0x1f) + cornerPos.y,\r\n\t\t\tfloat((a_packed[0] >> 10) & 0x1f) + cornerPos.z,\r\n\t\t\t1.\r\n\t\t);\r\n\r\n\t\tvec2 cornerUv = cornerTexcoords[(sideId * 4) + cornerId];\r\n\t\tvec2 texcoord = vec2(\r\n\t\t\t(float((a_packed[1] >> 16) & 0xf) + cornerUv.x) / 16.,\r\n\t\t\t(float((a_packed[1] >> 20) & 0xf) + cornerUv.y) / 16.\r\n\t\t);\r\n\r\n\t\tfloat color = float((a_packed[1] >> (cornerId * 4)) & 0xf) / 15.; // 0 .. 15 -> 0.0 .. 1.0\r\n\r\n\t\tgl_Position = u_worldViewProjection * position;\r\n\t\tv_texcoord = texcoord;\r\n\t\tv_color = color;\r\n\t}`\r\n\r\nconst fragmentShaderSource = `#version 300 es\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D u_texture;\r\n\tin vec2 v_texcoord;\r\n\tin float v_color;\r\n\tout vec4 fragColor;\r\n\r\n\tvoid main() {\r\n\t\tfragColor = texture(u_texture, v_texcoord) * vec4(v_color, v_color, v_color, 1.);\r\n\t}`\r\n\r\nexport const indexBufferGlType = gl.UNSIGNED_SHORT\r\nexport const indexBuffer = twgl.createBufferFromTypedArray(gl, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.ELEMENT_ARRAY_BUFFER)\r\n\r\n// Firefox complains when every vertex attrib has a non-zero divisor, so add a junk buffer\r\n// apparently what I'm doing is an \"exotic corner case\" and is disallowed by the WebGL2 spec: https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.7\r\nexport const junkBuffer = gl.createBuffer()\r\ngl.bindBuffer(gl.ARRAY_BUFFER, junkBuffer)\r\ngl.bufferData(gl.ARRAY_BUFFER, geometrics.maxQuadsPerMesh * 4, gl.DYNAMIC_DRAW)\r\n\r\nexport const texture = twgl.createTexture(gl, { src: \"Kenney_voxel_pack_atlas.png\", mag: gl.NEAREST, min: gl.NEAREST, level: 0, auto: false, crossOrigin: \"anonymous\" })\r\nexport const programInfo = twgl.createProgramInfo(gl, [vertexShaderSource, fragmentShaderSource], packedAttribOrder)\r\nexport const vaoPool = <Pool<EngineChunkMeshVAO>>new Pool(() => {\r\n\treturn new EngineChunkMeshVAO()\r\n})\r\n\r\n\r\nexport function createBufferInfo(glBuffer: WebGLBuffer) {\r\n\treturn {\r\n\t\tnumElements: geometrics.maxVerts * geometrics.uniqVertsPerFace,\r\n\t\tindices: indexBuffer,\r\n\t\telementType: indexBufferGlType,\r\n\t\tattribs: {\r\n\t\t\ta_junk: { buffer: junkBuffer, numComponents: 1, type: gl.BYTE, divisor: 0, },\r\n\t\t\ta_packed: { buffer: glBuffer, numComponents: 2, type: gl.INT, stride: geometrics.quadByteStride, offset: 0, divisor: 1, },\r\n\t\t\t//a_position: { buffer: glBuffer, numComponents: 3, type: gl.FLOAT, stride: geometrics.quadByteStride, offset: 0, },\r\n\t\t\t//a_texcoord: { buffer: glBuffer, numComponents: 2, type: gl.FLOAT, stride: geometrics.quadByteStride, offset: 12, },\r\n\t\t\t//a_color: { buffer: glBuffer, numComponents: 1, type: gl.FLOAT, stride: geometrics.quadByteStride, offset: 20, },\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport function acquireVAO() {\r\n\treturn vaoPool.acquire()\r\n}\r\n\r\nexport function releaseVAO(vao: EngineChunkMeshVAO) {\r\n\t//console.log(`releaseVAO`)\r\n\tvaoPool.release(vao)\r\n}\r\n\r\nexport function initRenderProgram() {\r\n\tgl.useProgram(programInfo.program)\r\n\tconst uniforms = {\r\n\t\tu_texture: texture,\r\n\t}\r\n\ttwgl.setUniforms(programInfo, uniforms)\r\n}\r\n\r\nexport function setWorldViewProjectionMatrix(worldViewProjectionMatrix: twgl.Mat4) {\r\n\tconst uniforms = {\r\n\t\tu_worldViewProjection: worldViewProjectionMatrix,\r\n\t}\r\n\ttwgl.setUniforms(programInfo, uniforms)\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkRenderer.ts","module.exports = twgl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"twgl\"\n// module id = 6\n// module chunks = 0","import * as geometrics from \"geometrics\"\r\n\r\nconst Sides = geometrics.Sides\r\n\r\nclass BlockType {\r\n\r\n\tid: number\r\n\tname: string\r\n\ttextureSides: Array<Array<number>>\r\n\r\n\tconstructor(id: number, name: string, tileIndex: number) {\r\n\t\tthis.id = id\r\n\t\tthis.name = name\r\n\t\tthis.textureSides = []\r\n\t\tSides.each(side => {\r\n\t\t\tthis.textureSides[side.id] = this.makeTextureSide(tileIndex)\r\n\t\t})\r\n\t}\r\n\tsetSideTile(side: geometrics.SideType, tileIndex: number) {\r\n\t\tthis.textureSides[side.id] = this.makeTextureSide(tileIndex)\r\n\t\treturn this\r\n\t}\r\n\tmakeTextureSide(tileIndex: number) {\r\n\t\tvar tu = tileIndex % 16\r\n\t\tvar tv = Math.floor(tileIndex / 16)\r\n\t\treturn [ tu, tv ]\r\n\t}\r\n}\r\n\r\ninterface BlockTypesType {\r\n\tbyId: Array<BlockType>,\r\n\tbyName: { [key: string]: BlockType },\r\n}\r\n\r\nconst BlockTypes: BlockTypesType = {\r\n\tbyId: [],\r\n\tbyName: {},\r\n}\r\nexport default BlockTypes\r\n\r\nfunction addBlockType(name: string, tileIndex: number) {\r\n\tvar id = BlockTypes.byId.length\r\n\tvar blockType = new BlockType(id, name, tileIndex)\r\n\tBlockTypes.byId[id] = blockType\r\n\tBlockTypes.byName[name] = blockType\r\n\treturn blockType\r\n}\r\n\r\naddBlockType(\"air\", 0)\r\naddBlockType(\"stone\", 1)\r\naddBlockType(\"dirt\", 2)\r\naddBlockType(\"grass\", 3).setSideTile(Sides.byName.TOP, 0).setSideTile(Sides.byName.BOTTOM, 2)\r\naddBlockType(\"planks\", 4)\r\naddBlockType(\"brick\", 7)\r\naddBlockType(\"cobble\", 16)\r\naddBlockType(\"bedrock\", 17)\r\naddBlockType(\"sand\", 18)\r\naddBlockType(\"gravel\", 19)\r\naddBlockType(\"wood\", 20).setSideTile(Sides.byName.TOP, 21).setSideTile(Sides.byName.BOTTOM, 21)\r\naddBlockType(\"gold_ore\", 32)\r\naddBlockType(\"iron_ore\", 33)\r\naddBlockType(\"coal_ore\", 34)\r\naddBlockType(\"mossy_cobble\", 36)\r\naddBlockType(\"obsidian\", 37)\r\naddBlockType(\"diamond_ore\", 50)\r\naddBlockType(\"redstone_ore\", 51)\r\naddBlockType(\"stone_brick\", 54)\r\naddBlockType(\"snow\", 66)\r\naddBlockType(\"ice\", 67)\r\naddBlockType(\"snowy_grass\", 68).setSideTile(Sides.byName.TOP, 66).setSideTile(Sides.byName.BOTTOM, 2)\r\naddBlockType(\"fungus\", 77).setSideTile(Sides.byName.TOP, 78).setSideTile(Sides.byName.BOTTOM, 2)\r\naddBlockType(\"mossy_stone_brick\", 100)\r\naddBlockType(\"cracked_stone_brick\", 101)\r\naddBlockType(\"sandstone\", 192).setSideTile(Sides.byName.TOP, 176).setSideTile(Sides.byName.BOTTOM, 176)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/BlockTypes.ts","import * as geometrics from \"geometrics\"\r\nimport BlockPos from \"BlockPos\"\r\n\r\n\r\nexport function drawQuad(vertexArray: geometrics.VertexArrayType, quadId: number, blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\r\n\tconst flipQuad: number = (brightnesses[0] + brightnesses[2] < brightnesses[1] + brightnesses[3]) ? 1 : 0 // 1 bit\r\n\r\n\tconst s: number = side.id // 3 bits because 0..5\r\n\r\n\tconst x: number = blockPos.pos.a[0] // 5 bits because 0..31\r\n\tconst y: number = blockPos.pos.a[1] // 5 bits because 0..31\r\n\tconst z: number = blockPos.pos.a[2] // 5 bits because 0..31\r\n\tconst packedPos: number = (x) | (y << 5) | (z << 10) // 15 bits\r\n\tconst packedTransform: number = packedPos | (s << 15) | (flipQuad << 18) // 19 bits\r\n\r\n\tconst packedInt0: number = packedTransform\r\n\r\n\tconst brightCorner0: number = Math.floor(brightnesses[0] * 15) // 4 bits\r\n\tconst brightCorner1: number = Math.floor(brightnesses[1] * 15) // 4 bits\r\n\tconst brightCorner2: number = Math.floor(brightnesses[2] * 15) // 4 bits\r\n\tconst brightCorner3: number = Math.floor(brightnesses[3] * 15) // 4 bits\r\n\tconst brightCorners: number = (brightCorner0) | (brightCorner1 << 4) | (brightCorner2 << 8) | (brightCorner3 << 12)\r\n\tconst u0: number = uvs[0] // 4 bits because 0..15\r\n\tconst v0: number = uvs[1] // 4 bits because 0..15\r\n\tconst packedInt1: number = (brightCorners) | (u0 << 16) | (v0 << 20) // 24 bits\r\n\r\n\tlet vertexArrayCursor = quadId * geometrics.quadVertexElementSize\r\n\tvertexArray[vertexArrayCursor + 0] = packedInt0\r\n\tvertexArray[vertexArrayCursor + 1] = packedInt1\r\n}\r\n\r\nexport function clearQuad(vertexArray: geometrics.VertexArrayType, quadId: number) {\r\n\tlet vertexArrayCursor = quadId * geometrics.quadVertexElementSize\r\n\r\n\t// TODO: make the quad degenerate\r\n\tconst invalidSideId = 6\r\n\tvertexArray[vertexArrayCursor + 0] = invalidSideId << 15\r\n\tvertexArray[vertexArrayCursor + 1] = 0\r\n}\r\n\r\nexport function updateQuadAO(vertexArray: geometrics.VertexArrayType, quadId: number, blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>): boolean {\r\n\tlet changed = false\r\n\t// TODO: optimize?\r\n\tchanged = true\r\n\tdrawQuad(vertexArray, quadId, blockPos, side, uvs, brightnesses)\r\n\treturn changed\r\n}\r\n\r\nexport function getVertexOrderAfterQuadFlipping(brightnesses: Array<number>) {\r\n\tif (brightnesses[0] + brightnesses[2] < brightnesses[1] + brightnesses[3]) {\r\n\t\treturn [1, 2, 3, 0]\r\n\t}\r\n\telse {\r\n\t\treturn [0, 1, 2, 3]\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkQuadWriter.ts","import * as geometrics from \"geometrics\"\r\nimport BlockTypes from \"BlockTypes\"\r\nimport BlockPos from \"BlockPos\"\r\nimport * as EngineChunkQuadWriter from \"./EngineChunkQuadWriter\"\r\nimport EngineChunkVertexArrayPool from \"./EngineChunkVertexArrayPool\"\r\nimport v3 from \"v3\"\r\nimport Pool from \"Pool\"\r\nimport EngineChunk from \"client/engine/chunk/EngineChunk\";\r\n\r\n\r\nconst occludedBrightnesses = [1, 0.7, 0.7, 0.6, 0.5, 0.5]\r\n//const occludedBrightnesses = [1, 0.5, 0.5, 0.2, 0.1, 0.1] // HIGH CONTRAST MODE\r\n\r\nconst edgeOccludingBlockPos = new BlockPos(undefined, new v3(0, 0, 0))\t // optimization: keep these around for repeated calls to calculateVertexColours\r\nconst cornerOccludingBlockPos = new BlockPos(undefined, new v3(0, 0, 0))\t // optimization: keep these around for repeated calls to calculateVertexColours\r\n\r\nfunction calculateVertexColours(airBlockPos: BlockPos, side: geometrics.SideType) {\r\n\r\n\t// determine ambient occlusion\r\n\tconst brightnesses = [0, 0, 0, 0]\r\n\r\n\t// check for occlusion at right angles to the block's normal\r\n\tfor (let tangentIndex = 0; tangentIndex < 4; tangentIndex += 1) {\r\n\t\tconst tangentSide = side.tangents[tangentIndex].side\r\n\r\n\t\tedgeOccludingBlockPos.setAdjacentToBlockPos(airBlockPos, tangentSide)\r\n\t\tif (!edgeOccludingBlockPos.blockDataSource) { continue }\r\n\r\n\t\tif (!edgeOccludingBlockPos.isTransparent()) {\r\n\t\t\tbrightnesses[tangentIndex] += 2\r\n\t\t\tbrightnesses[(tangentIndex + 1) % 4] += 2\r\n\t\t}\r\n\r\n\t\t// right angle again to find the diagonal\r\n\t\t// n.b. anisotropy warning: it's possible that the edge occluding block is unloaded, but the diagonal is loaded, and we are only turning right!\r\n\t\tconst diagonalTangentSide = side.tangents[(tangentIndex + 1) % 4].side\r\n\r\n\t\tcornerOccludingBlockPos.setAdjacentToBlockPos(edgeOccludingBlockPos, diagonalTangentSide)\r\n\t\tif (!cornerOccludingBlockPos.blockDataSource) { continue }\r\n\r\n\t\tif (!cornerOccludingBlockPos.isTransparent()) {\r\n\t\t\tbrightnesses[(tangentIndex + 1) % 4] += 1\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < 4; i += 1) {\r\n\t\tbrightnesses[i] = occludedBrightnesses[brightnesses[i]]\r\n\t}\r\n\r\n\treturn brightnesses\r\n}\r\n\r\n\r\n\r\nclass ChunkPrewriter {\r\n\r\n\tquadCount: number\r\n\tvertexArrays: Array<geometrics.VertexArrayType>\r\n\tcurrentVertexArray: geometrics.VertexArrayType\r\n\r\n\tconstructor(private blockData: Uint8Array, private quadIdsByBlockAndSide: Uint16Array, private vertexArrayPool: Pool<geometrics.VertexArrayType>) {\r\n\t\tthis.quadCount = 0\r\n\t\tthis.vertexArrays = []\r\n\t\tthis.currentVertexArray = undefined\r\n\t}\r\n\taddVertexArray() {\r\n\t\tvar vertexArray: geometrics.VertexArrayType = new Uint32Array(this.vertexArrayPool.acquire())\r\n\t\tthis.vertexArrays.push(vertexArray)\r\n\t\treturn vertexArray\r\n\t}\r\n\taddQuad(blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\t\tvar quadId = this.quadCount\r\n\t\tthis.quadCount += 1\r\n\t\tif (this.quadCount > this.vertexArrays.length * geometrics.maxQuadsPerMesh) {\r\n\t\t\tthis.currentVertexArray = this.addVertexArray()\r\n\t\t}\r\n\t\tEngineChunkQuadWriter.drawQuad(this.currentVertexArray, quadId % geometrics.maxQuadsPerMesh, blockPos, side, uvs, brightnesses)\r\n\t\tthis.quadIdsByBlockAndSide[blockPos.i * 6 + side.id] = quadId + 1 // add one so we can use 0 as an indicator that no quad was written\r\n\t}\r\n\r\n\r\n\tdrawInternalChunkQuads() {\r\n\t\tvar solidBlockPos = new BlockPos(undefined, new v3(0, 0, 0), this.blockData)\r\n\t\tvar airBlockPos = new BlockPos(undefined, new v3(0, 0, 0), this.blockData)\r\n\r\n\t\tsolidBlockPos.eachBlockInChunk(() => {\r\n\t\t\t\r\n\t\t\tif (!solidBlockPos.isTransparent()) {\r\n\r\n\t\t\t\tgeometrics.Sides.each(side => {\r\n\r\n\t\t\t\t\tairBlockPos.setAdjacentToBlockPos(solidBlockPos, side)\r\n\r\n\t\t\t\t\tif (airBlockPos.blockDataSource) { // still within the same chunk\r\n\r\n\t\t\t\t\t\tvar adjacentIsTransparent = airBlockPos.isTransparent()\r\n\t\t\t\t\t\tif (adjacentIsTransparent) {\r\n\r\n\t\t\t\t\t\t\tvar blockType = BlockTypes.byId[this.blockData[solidBlockPos.i]]\r\n\t\t\t\t\t\t\tvar uvs = blockType.textureSides[side.id]\r\n\r\n\t\t\t\t\t\t\t// determine vertex colours (AO)\r\n\t\t\t\t\t\t\tvar brightnesses = calculateVertexColours(airBlockPos, side)\r\n\r\n\t\t\t\t\t\t\tthis.addQuad(solidBlockPos, side, uvs, brightnesses)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\nexport default {\r\n\tdrawInternalChunkQuads(\r\n\t\tblockData: Uint8Array,\r\n\t\tquadIdsByBlockAndSide: Uint16Array,\r\n\t\treusableVertexArrays: Array<geometrics.VertexArrayType> = []\r\n\t): {\r\n\t\tquadCount: number,\r\n\t\tvertexArrays: Array<geometrics.VertexArrayType>,\r\n\t\tunusedVertexArrays: Array<geometrics.VertexArrayType>,\r\n\t} {\r\n\r\n\t\tconst vertexArrayPool = EngineChunkVertexArrayPool.createPrefilledPool(reusableVertexArrays)\r\n\r\n\t\tconst prewriter = new ChunkPrewriter(blockData, quadIdsByBlockAndSide, vertexArrayPool)\r\n\t\tprewriter.drawInternalChunkQuads()\r\n\t\tconst quadCount = prewriter.quadCount\r\n\t\tconst vertexArrays = prewriter.vertexArrays\r\n\t\tconst unusedVertexArrays = vertexArrayPool.items\r\n\r\n\t\treturn { quadCount, vertexArrays, unusedVertexArrays }\r\n\t},\r\n\r\n\tunstitchChunk(chunk: EngineChunk, side: geometrics.SideType) {\r\n\t\tconst blockPos = new BlockPos()\r\n\t\tblockPos.eachBlockOnFace(chunk, side, () => {\r\n\t\t\tchunk.removeQuad(blockPos, side)\r\n\t\t})\r\n\t},\r\n\r\n\tstitchChunks(newCenterChunk: EngineChunk) {\r\n\t\t// requirements:\r\n\t\t//   - add quads on both sides of the 6 adjacent \"face\" neighbour chunks, if required (i.e. solid and air boundary)\r\n\t\t//   - update AO on both sides of the 6 adjacent \"face\" neighbour chunks, for faces which are perpendicular\r\n\t\t//   (adjacent to the 6 adjacent \"face\" neighbour chunks are the 12 \"edge\" chunks, which share an edge with the center chunk)\r\n\t\t//   - update AO for the \"edge\" chunks for all blocks along the edge which face toward the center chunk on either axis\r\n\t\t//   (adjacent to the 12 \"edge\" chunks are 8 \"corner\" chunks, which share a corner with the center chunk)\r\n\t\t//   - update AO for the \"corner\" chunks's single corner blocks, which face toward the center chunk on any axis\r\n\t\t//   (e.g. consider the grass block at (0, 31, 0) : the air block above it is in chunk (0,1,0), but AO also depends on blocks in chunks (-1,1,0), (0,1,-1) AND (-1,1,-1))\r\n\t\t\r\n\t\t// the following strategy explores all adjacent chunks once in a 3x3x3 cube, but is anisotropic:\r\n\t\t//   - first, xyz explores a \"tie fighter\" shape\r\n\t\t//   - next, yz adds an \"I beam\", leaving an \"upright bagel with cream cheese\" shape\r\n\t\t//   - finally, z fills in the last two spots\r\n\t\t// as more chunks get filled in, these anisotropic AO errors should disappear; with the camera far away from the edges of the loading chunks, this should not affect the player\r\n\r\n\t\tconst aoAirBlockPos = new BlockPos(undefined, new v3(0, 0, 0))\t // optimization\r\n\t\t\r\n\t\tfunction fixAO(solidBlockPos: BlockPos, side: geometrics.SideType) {\r\n\t\t\tconst quadId = solidBlockPos.getQuadId(side)\r\n\t\t\tif (quadId >= 0) {\r\n\t\t\t\tconst blockTypeId = solidBlockPos.getBlockData()\r\n\t\t\t\tconst blockType = BlockTypes.byId[blockTypeId]\r\n\t\t\t\tconst uvs = blockType.textureSides[side.id]\r\n\t\t\t\taoAirBlockPos.setAdjacentToBlockPos(solidBlockPos, side)\r\n\t\t\t\tconst brightnesses = calculateVertexColours(aoAirBlockPos, side)\r\n\t\t\t\tsolidBlockPos.engineChunk.updateQuadAO(solidBlockPos, side, uvs, brightnesses)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction addFace(solidBlockPos: BlockPos, airBlockPos: BlockPos, side: geometrics.SideType) {\r\n\t\t\t//console.log(`addFace for ${solidBlockPos.toString()} (${solidBlockPos.engineChunk.chunkData.pos.toString()}) facing ${side.name}: i.e. ${airBlockPos.toString()} (${airBlockPos.engineChunk.chunkData.pos.toString()})`)\r\n\t\t\tconst blockTypeId = solidBlockPos.getBlockData()\r\n\t\t\tconst blockType = BlockTypes.byId[blockTypeId]\r\n\t\t\tconst uvs = blockType.textureSides[side.id]\r\n\t\t\tconst brightnesses = calculateVertexColours(airBlockPos, side)\r\n\t\t\tsolidBlockPos.engineChunk.addQuad(solidBlockPos, side, uvs, brightnesses)\r\n\t\t}\r\n\t\t\r\n\t\tconst nearBlockPos = new BlockPos()\r\n\t\tconst farBlockPos = new BlockPos()\r\n\r\n\t\t// for each face...\r\n\t\tfor (let axis1 = 0; axis1 < 3; axis1 += 1) {\r\n\t\t\tfor (let sideIndex1 = 0; sideIndex1 < 2; sideIndex1 += 1) {\r\n\t\t\t\tconst side1 = geometrics.Sides.byAxis[axis1][sideIndex1]\r\n\t\t\t\tconst faceNeighbourChunk = newCenterChunk.neighboursBySideId[side1.id]\r\n\t\t\t\tif (faceNeighbourChunk) {\r\n\r\n\t\t\t\t\t//console.log(`stitching ${newCenterChunk.id} on ${side1.name} to ${faceNeighbourChunk.id}`)\r\n\r\n\t\t\t\t\t// add quads and update perpendicular AO\r\n\t\t\t\t\tnearBlockPos.eachBlockOnFace(newCenterChunk, side1, () => {\r\n\t\t\t\t\t\tfarBlockPos.setAdjacentToBlockPos(nearBlockPos, side1)\r\n\r\n\t\t\t\t\t\t// add quads\r\n\t\t\t\t\t\tconst nearIsTransparent = nearBlockPos.isTransparent()\r\n\t\t\t\t\t\tconst farIsTransparent = farBlockPos.isTransparent()\r\n\t\t\t\t\t\tif (!nearIsTransparent && farIsTransparent) {\r\n\t\t\t\t\t\t\t// add quad at nearBlockPos facing side1\r\n\t\t\t\t\t\t\taddFace(nearBlockPos, farBlockPos, side1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (!farIsTransparent && nearIsTransparent) {\r\n\t\t\t\t\t\t\t// add quad at farBlockPos facing side1.opposite\r\n\t\t\t\t\t\t\taddFace(farBlockPos, nearBlockPos, side1.opposite) // problem?\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// update AO\r\n\t\t\t\t\t\tfor (let i = 0; i < side1.tangents.length; i += 1) {\r\n\t\t\t\t\t\t\tconst tangentSide = side1.tangents[i].side\r\n\t\t\t\t\t\t\tfixAO(nearBlockPos, tangentSide)\r\n\t\t\t\t\t\t\tfixAO(farBlockPos, tangentSide)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// for each edge...\r\n\t\t\t\t\tfor (let axis2 = axis1 + 1; axis2 < 3; axis2 += 1) {\r\n\t\t\t\t\t\tfor (let sideIndex2 = 0; sideIndex2 < 2; sideIndex2 += 1) {\r\n\t\t\t\t\t\t\tconst side2 = geometrics.Sides.byAxis[axis2][sideIndex2]\r\n\t\t\t\t\t\t\tconst edgeNeighbourChunk = faceNeighbourChunk.neighboursBySideId[side2.id]\r\n\t\t\t\t\t\t\tif (edgeNeighbourChunk) {\r\n\r\n\t\t\t\t\t\t\t\t// update AO of blocks along edge of edgeNeighbourChunk\r\n\t\t\t\t\t\t\t\tfarBlockPos.eachBlockOnEdge(edgeNeighbourChunk, side1, side2, () => {\r\n\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, side1.opposite)\r\n\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, side2.opposite)\r\n\t\t\t\t\t\t\t\t\tconst tangentAxis = 3 - side1.axis - side2.axis\r\n\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, geometrics.Sides.byAxis[tangentAxis][0])\r\n\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, geometrics.Sides.byAxis[tangentAxis][1])\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t// for each corner...\r\n\t\t\t\t\t\t\t\tif (axis2 !== 2) {\r\n\t\t\t\t\t\t\t\t\tconst axis3 = 2 // the only remaining axis\r\n\t\t\t\t\t\t\t\t\tfor (let sideIndex3 = 0; sideIndex3 < 2; sideIndex3 += 1) {\r\n\t\t\t\t\t\t\t\t\t\tconst side3 = geometrics.Sides.byAxis[axis3][sideIndex3]\r\n\t\t\t\t\t\t\t\t\t\tconst cornerNeighbourChunk = edgeNeighbourChunk.neighboursBySideId[side3.id]\r\n\t\t\t\t\t\t\t\t\t\tif (cornerNeighbourChunk) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// update AO of single block at corner of cornerNeighbourChunk\r\n\t\t\t\t\t\t\t\t\t\t\tfarBlockPos.setBlockOnCorner(cornerNeighbourChunk, side1, side2, side3)\r\n\t\t\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, side1.opposite)\r\n\t\t\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, side2.opposite)\r\n\t\t\t\t\t\t\t\t\t\t\tfixAO(farBlockPos, side3.opposite)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkBuilder.ts","import v3 from \"v3\"\r\nimport * as geometrics from \"geometrics\"\r\n\r\nexport default new class DebugHud {\r\n\t\r\n\tdiv: HTMLElement\r\n\ttextNode: Text\r\n\r\n\tposString: string\r\n\tchunkString: string\r\n\r\n\tinit() {\r\n\t\tthis.div = document.createElement(\"div\")\r\n\t\tthis.div.style.position = \"absolute\"\r\n\t\tthis.div.style.top = \"0\"\r\n\t\tthis.div.style.left = \"80px\"\r\n\t\tthis.div.style.color = \"white\"\r\n\t\tthis.div.style.padding = \"2px\"\r\n\t\tthis.div.style.backgroundColor = \"rgba(0, 0, 0, 0.5)\"\r\n\t\tthis.div.style.fontFamily = \"monospace\"\r\n\t\tthis.div.style.whiteSpace = \"pre\"\r\n\r\n\t\tthis.textNode = document.createTextNode(\"\")\r\n\t\tthis.div.appendChild(this.textNode)\r\n\r\n\t\tdocument.body.appendChild(this.div)\r\n\r\n\t\tthis.update()\r\n\t}\r\n\r\n\tupdatePlayer(playerPos: v3, playerRot: v3) {\r\n\t\tthis.posString = \"\"\r\n\t\tconst quadrant = Math.round(playerRot.y / Math.PI * 2) % 4\r\n\t\tthis.posString += `in chunk ${geometrics.worldPosToChunkPos(playerPos).toString()} `\r\n\t\tthis.posString += `facing ${[\"NORTH\", \"WEST\", \"SOUTH\", \"EAST\"][quadrant]}\\n` // why is this backwards?! is my camera backwards?\r\n\t\tthis.posString += `pos = ${Math.floor(playerPos.x)},${Math.floor(playerPos.y)},${Math.floor(playerPos.z)}`\r\n\t\tthis.update()\r\n\t}\r\n\r\n\tupdateChunks(loadedChunkCount: number, addQueueLength: number, removeQueueLength: number) {\r\n\t\tthis.chunkString = `loaded chunks: ${loadedChunkCount}, +${addQueueLength}, -${removeQueueLength}`\r\n\t\tthis.update()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tlet text = \"\"\r\n\t\ttext += this.posString + \"\\n\"\r\n\t\ttext += this.chunkString\r\n\t\tthis.textNode.data = text\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/DebugHud.ts","interface RecursiveDict {\r\n\t[key: string]: string | number | boolean | RecursiveDict\r\n}\r\n\r\n// default configuration\r\nconst Config: RecursiveDict = {\r\n\tchunkRange: 5,\r\n\tchunkLoading: true,\r\n\tspeed: 1,\r\n\tslowFrame: 30,\r\n\trememberPlayerTransform: true,\r\n\tfoo: {\r\n\t\tbar: \"baaz\",\r\n\t},\r\n}\r\n\r\n// load user-specific overrides from localStorage\r\nlet storageString\r\nlet storageObject\r\nif (self.document) { // not a webWorker!\r\n\tlet storageString = localStorage.getItem(\"config\")\r\n\tlet storageObject = storageString ? JSON.parse(storageString) : {}\r\n\tcopyFromStorageToConfig(storageObject, Config)\r\n}\r\nfunction copyFromStorageToConfig(source: RecursiveDict, target: RecursiveDict) {\r\n\tfor (var key in target) {\r\n\t\tif (typeof target[key] === \"object\") {\r\n\t\t\tif (typeof source[key] === \"object\") {\r\n\t\t\t\tcopyFromStorageToConfig(<RecursiveDict>source[key], <RecursiveDict>target[key])\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (key in source && typeof source[key] !== \"object\") {\r\n\t\t\t\ttarget[key] = source[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport default Config\r\n\r\n// expose global object to user for inspecting and modifying config values\r\nconst exposedConfigWithSetters = {}\r\ncreateSettersForConfig(Config, exposedConfigWithSetters)\r\nfunction createSettersForConfig(source: RecursiveDict, target: RecursiveDict) {\r\n\tfor (var key in source) {\r\n\t\tif (typeof source[key] === \"object\") {\r\n\t\t\ttarget[key] = {}\r\n\t\t\tcreateSettersForConfig(<RecursiveDict>source[key], <RecursiveDict>target[key])\r\n\t\t}\r\n\t\telse {\r\n\t\t\t(function(key) {\r\n\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn source[key]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tset: function(newValue) {\r\n\t\t\t\t\t\tsource[key] = newValue\r\n\t\t\t\t\t\tlocalStorage.setItem(\"config\", JSON.stringify(source))\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t})(key)\r\n\t\t}\r\n\t}\r\n}\r\nglobal[\"config\"] = exposedConfigWithSetters\r\n\r\n// extra user functionality (getters aid typing: e.g. `reload` instead of `reload()`)\r\n\r\nObject.defineProperty(global, \"reload\", { get: () => {\r\n\twindow.location.reload()\r\n}})\r\n\r\nObject.defineProperty(global, \"configReset\", { get: () => {\r\n\tlocalStorage.removeItem(\"config\")\r\n\twindow.location.reload()\r\n}})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Config.ts","import * as geometrics from \"geometrics\"\r\nimport Pool from \"Pool\"\r\n\r\nconst pool: Pool<Uint16Array> = new Pool(() => { return new Uint16Array(geometrics.CHUNK_SIZE_CUBED * geometrics.facesPerCube) })\r\n\r\nexport default pool\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkQuadLookupPool.ts","import * as geometrics from \"geometrics\"\r\nimport Pool from \"Pool\"\r\nimport v3 from \"v3\"\r\n\r\nexport default class ChunkData {\r\n\r\n\tpos: v3\r\n\tid: string\r\n\tblocks: Uint8Array\r\n\tchunkLoaderTag: number\r\n\tchunkLoaderUnloading: boolean\r\n\r\n\tconstructor() {\r\n\t\tthis.pos = new v3()\r\n\t\tthis.id = \"NaN,NaN,NaN\"\r\n\t\tthis.blocks = new Uint8Array(geometrics.CHUNK_SIZE_CUBED)\r\n\t}\r\n\tsetChunkPos(chunkPos: v3) {\r\n\t\tthis.pos.setFrom(chunkPos)\r\n\t\tthis.id = chunkPos.toString()\r\n\t}\r\n\r\n\tstatic pool: Pool<ChunkData> = new Pool(() => {\r\n\t\treturn new ChunkData()\r\n\t})\r\n}\r\n\r\n//export const pool = new Pool(() => new ChunkData(), () => {})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/ChunkData.ts","import DebugFrameLogger from \"../DebugFrameLogger\"\r\n\r\n\r\n/*\r\n\tUSAGE\r\n\t=====\r\n\r\n\t// main script\r\n\r\n\tconst taskId = WorkerManager.queueTask(\r\n\t\t\"taskType1\",\r\n\t\t() => { // onStart\r\n\t\t\tconst payload: WorkerPayload = { \"foo\": \"bar\", \"array\": myUInt8Array }\r\n\t\t\tconst transferableObjects: Array<any> = [ myUInt8Array ]\r\n\t\t\treturn { payload, transferableObjects }\r\n\t\t},\r\n\t\t(payload: WorkerPayload) => {\r\n\t\t\tconsole.log(payload)\r\n\t\t}\r\n\t)\r\n\r\n\t// worker script\r\n\r\n\tWorkerObligation({\r\n\t\t\"taskType1\": (requestPayload, responseCallback) => {\r\n\t\t\tconst responsePayload: WorkerPayload = { \"foo\": \"bar\", \"array\": myUInt8Array }\r\n\t\t\tconst transferableObjects: Array<any> = [ myUInt8Array ]\r\n\t\t\tresponseCallback(responsePayload, transferableObjects)\r\n\t\t},\r\n\t\t\"taskType1.cancel\": () => {}, // unimplemented\r\n\t})\r\n\r\n*/\r\n\r\nexport type WorkerPayload = { taskId?: number, taskType?: string, [key: string]: any }\r\nexport type WorkerOnStart = () => { requestPayload: WorkerPayload, transferableObjects: Array<any> } | undefined\r\nexport type WorkerOnComplete = (responsePayload: WorkerPayload) => void\r\n\r\nexport class WorkerController {\r\n\r\n\tactiveTaskId: number\r\n\tactiveTaskType: string\r\n\tonResponse: WorkerOnComplete\r\n\r\n\tconstructor(public worker: Worker, public workerId: number) {\r\n\t\tthis.worker.addEventListener('message', (e: MessageEvent) => {\r\n\t\t\tconst responsePayload: WorkerPayload = e.data\r\n\t\t\tif (responsePayload.taskId !== this.activeTaskId) { return } // old job? ignore response\r\n\t\t\tif (!this.onResponse) { return } // already called onResponse once? ignore response\r\n\r\n\t\t\t// clear this.onResponse before calling it, since it may start this worker again\r\n\t\t\tconst onResponse = this.onResponse\r\n\t\t\tthis.onResponse = undefined\r\n\t\t\tonResponse(responsePayload)\r\n\t\t})\r\n\t}\r\n\tstart(taskId: number, taskType: string, requestPayload: WorkerPayload, transferableObjects: Array<any>, onResponse: WorkerOnComplete) {\r\n\t\tthis.onResponse = onResponse\r\n\t\tthis.activeTaskId = taskId\r\n\t\tthis.activeTaskType = taskType\r\n\t\trequestPayload.taskId = taskId\r\n\t\trequestPayload.taskType = taskType\r\n\t\tthis.worker.postMessage(requestPayload, transferableObjects) // transfer with \"Transferable Objects\"\r\n\t}\r\n\tcancel() {\r\n\t\t// this may safely be ignored by the worker\r\n\t\tthis.worker.postMessage({ cancelTask: this.activeTaskId })\r\n\t}\r\n}\r\n\r\n\r\n\r\n// WorkerManager\r\n// =============\r\n\r\ntype Task = {\r\n\ttaskId: number,\r\n\ttaskType: string,\r\n\tassignedWorkerId?: number,\r\n\tcancelled?: boolean,\r\n\tonStart: WorkerOnStart,\r\n\tonComplete: WorkerOnComplete,\r\n\tonCancelled: WorkerOnComplete,\r\n}\r\n\r\nlet taskIdCounter: number = 0\r\nconst activeTasksByWorkerId: { [key: number]: Task } = {}\r\nlet workerControllers: Array<WorkerController> = []\r\nconst inactiveWorkerControllers: Array<WorkerController> = []\r\nconst queuedTasks: Array<Task> = []\r\n\r\n// initialize workers\r\nexport function init(workerControllers_: Array<WorkerController>) {\r\n\tworkerControllers = workerControllers_\r\n\tworkerControllers.forEach(workerController => {\r\n\t\tinactiveWorkerControllers.push(workerController)\r\n\t})\r\n}\r\n\r\nexport function queueTask(taskType: string, onStart: WorkerOnStart, onComplete: WorkerOnComplete, onCancelled: WorkerOnComplete) {\r\n\ttaskIdCounter += 1\r\n\tconst taskId = taskIdCounter // unique taskId\r\n\tconst task: Task = { taskId, taskType, onStart, onComplete, onCancelled }\r\n\tqueuedTasks.push(task)\r\n\tprocessQueue()\r\n\treturn taskId\r\n}\r\n\r\nfunction processQueue() {\r\n\twhile (inactiveWorkerControllers.length > 0 && queuedTasks.length > 0) {\r\n\t\tconst task = queuedTasks.shift()\r\n\t\tconst worker = inactiveWorkerControllers.pop()\r\n\t\ttask.assignedWorkerId = worker.workerId\r\n\t\tstartWorker(worker, task)\r\n\t}\r\n}\r\n\r\nfunction startWorker(worker: WorkerController, task: Task) {\r\n\t//DebugFrameLogger(\"WorkerManager.startWorker\")\r\n\r\n\tconst startResponse = task.onStart()\r\n\tif (!startResponse) { return } // task was cancelled by onStart\r\n\tconst { requestPayload, transferableObjects } = startResponse\r\n\r\n\tactiveTasksByWorkerId[task.taskId] = task\r\n\r\n\tworker.start(task.taskId, task.taskType, requestPayload, transferableObjects, (responsePayload: WorkerPayload) => {\r\n\t\t//DebugFrameLogger(\"WorkerManager worker response\")\r\n\t\tdelete activeTasksByWorkerId[task.taskId]\r\n\t\tinactiveWorkerControllers.push(worker)\r\n\t\tprocessQueue() // now that this worker's free, assign another task to it if one is available!\r\n\t\tif (task.cancelled) {\r\n\t\t\ttask.onCancelled(responsePayload)\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttask.onComplete(responsePayload)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport function cancelTask(taskId: number): boolean {\r\n\t// if the task is still in the queue, simply remove it (we never called onStart, so according to our contract, we don't need to call onComplete)\r\n\t// aka: const taskFromQueue = _.remove(queuedTasks, (task: Task) => task.taskId === taskId)\r\n\tlet taskFromQueue\r\n\tfor (let i = 0; i < queuedTasks.length; i += 1) {\r\n\t\tlet task = queuedTasks[i]\r\n\t\tif (task.taskId === taskId) {\r\n\t\t\ttaskFromQueue = task\r\n\t\t\tqueuedTasks.splice(i, 1)\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tif (taskFromQueue) {\r\n\t\treturn true\r\n\t}\r\n\t// otherwise, we need to stop an active worker...\r\n\tconst task = activeTasksByWorkerId[taskId]\r\n\tif (task) {\r\n\t\tconst workerController: WorkerController = workerControllers[task.assignedWorkerId]\r\n\t\tworkerController.cancel() // fire off the cancel message and continue waiting for a reply... (since we don't want to overload a worker that's still working)\r\n\t\ttask.cancelled = true // we will ignore the reply\r\n\t}\r\n\telse {\r\n\t\tdebugger\r\n\t}\r\n\treturn false\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/worker/WorkerManager.ts","import LocalAuthority from \"./singleplayer/LocalAuthority\"\r\nimport WorkerOverseer from \"./worker/WorkerOverseer\"\r\nimport * as DebugFrameLogger from \"./DebugFrameLogger\"\r\n\r\n// support browser gl debugging tool \"Spector\" capturing from very start of script execution\r\n// http://www.realtimerendering.com/blog/debugging-webgl-with-spectorjs/\r\n//if (global.spector) {\r\n//\t//spector.captureNextFrame(gl)\r\n//\tglobal.spector.startCapture(gl, 10000) // max calls to capture\r\n//\tsetTimeout(() => {\r\n//\t\tglobal.spector.stopCapture()\r\n//\t}, 2000)\r\n//}\r\n\r\n// init web workers\r\nWorkerOverseer.init()\r\n\r\n// TODO: fsm with menu... but for now, just start a local game\r\nconst authority = new LocalAuthority()\r\n\r\n// TESTING\r\nglobal[\"authority\"] = authority\r\nimport v3 from \"v3\"\r\nglobal[\"v3\"] = v3\r\n\r\n// main loop\r\nfunction onFrame(time: number) {\r\n\t//DebugFrameLogger.onFrameStart()\r\n\tauthority.onFrame(time)\r\n\tgl.finish()\r\n\t//DebugFrameLogger.onFrameComplete()\r\n\trequestAnimationFrame(onFrame)\r\n}\r\nrequestAnimationFrame(onFrame)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/main.ts","import * as geometrics from \"geometrics\"\r\nimport Engine from \"../engine/Engine\"\r\nimport ChunkLoader from \"./ChunkLoader\"\r\nimport v3 from \"v3\"\r\nimport ChunkData from \"../ChunkData\"\r\nimport Config from \"../Config\"\r\nimport DebugChunkLogger from \"../DebugChunkLogger\"\r\nimport DebugHud from \"../engine/DebugHud\"\r\n\r\nconst chunkLoadRadius = <number>Config.chunkRange\r\n\r\nexport default class LocalAuthority {\r\n\r\n\tchunks: { [key: string]: ChunkData }\r\n\tchunkLoader: ChunkLoader\r\n\tengine: Engine\r\n\tplayerPos: v3\r\n\tplayerRot: v3\r\n\r\n\tconstructor() {\r\n\t\tthis.chunks = {}\r\n\t\tthis.chunkLoader = new ChunkLoader(this, chunkLoadRadius)\r\n\t\tthis.engine = new Engine(this)\r\n\t\tthis.playerPos = new v3(0, 0, 0)\r\n\t\tthis.playerRot = new v3(0, 0, 0)\r\n\t\t\r\n\t\t//const storedPlayerTransformString: string = window.localStorage.getItem(\"playerTransform\")\r\n\t\t//if (storedPlayerTransformString) {\r\n\t\t//\tconst [x, y, z, pitch, heading, _roll ] = storedPlayerTransformString.split(\",\").map(parseFloat)\r\n\t\t//\tthis.playerPos.set(x, y, z)\r\n\t\t//\tthis.playerRot.set(pitch, heading, 0)\r\n\t\t//\tthis.engine.authSetPlayerTransform(this.playerPos, this.playerRot)\r\n\t\t//}\r\n\t\t\r\n\t\tthis.updatePlayerPos(this.playerPos, this.playerRot) // start chunks loading\r\n\t}\r\n\tonFrame(time: number) {\r\n\t\tthis.engine.authOnFrame(time)\r\n\t\tthis.chunkLoader.onFrame() // calls onChunkLoaded and onChunkUnloaded\r\n\t}\r\n\r\n\tupdatePlayerPos(newPlayerPos: v3, newPlayerRot: v3) {\r\n\t\t\r\n\t\t// TESTING: store current values for reloading the page and staying in the same place\r\n\t\t//if (<boolean>Config.rememberPlayerTransform) {\r\n\t\t//\twindow.localStorage.setItem(\"playerTransform\", newPlayerPos.toString() + ',' + newPlayerRot.toString())\r\n\t\t//}\r\n\r\n\t\t// record new vectors\r\n\t\tthis.playerPos.setFrom(newPlayerPos)\r\n\t\tthis.playerRot.setFrom(newPlayerRot)\r\n\r\n\t\tif (<boolean>Config[\"chunkLoading\"]) {\r\n\r\n\t\t\t// load and unload chunks as needed\r\n\t\t\tthis.chunkLoader.updatePlayerPos(newPlayerPos)\r\n\t\t}\r\n\t}\r\n\r\n\tonChunkLoaded(chunkData: ChunkData, quadCount: number, vertexArrays: Array<geometrics.VertexArrayType>, quadIdsByBlockAndSide: Uint16Array) {\r\n\t\tthis.chunks[chunkData.id] = chunkData\r\n\t\tthis.engine.authAddChunkData(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide)\r\n\t\t// TODO: if engine isn't started yet, and enough (some? all?) chunks have been loaded, start it with engine.authStart()\r\n\t}\r\n\tonChunkUnloaded(chunkData: ChunkData) {\r\n\t\tdelete this.chunks[chunkData.id]\r\n\t\tthis.engine.authRemoveChunkData(chunkData)\r\n\t\tChunkData.pool.release(chunkData)\r\n\t}\r\n\r\n\t// \"engine\" functions are called by Engine to provide user interaction information\r\n\r\n\tengineUpdatePlayerPos(newPlayerPos: v3, newPlayerRot: v3) {\r\n\t\tthis.updatePlayerPos(newPlayerPos, newPlayerRot)\r\n\t}\r\n\t//enginePlaceBlockCreative(_blockType, _targetBlockPos, _targetBlockSide) { // e.g. for testing\r\n\t//}\r\n\t//engineDestroyBlockCreative(_targetBlockPos) { // e.g. for testing\r\n\t//}\r\n\t//engineUseItem(_itemInventorySlot, _buttonAndModifiers, _targetBlockPos, _targetBlockSide) { // e.g. place dirt block, open chest (right click with most items, including no-item)\r\n\t//}\r\n\t//engineBreakBlock(_blockPos, _percentBroken) { // should be called with 0 first, then finally 1 when the block is broken\r\n\t//}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/singleplayer/LocalAuthority.ts","import * as geometrics from \"geometrics\"\r\nimport EngineChunk from \"./chunk/EngineChunk\"\r\nimport * as EngineChunkRenderer from \"./chunk/EngineChunkRenderer\"\r\nimport EngineChunkBuilder from \"./chunk/EngineChunkBuilder\"\r\nimport Pool from \"Pool\"\r\nimport v3 from \"v3\"\r\nimport * as twgl from \"twgl.js\"\r\nimport PlayerInput from \"./PlayerInput\"\r\nimport LocalAuthority from \"../singleplayer/LocalAuthority\"\r\nimport ChunkData from \"../ChunkData\"\r\nimport DebugHud from \"./DebugHud\"\r\nimport Config from \"../Config\"\r\nimport * as WorkerManager from \"../worker/WorkerManager\"\r\nimport TaskDrawInternalVerts from \"../worker/TaskDrawInternalVerts\"\r\nimport DebugChunkLogger from \"../DebugChunkLogger\"\r\nimport DebugFrameLogger from \"../DebugFrameLogger\"\r\nimport EngineChunkVertexArrayPool from \"./chunk/EngineChunkVertexArrayPool\"\r\nimport EngineChunkQuadLookupPool from \"./chunk/EngineChunkQuadLookupPool\"\r\n\r\nconst m4 = twgl.m4\r\n\r\nconst projectionMatrix = m4.identity() // set below\r\nconst fov = 60 * Math.PI / 180\r\nconst zNear = 0.05\r\nconst zFar = 5000\r\n\r\nexport default class Engine {\r\n\r\n\tauthority: LocalAuthority // TODO: AuthorityInterface (to support RemoteAuthority)\r\n\tstarted: boolean\r\n\tplayerPos: v3\r\n\tplayerRot: v3\r\n\tchunks: { [key: string]: EngineChunk }\r\n\tchunkDrawTaskIds: { [key: string]: number }\r\n\tplayerInput: PlayerInput\r\n\tlastFrameTime: number\r\n\r\n\tconstructor(authority: LocalAuthority) {\r\n\t\tthis.authority = authority\r\n\t\tthis.started = false\r\n\t\tthis.playerPos = new v3(0, 0, 0)\r\n\t\tthis.playerRot = new v3(0, 0, 0) // pitch, heading, _roll\r\n\t\tthis.chunks = {}\r\n\t\tthis.chunkDrawTaskIds = {}\r\n\t\tthis.playerInput = new PlayerInput(event => { this.onPlayerInputClick(event) })\r\n\t\tthis.lastFrameTime = performance.now()\r\n\r\n\t\tDebugHud.init()\r\n\r\n\t\tgl.enable(gl.DEPTH_TEST)\r\n\t\tgl.enable(gl.CULL_FACE)\r\n\t}\r\n\r\n\t//\r\n\tonPlayerInputClick(event: MouseEvent) {\r\n\t\tconsole.log(`mouse button clicked: ${event.button}`)\r\n\t}\r\n\r\n\r\n\t// \"auth\" methods are called by authority\r\n\tauthSetPlayerTransform(newPos: v3, newRot: v3) {\r\n\t\tthis.playerPos.setFrom(newPos)\r\n\t\tthis.playerRot.setFrom(newRot)\r\n\t\tthis.playerInput.pitch = newRot.x\r\n\t\tthis.playerInput.heading = newRot.y\r\n\t}\r\n\tauthAddChunkData(chunkData: ChunkData, quadCount: number, vertexArrays: Array<geometrics.VertexArrayType>, quadIdsByBlockAndSide: Uint16Array) {\r\n\t\t//DebugFrameLogger(\"Engine.authAddChunkData\")\r\n\t\t//DebugChunkLogger(chunkData.pos, \"Engine.authAddChunkData\")\r\n\r\n\t\t//this.chunkDrawTaskIds[chunkData.id] = TaskDrawInternalVerts.queue( // n.b. this task will release chunkData if cancelled\r\n\t\t//\tchunkData, EngineChunkQuadLookupPool,\r\n\t\t//\t(quadCount, vertexArrays, quadIdsByBlockAndSide) => {\r\n\t\t//\t\tdelete this.chunkDrawTaskIds[chunkData.id]\r\n\t\t//\t\tthis.authAddChunkData_withInternalQuads(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide)\r\n\t\t//\t}\r\n\t\t//)\r\n\r\n\t//}\r\n\t//authAddChunkData_withInternalQuads(chunkData: ChunkData, quadCount: number, initialVertexArrays: Array<geometrics.VertexArrayType>, quadIdsByBlockAndSide: Uint16Array) {\r\n\t\t//DebugFrameLogger(\"Engine.authAddChunkData_withInternalQuads\")\r\n\t\t//DebugChunkLogger(chunkData.pos, \"Engine.authAddChunkData_withInternalQuads\")\r\n\r\n\t\t// create our chunk object\r\n\t\tconst chunk = new EngineChunk(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide)\r\n\t\tthis.chunks[chunkData.id] = chunk\r\n\r\n\t\t// attach chunk to neighbours, stitching meshes as required\r\n\t\tconst neighbourChunkPos = new v3()\r\n\t\tgeometrics.Sides.each(side => {\r\n\t\t\tneighbourChunkPos.setSum(chunkData.pos, side.deltaV3)\r\n\t\t\tconst chunkTestId = neighbourChunkPos.toString()\r\n\t\t\tconst neighbourChunk = this.chunks[chunkTestId]\r\n\t\t\tif (neighbourChunk) {\r\n\t\t\t\tchunk.attachNeighbour(side, neighbourChunk)\r\n\t\t\t\tneighbourChunk.attachNeighbour(side.opposite, chunk)\r\n\t\t\t}\r\n\t\t})\r\n\t\tEngineChunkBuilder.stitchChunks(chunk)\r\n\t}\r\n\tauthRemoveChunkData(chunkData: ChunkData) {\r\n\t\t//DebugChunkLogger(chunkData.pos, \"Engine.authRemoveChunkData\")\r\n\r\n\t\tconst chunk = this.chunks[chunkData.id]\r\n\r\n\t\tgeometrics.Sides.each(side => {\r\n\t\t\tconst neighbourChunk = chunk.neighboursBySideId[side.id]\r\n\t\t\tif (neighbourChunk) {\r\n\t\t\t\t//EngineChunkBuilder.unstitchChunk(neighbourChunk, side.opposite)\r\n\t\t\t\tneighbourChunk.detatchNeighbour(side.opposite)\r\n\t\t\t}\r\n\t\t})\r\n\t\tEngineChunkQuadLookupPool.release(chunk.quadIdsByBlockAndSide)\r\n\t\tchunk.destroy()\r\n\t\tdelete this.chunks[chunkData.id]\r\n\t}\r\n\tauthAddEntity() {\r\n\t}\r\n\tauthRemoveEntity() {\r\n\t}\r\n\tauthStart() {\r\n\t\tthis.started = true\r\n\t}\r\n\tauthOnFrame(time: number) {\r\n\r\n\t\tconst now = performance.now()\r\n\t\tconst elapsed = now - this.lastFrameTime\r\n\t\tthis.lastFrameTime = now\r\n\r\n\t\t// TODO: if started, do player controls including gravity, and send current position to this.authority.simUpdatePlayerPos()\r\n\t\t// TODO: also call any other this.authority.sim* methods depending on player input\r\n\r\n\t\t// TESTING\r\n\t\tthis.playerRot.set(this.playerInput.pitch, this.playerInput.heading, 0)\r\n\t\tconst playerRotationMatrix = m4.identity()\r\n\t\tm4.rotateY(playerRotationMatrix, this.playerRot.y, playerRotationMatrix) // heading\r\n\t\tm4.rotateX(playerRotationMatrix, this.playerRot.x, playerRotationMatrix) // pitch\r\n\r\n\t\tconst forwardInput = (this.playerInput.keysDown.s ? 1 : 0) + (this.playerInput.keysDown.w ? -1 : 0)\r\n\t\tconst rightInput = (this.playerInput.keysDown.d ? 1 : 0) + (this.playerInput.keysDown.a ? -1 : 0)\r\n\t\tconst upInput = (this.playerInput.keysDown.space ? 1 : 0) + (this.playerInput.keysDown.shift ? -1 : 0)\r\n\r\n\t\t// const forward = new v3(\r\n\t\t// \tMath.sin(this.playerInput.heading) * Math.cos(this.playerInput.pitch),\r\n\t\t// \tMath.sin(this.playerInput.pitch),\r\n\t\t// \t-Math.cos(this.playerInput.heading) * Math.cos(this.playerInput.pitch)\r\n\t\t// )\r\n\t\t// forward.multiplyScalar(0.5)\r\n\t\t// this.playerPos.add(forward)\r\n\r\n\t\tconst speed = <number>Config.speed * elapsed / 1000 * 60\r\n\r\n\t\t// right\r\n\t\tthis.playerPos.a[0] += rightInput * playerRotationMatrix[0] * speed\r\n\t\tthis.playerPos.a[1] += rightInput * playerRotationMatrix[1] * speed\r\n\t\tthis.playerPos.a[2] += rightInput * playerRotationMatrix[2] * speed\r\n\r\n\t\t// up\r\n\t\tthis.playerPos.a[0] += upInput * playerRotationMatrix[4] * speed\r\n\t\tthis.playerPos.a[1] += upInput * playerRotationMatrix[5] * speed\r\n\t\tthis.playerPos.a[2] += upInput * playerRotationMatrix[6] * speed\r\n\r\n\t\t// forward\r\n\t\tthis.playerPos.a[0] += forwardInput * playerRotationMatrix[8] * speed\r\n\t\tthis.playerPos.a[1] += forwardInput * playerRotationMatrix[9] * speed\r\n\t\tthis.playerPos.a[2] += forwardInput * playerRotationMatrix[10] * speed\r\n\r\n\t\tthis.authority.engineUpdatePlayerPos(this.playerPos, this.playerRot)\r\n\r\n\t\tthis.render(playerRotationMatrix)\r\n\r\n\t\tDebugHud.updatePlayer(this.playerPos, this.playerRot)\r\n\t}\r\n\trender(playerRotationMatrix: twgl.Mat4) {\r\n\t\t// handle resized browser window\r\n\t\ttwgl.resizeCanvasToDisplaySize(gl.canvas)\r\n\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n\r\n\t\t// clear screen\r\n\t\t//gl.clearColor(0, 0, 0, 1)\r\n\t\tgl.clearColor(0.3, 0.5, 0.8, 1)\r\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\r\n\t\tthis.renderChunks(playerRotationMatrix)\r\n\t}\r\n\trenderChunks(playerRotationMatrix: twgl.Mat4) {\r\n\t\tEngineChunkRenderer.initRenderProgram()\r\n\r\n\t\tconst aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\r\n\t\tm4.perspective(fov, aspect, zNear, zFar, projectionMatrix)\r\n\r\n\t\tconst cameraMatrix = m4.identity()\r\n\t\tm4.translate(cameraMatrix, this.playerPos.a, cameraMatrix)\r\n\t\t//console.log(this.playerInput.pitch, this.playerInput.heading)\r\n\t\t//m4.rotateY(cameraMatrix, -this.playerInput.heading, cameraMatrix)\r\n\t\t//m4.rotateX(cameraMatrix, this.playerInput.pitch, cameraMatrix)\r\n\t\tm4.multiply(cameraMatrix, playerRotationMatrix, cameraMatrix)\r\n\t\t//m4.rotateY(cameraMatrix, _time * 0.00004, cameraMatrix)\r\n\t\tconst viewMatrix = m4.inverse(cameraMatrix)\r\n\r\n\t\tconst viewProjectionMatrix = m4.multiply(projectionMatrix, viewMatrix)\r\n\r\n\t\tconst worldViewProjectionMatrix = m4.identity()\r\n\r\n\t\tlet renderBudget = 1000 // TODO: this is a totally arbitrary number\r\n\t\tfor (let chunkId in this.chunks) {\r\n\t\t\tlet chunk = this.chunks[chunkId]\r\n\r\n\t\t\tif (chunk.chunkData.chunkLoaderUnloading) { continue }\r\n\r\n\t\t\tm4.translation(chunk.worldPos.a, worldViewProjectionMatrix)\r\n\t\t\t//if (chunk.chunkData.chunkLoaderUnloading) { m4.translation(chunk.worldPos.clone().add(new v3(0,10,0)).a, worldViewProjectionMatrix) } // TESTING\r\n\t\t\t//m4.translation(chunk.worldPos.clone().multiplyScalar(1.001).a, worldViewProjectionMatrix) // VISIBLE GAP (and accumulated errors)\r\n\t\t\tm4.multiply(viewProjectionMatrix, worldViewProjectionMatrix, worldViewProjectionMatrix)\r\n\t\t\tEngineChunkRenderer.setWorldViewProjectionMatrix(worldViewProjectionMatrix)\r\n\r\n\t\t\trenderBudget = chunk.renderStep(renderBudget)\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/Engine.ts","import * as geometrics from \"geometrics\"\r\nimport EngineChunkVertexArrayPool from \"./EngineChunkVertexArrayPool\"\r\nimport EngineChunkMesh from \"./EngineChunkMesh\"\r\nimport ChunkData from \"../../ChunkData\"\r\nimport v3 from \"v3\"\r\nimport BlockPos from \"BlockPos\"\r\n\r\n\r\nexport default class EngineChunk {\r\n\r\n\tchunkData: ChunkData\r\n\tquadCount: number\r\n\tmeshes: Array<EngineChunkMesh>\r\n\tquadIdsByBlockAndSide: Uint16Array\r\n\tworldPos: v3\r\n\tneighboursBySideId: Array<EngineChunk>\r\n\tquadDirtyList: Array<number>\r\n\tquadHoleList: Array<number>\r\n\r\n\tconstructor(chunkData: ChunkData, quadCount: number, initialVertexArrays: Array<geometrics.VertexArrayType>, quadIdsByBlockAndSide: Uint16Array) {\r\n\t\tthis.chunkData = chunkData\r\n\t\t//console.log(`new EngineChunk ${this.id}`)\r\n\t\tthis.quadCount = quadCount\r\n\t\tthis.meshes = []\r\n\t\t//console.log(`initialVertexArrays: quadCount = ${quadCount}`)\r\n\t\tinitialVertexArrays.forEach((initialVertexArray, i) => {\r\n\t\t\t//if (i > 0) { return }\r\n\t\t\tconst initialWriteCount = Math.min(geometrics.maxQuadsPerMesh, quadCount - (i * geometrics.maxQuadsPerMesh))\r\n\t\t\t//console.log(`initialVertexArray: initialWriteCount = ${initialWriteCount}`)\r\n\t\t\tthis.meshes.push(new EngineChunkMesh(undefined, initialVertexArray, initialWriteCount))\r\n\t\t})\r\n\t\t//console.log(this.meshes)\r\n\t\tthis.quadIdsByBlockAndSide = quadIdsByBlockAndSide\r\n\r\n\t\tthis.worldPos = chunkData.pos.clone().multiplyScalar(geometrics.CHUNK_SIZE)\r\n\t\tthis.neighboursBySideId = []\r\n\t\tthis.quadDirtyList = [] // quads which have been removed this frame and have not been written to (candidates for intra-frame reuse)\r\n\t\tthis.quadHoleList = [] // quads which may be reused, but have already been zero'd out (dirty quads that did not get used)\r\n\t}\r\n\taddNewMesh() {\r\n\t\tconst newVertexArray: geometrics.VertexArrayType = new Uint32Array(EngineChunkVertexArrayPool.acquire())\r\n\t\tthis.meshes.push(new EngineChunkMesh(undefined, newVertexArray, 0))\r\n\t}\r\n\tdestroy() {\r\n\t\t//console.log(`EngineChunk.destroy ${this.id}`)\r\n\t\tthis.meshes.forEach(mesh => {\r\n\t\t\tEngineChunkVertexArrayPool.release(mesh.vertexArray)\r\n\t\t\tmesh.vao.destroy()\r\n\t\t})\r\n\t}\r\n\tget id() {\r\n\t\treturn this.chunkData.pos.toString()\r\n\t}\r\n\r\n\tattachNeighbour(side: geometrics.SideType, neighbourChunk: EngineChunk) {\r\n\t\tthis.neighboursBySideId[side.id] = neighbourChunk\r\n\t}\r\n\tdetatchNeighbour(side: geometrics.SideType) {\r\n\t\tthis.neighboursBySideId[side.id] = undefined\r\n\t}\r\n\r\n\taddQuad(blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\t\tlet quadId\r\n\t\t// prefer to draw over dirty quads, which will need to be updated anyway\r\n\t\tif (this.quadDirtyList.length) {\r\n\t\t\tquadId = this.quadDirtyList.shift()\r\n\t\t}\r\n\t\t// second preference is to fill up holes left by previously cleaned up quads, to avoid expanding our draw range and ultimately running out of space\r\n\t\telse if (this.quadHoleList.length) {\r\n\t\t\tquadId = this.quadHoleList.shift()\r\n\t\t}\r\n\t\t// if there are no dirty quads or holes to fill, append quads to the end\r\n\t\telse {\r\n\t\t\tquadId = this.quadCount\r\n\t\t\tthis.quadCount += 1\r\n\t\t}\r\n\r\n\t\tconst meshIndex = Math.floor(quadId / geometrics.maxQuadsPerMesh)\r\n\r\n\t\t// do we need to add a new mesh?\r\n\t\tif (meshIndex > this.meshes.length - 1) {\r\n\t\t\tthis.addNewMesh()\r\n\t\t}\r\n\r\n\t\tconst mesh = this.meshes[meshIndex]\r\n\t\tconst meshQuadId = quadId % geometrics.maxQuadsPerMesh\r\n\r\n\t\tconst blockAndSideId = blockPos.i * 6 + side.id\r\n\t\t// DEBUG (disabled along with unstitching, for now)\r\n\t\t//if (this.quadIdsByBlockAndSide[blockAndSideId] !== 0) {\r\n\t\t//\tconsole.log(`EngineChunk.addQuad: already a quad at ${blockPos.toString()}->${side.name}`)\r\n\t\t//\tconst buggyQuadId = this.quadIdsByBlockAndSide[blockAndSideId]\r\n\t\t//\tconst buggyMeshIndex = Math.floor(buggyQuadId / geometrics.maxQuadsPerMesh)\r\n\t\t//\tconst buggyMesh = this.meshes[buggyMeshIndex]\r\n\t\t//\tconst buggyMeshQuadId = buggyQuadId % geometrics.maxQuadsPerMesh\r\n\t\t//\tconst buggyCursor = buggyMeshQuadId * geometrics.quadVertexByteSize\r\n\t\t//\tfor (let i = 0; i < 4; i += 1) {\r\n\t\t//\t\tconsole.log(buggyMesh.vertexArray.subarray(buggyCursor + i*8, (buggyCursor + i * 8) + 7).join(', '))\r\n\t\t//\t}\r\n\t\t//}\r\n\r\n\t\tmesh.drawQuad(meshQuadId, blockPos, side, uvs, brightnesses)\r\n\r\n\t\t// DEBUG (disabled along with unstitching, for now)\r\n\t\t//if (this.quadIdsByBlockAndSide[blockAndSideId] !== 0) {\r\n\t\t//\tconsole.log(`new quad:`)\r\n\t\t//\tconst newCursor = meshQuadId * geometrics.quadVertexByteSize\r\n\t\t//\tfor (let i = 0; i < 4; i += 1) {\r\n\t\t//\t\tconsole.log(mesh.vertexArray.subarray(newCursor + i * 8, (newCursor + i * 8) + 7).join(', '))\r\n\t\t//\t}\r\n\t\t//}\r\n\r\n\t\tthis.quadIdsByBlockAndSide[blockAndSideId] = quadId + 1\r\n\t\t\r\n\t\treturn quadId\r\n\t}\r\n\tremoveQuad(blockPos: BlockPos, side: geometrics.SideType) {\r\n\t\tconst blockAndSideId = blockPos.i * 6 + side.id\r\n\t\tconst quadId = this.quadIdsByBlockAndSide[blockAndSideId] - 1\r\n\t\tif (quadId > -1) {\r\n\t\t\t//console.log(`chunk ${this.id} removeQuad ${quadId}`)\r\n\t\t\tthis.quadIdsByBlockAndSide[blockAndSideId] = 0\r\n\t\t\tthis.quadDirtyList.push(quadId) // leave it in the vertexArray for now, in case another quad needs to be drawn this frame!\r\n\t\t}\r\n\t}\r\n\tupdateQuadAO(blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\t\tconst quadId = blockPos.getQuadId(side)\r\n\t\tconst meshIndex = Math.floor(quadId / geometrics.maxQuadsPerMesh)\r\n\t\tconst mesh = this.meshes[meshIndex]\r\n\t\tconst meshQuadId = quadId % geometrics.maxQuadsPerMesh\r\n\r\n\t\tconst blockAndSideId = blockPos.i * 6 + side.id\r\n\t\tif (this.quadIdsByBlockAndSide[blockAndSideId] === 0) { debugger }\r\n\r\n\t\tmesh.updateQuadAO(meshQuadId, blockPos, side, uvs, brightnesses)\r\n\t}\r\n\r\n\trenderStep(renderBudget: number) {\r\n\t\tthis.cleanupRemovedQuads()\r\n\t\tthis.meshes.forEach((mesh, meshId) => {\r\n\t\t\tlet meshQuadCount = geometrics.maxQuadsPerMesh // all meshes except the last one should render maxQuadsPerMesh\r\n\t\t\tif (meshId === this.meshes.length - 1) { // the last mesh...\r\n\t\t\t\tmeshQuadCount = ((this.quadCount - 1) % geometrics.maxQuadsPerMesh) + 1 // should render the remaining quads (but beware if quadCount === maxQuadsPerMesh!)\r\n\t\t\t}\r\n\t\t\trenderBudget = mesh.render(renderBudget, meshQuadCount)\r\n\t\t})\r\n\t\treturn renderBudget\r\n\t}\r\n\tcleanupRemovedQuads() {\r\n\t\tif (this.quadDirtyList.length) {\r\n\t\t\tthis.quadDirtyList.forEach(quadId => {\r\n\t\t\t\tconst meshIndex = Math.floor(quadId / geometrics.maxQuadsPerMesh)\r\n\t\t\t\tconst mesh = this.meshes[meshIndex]\r\n\t\t\t\tconst meshQuadId = quadId % geometrics.maxQuadsPerMesh\r\n\r\n\t\t\t\tmesh.clearQuad(meshQuadId)\r\n\r\n\t\t\t\tthis.quadHoleList.push(quadId)\r\n\t\t\t})\r\n\t\t\tthis.quadDirtyList = []\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunk.ts","import * as EngineChunkQuadWriter from \"./EngineChunkQuadWriter\"\r\nimport * as EngineChunkRenderer from \"./EngineChunkRenderer\"\r\nimport EngineChunkMeshVAO from \"./EngineChunkMeshVAO\"\r\nimport * as geometrics from \"geometrics\"\r\nimport v3 from \"v3\"\r\nimport BlockPos from \"BlockPos\"\r\n\r\nexport default class EngineChunkMesh {\r\n\r\n\treadyToRender: boolean = false\r\n\tminDirtyQuad: number = Infinity\r\n\tmaxDirtyQuad: number = -Infinity\r\n\r\n\tconstructor(public vao: EngineChunkMeshVAO, public vertexArray: geometrics.VertexArrayType, initialWriteCount: number = 0) {\r\n\t\tthis.vao = vao !== undefined ? vao : EngineChunkRenderer.acquireVAO()\r\n\t\tif (initialWriteCount) {\r\n\t\t\t//console.log(`initialWriteCount = ${initialWriteCount}`)\r\n\t\t\tthis.minDirtyQuad = 0\r\n\t\t\tthis.maxDirtyQuad = initialWriteCount - 1\r\n\t\t}\r\n\t}\r\n\tdrawQuad(quadId: number, blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\t\tEngineChunkQuadWriter.drawQuad(this.vertexArray, quadId, blockPos, side, uvs, brightnesses)\r\n\t\tthis.minDirtyQuad = Math.min(this.minDirtyQuad, quadId)\r\n\t\tthis.maxDirtyQuad = Math.max(this.maxDirtyQuad, quadId)\r\n\t}\r\n\tclearQuad(quadId: number) {\r\n\t\tEngineChunkQuadWriter.clearQuad(this.vertexArray, quadId)\r\n\t\tthis.minDirtyQuad = Math.min(this.minDirtyQuad, quadId)\r\n\t\tthis.maxDirtyQuad = Math.max(this.maxDirtyQuad, quadId)\r\n\t}\r\n\tupdateQuadAO(quadId: number, blockPos: BlockPos, side: geometrics.SideType, uvs: Array<number>, brightnesses: Array<number>) {\r\n\t\tconst changed = EngineChunkQuadWriter.updateQuadAO(this.vertexArray, quadId, blockPos, side, uvs, brightnesses)\r\n\t\tif (changed) {\r\n\t\t\tthis.minDirtyQuad = Math.min(this.minDirtyQuad, quadId)\r\n\t\t\tthis.maxDirtyQuad = Math.max(this.maxDirtyQuad, quadId)\r\n\t\t}\r\n\t}\r\n\r\n\tupdateVAO(renderBudget: number) {\r\n\t\tif (renderBudget > 0 && this.minDirtyQuad !== Infinity) {\r\n\r\n\t\t\t//console.log(`EngineChunkMesh buffering quads ${this.minDirtyQuad} .. ${this.maxDirtyQuad}`)\r\n\r\n\t\t\tvar quadPushCount = this.maxDirtyQuad - this.minDirtyQuad + 1\r\n\t\t\trenderBudget -= Math.max(quadPushCount, 200) // increase the budget cost of small updates, since 1x1000 bufferSubData calls probably costs way more than 1000x1\r\n\r\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vao.glBuffer)\r\n\t\t\t/*gl.bufferSubData(gl.ARRAY_BUFFER,\r\n\t\t\t\tthis.minDirtyQuad * geometrics.quadVertexByteSize * 4, // dstByteOffset\r\n\t\t\t\tthis.vertexArray,\r\n\t\t\t\tthis.minDirtyQuad * geometrics.quadVertexByteSize, // srcOffset\r\n\t\t\t\tquadPushCount * geometrics.quadVertexByteSize // length (bytes)\r\n\t\t\t)*/\r\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER,\r\n\t\t\t\tthis.minDirtyQuad * geometrics.quadByteStride, // dstByteOffset\r\n\t\t\t\tthis.vertexArray,\r\n\t\t\t\tthis.minDirtyQuad * geometrics.quadVertexByteSize / 4, // srcOffset\r\n\t\t\t\tquadPushCount * geometrics.quadByteStride / 4 // length (bytes)\r\n\t\t\t)\r\n\r\n\t\t\t// nothing left to write\r\n\t\t\tthis.minDirtyQuad = Infinity\r\n\t\t\tthis.maxDirtyQuad = -Infinity\r\n\r\n\t\t\tthis.readyToRender = true\r\n\r\n\t\t\t//gl.bindBuffer(gl.ARRAY_BUFFER, this.vao.glBuffer)\r\n\t\t\t//gl.bufferSubData(gl.ARRAY_BUFFER,\r\n\t\t\t//\tthis.minDirtyQuad * geometrics.quadByteStride * 4, // dstByteOffset\r\n\t\t\t//\tthis.vertexArray,\r\n\t\t\t//\tthis.minDirtyQuad * geometrics.quadByteStride, // srcOffset\r\n\t\t\t//\t1 * geometrics.quadByteStride // length (bytes)\r\n\t\t\t//)\r\n\r\n\t\t\t//gl.bindBuffer(gl.ARRAY_BUFFER, this.vao.glBuffer)\r\n\t\t\t//gl.bufferSubData(gl.ARRAY_BUFFER, this.minDirtyQuad * 128, this.vertexArray.subarray(this.minDirtyQuad * 32, (this.minDirtyQuad + 1) * 32)) // 128 = 8 elements per vertex * 4 verts per quad * 4 bytes per element?\r\n\r\n\r\n\t\t\t//this.minDirtyQuad += 1\r\n\t\t\t//if (this.minDirtyQuad > this.maxDirtyQuad) {\r\n\t\t\t//\tthis.minDirtyQuad = Infinity\r\n\t\t\t//\tthis.maxDirtyQuad = -Infinity\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn renderBudget\r\n\t}\r\n\trender(renderBudget: number, quadCount: number) {\r\n\t\trenderBudget = this.updateVAO(renderBudget)\r\n\t\tif (this.readyToRender) {\r\n\t\t\tthis.vao.partialRender(quadCount)\r\n\t\t}\r\n\t\treturn renderBudget\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkMesh.ts","const canvas = <HTMLCanvasElement>document.getElementById(\"mainCanvas\")\r\nconst gl = <WebGL2RenderingContext>canvas.getContext(\"webgl2\", {\r\n\tantialias: false,\r\n})\r\n\r\nexport default gl\r\n\r\nglobal.gl = gl\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/gl.ts","import * as geometrics from \"geometrics\"\r\nimport * as EngineChunkRenderer from \"./EngineChunkRenderer\"\r\nimport * as twgl from \"twgl.js\"\r\n\r\nexport default class EngineChunkMeshVAO {\r\n\r\n\tglBuffer: WebGLBuffer\r\n\tvaoInfo: any\r\n\r\n\tconstructor() {\r\n\r\n\t\t// this would be: twgl.createBufferFromTypedArray(gl, this.array, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW)\r\n\t\t// ...except that we don't need to send the array to the GPU yet (because it doesn't have any data in it yet)\r\n\t\tthis.glBuffer = gl.createBuffer()\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.glBuffer)\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, geometrics.bufferByteSize, gl.DYNAMIC_DRAW)\r\n\r\n\t\tconst bufferInfo = EngineChunkRenderer.createBufferInfo(this.glBuffer)\r\n\r\n\t\t// yes, all this stuff really does need to be set for every buffer (unless I use ARB_vertex_attrib_binding)\r\n\t\tthis.vaoInfo = twgl.createVertexArrayInfo(gl, [EngineChunkRenderer.programInfo], bufferInfo)\r\n\t}\r\n\tpartialRender(meshQuadCount: number) {\r\n\t\t// note: it's assumed that EngineChunkRenderer.preRender() has already been called!\r\n\t\ttwgl.setBuffersAndAttributes(gl, EngineChunkRenderer.programInfo, this.vaoInfo) // i.e. gl.bindVertexArray(this.vaoInfo.vertexArrayObject)\r\n\t\t// twgl.drawBufferInfo(gl, this.vaoInfo) ... but i want to set an upper limit\r\n\t\t// gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount)\r\n\t\tgl.drawElementsInstanced(gl.TRIANGLES, 6, EngineChunkRenderer.indexBufferGlType, 0, meshQuadCount)\r\n\t}\r\n\tdestroy() {\r\n\t\tEngineChunkRenderer.releaseVAO(this)\r\n\t}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/chunk/EngineChunkMeshVAO.ts","import * as geometrics from \"geometrics\"\r\nimport v3 from \"v3\"\r\nimport BlockTypes from \"./BlockTypes\"\r\nimport EngineChunk from \"client/engine/chunk/EngineChunk\"\r\n\r\nexport default class BlockPos {\r\n\r\n\tengineChunk: EngineChunk\r\n\tpos: v3\r\n\tblockDataOverride: Uint8Array\r\n\ti: number\r\n\r\n\tconstructor(engineChunk?: EngineChunk, pos?: v3, blockDataOverride?: Uint8Array) {\r\n\t\tthis.engineChunk = engineChunk\r\n\t\tthis.pos = pos ? pos.clone() : new v3()\r\n\t\tthis.blockDataOverride = blockDataOverride\r\n\t\tthis.recalculateIndex()\r\n\t}\r\n\tclone() {\r\n\t\treturn new BlockPos(this.engineChunk, this.pos)\r\n\t}\r\n\trecalculateIndex() {\r\n\t\tconst a = this.pos.a\r\n\t\tthis.i = a[0] * geometrics.CHUNK_SIZE_SQUARED + a[2] * geometrics.CHUNK_SIZE + a[1]\r\n\t}\r\n\tget blockDataSource(): Uint8Array {\r\n\t\treturn this.engineChunk ? this.engineChunk.chunkData.blocks : this.blockDataOverride\r\n\t}\r\n\r\n\tgetQuadId(side: geometrics.SideType) {\r\n\t\treturn (this.engineChunk ? this.engineChunk.quadIdsByBlockAndSide[this.i * 6 + side.id] - 1 : -1)\r\n\t}\r\n\tgetWorldPoint(outV3: v3) {\r\n\t\toutV3.setFrom(this.engineChunk.worldPos).multiplyScalar(geometrics.CHUNK_SIZE).add(this.pos)\r\n\t}\r\n\tgetBlockData() {\r\n\t\tif (this.engineChunk) {\r\n\t\t\treturn this.engineChunk.chunkData.blocks[this.i]\r\n\t\t}\r\n\t\telse if (this.blockDataOverride) {\r\n\t\t\treturn this.blockDataOverride[this.i]\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\tgetBlockType() {\r\n\t\treturn BlockTypes.byId[this.getBlockData()]\r\n\t}\r\n\tisOpaque() {\r\n\t\treturn this.getBlockData() !== 0\r\n\t}\r\n\tisTransparent() {\r\n\t\treturn this.getBlockData() === 0\r\n\t}\r\n\t//setBlockData(newBlockData) {\r\n\t//\tthis.chunk.alterOneBlock(this, newBlockData)\r\n\t//}\r\n\tsetAdjacentToBlockPos(refBlockPos: BlockPos, side: geometrics.SideType) {\r\n\t\tthis.pos.setFrom(refBlockPos.pos)\r\n\t\tthis.engineChunk = refBlockPos.engineChunk\r\n\t\tthis.blockDataOverride = refBlockPos.blockDataOverride\r\n\t\tlet newAxisPos = refBlockPos.pos.a[side.axis] + side.axisDelta\r\n\t\tlet newIndex = refBlockPos.i + side.deltaIndex\r\n\t\tif (newAxisPos < 0 || newAxisPos >= geometrics.CHUNK_SIZE) {\r\n\t\t\tif (this.engineChunk) {\r\n\t\t\t\tif (this.engineChunk.neighboursBySideId) {\r\n\t\t\t\t\tconst neighbourChunk = this.engineChunk.neighboursBySideId[side.id]\r\n\t\t\t\t\tthis.engineChunk = neighbourChunk\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.engineChunk = undefined\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.blockDataOverride = undefined\r\n\t\t\t}\r\n\t\t\tnewAxisPos += geometrics.CHUNK_SIZE * -side.axisDelta\r\n\t\t\tnewIndex += geometrics.CHUNK_SIZE * -side.deltaIndex\r\n\t\t}\r\n\t\tthis.pos.a[side.axis] = newAxisPos\r\n\t\tthis.i = newIndex\r\n\t}\r\n\t/*getAdjacentBlockPos(side) {\r\n\t\tvar neighbourChunk = this.chunk.neighboursBySideId[side.id]\r\n\t\tif (side === geometrics.Sides.TOP) {\r\n\t\t\tif (this.pos.a[1] === geometrics.CHUNK_SIZE - 1) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, this.pos.a[0], 0, this.pos.a[2] ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (side === geometrics.Sides.BOTTOM) {\r\n\t\t\tif (this.pos.a[1] === 0) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, this.pos.a[0], geometrics.CHUNK_SIZE - 1, this.pos.a[2] ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (side === geometrics.Sides.NORTH) {\r\n\t\t\tif (this.pos.a[2] === geometrics.CHUNK_SIZE - 1) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, this.pos.a[0], this.pos.a[1], 0 ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (side === geometrics.Sides.SOUTH) {\r\n\t\t\tif (this.pos.a[2] === 0) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, this.pos.a[0], this.pos.a[1], geometrics.CHUNK_SIZE - 1 ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (side === geometrics.Sides.EAST) {\r\n\t\t\tif (this.pos.a[0] === geometrics.CHUNK_SIZE - 1) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, 0, this.pos.a[1], this.pos.a[2] ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (side === geometrics.Sides.WEST) {\r\n\t\t\tif (this.pos.a[0] === 0) {\r\n\t\t\t\treturn neighbourChunk ? new BlockPos( neighbourChunk, geometrics.CHUNK_SIZE - 1, this.pos.a[1], this.pos.a[2] ) : BlockPos.badPos\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new BlockPos(this.chunk, this.pos.a[0] + side.dx, this.pos.a[1] + side.dy, this.pos.a[2] + side.dz)\r\n\t}*/\r\n\tadd(dx: number, dy: number, dz: number) {\r\n\t\tif (dy > 0) {\r\n\t\t\tthis.pos.a[1] += dy\r\n\t\t\twhile (this.pos.a[1] > geometrics.CHUNK_SIZE-1) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.TOP.id ]\r\n\t\t\t\tthis.pos.a[1] -= geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (dy < 0) {\r\n\t\t\tthis.pos.a[1] += dy\r\n\t\t\twhile (this.pos.a[1] < 0) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.BOTTOM.id ]\r\n\t\t\t\tthis.pos.a[1] += geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (dz > 0) {\r\n\t\t\tthis.pos.a[2] += dz\r\n\t\t\twhile (this.pos.a[2] > geometrics.CHUNK_SIZE-1) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.NORTH.id ]\r\n\t\t\t\tthis.pos.a[2] -= geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (dz < 0) {\r\n\t\t\tthis.pos.a[2] += dz\r\n\t\t\twhile (this.pos.a[2] < 0) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.SOUTH.id ]\r\n\t\t\t\tthis.pos.a[2] += geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (dx > 0) {\r\n\t\t\tthis.pos.a[0] += dx\r\n\t\t\twhile (this.pos.a[0] > geometrics.CHUNK_SIZE-1) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.EAST.id ]\r\n\t\t\t\tthis.pos.a[0] -= geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (dx < 0) {\r\n\t\t\tthis.pos.a[0] += dx\r\n\t\t\twhile (this.pos.a[0] < 0) {\r\n\t\t\t\tthis.engineChunk = this.engineChunk.neighboursBySideId[ geometrics.Sides.byName.WEST.id ]\r\n\t\t\t\tthis.pos.a[0] += geometrics.CHUNK_SIZE\r\n\t\t\t\tif (!this.engineChunk) { return }\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.recalculateIndex()\r\n\t}\r\n\r\n\teachBlockInChunk(callback: () => void) {\r\n\t\tconst a = this.pos.a\r\n\t\tthis.i = 0\r\n\t\tfor (a[0] = 0; a[0] < geometrics.CHUNK_SIZE; a[0] += 1) {\r\n\t\t\tfor (a[2] = 0; a[2] < geometrics.CHUNK_SIZE; a[2] += 1) {\r\n\t\t\t\tfor (a[1] = 0; a[1] < geometrics.CHUNK_SIZE; a[1] += 1) {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t\tthis.i += 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teachBlockOnFace(chunk: EngineChunk, side: geometrics.SideType, callback: () => void) {\r\n\t\tthis.engineChunk = chunk\r\n\t\tconst a = this.pos.a\r\n\t\tconst freeAxis1 = side.axis === 0 ? 1 : 0\r\n\t\tconst freeAxis2 = side.axis === 2 ? 1 : 2\r\n\t\ta[side.axis] = side.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0 // locked axis\r\n\t\tfor (a[freeAxis1] = 0; a[freeAxis1] < geometrics.CHUNK_SIZE; a[freeAxis1] += 1) {\r\n\t\t\tfor (a[freeAxis2] = 0; a[freeAxis2] < geometrics.CHUNK_SIZE; a[freeAxis2] += 1) {\r\n\t\t\t\tthis.recalculateIndex()\r\n\t\t\t\tcallback()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\teachBlockOnEdge(chunk: EngineChunk, side1: geometrics.SideType, side2: geometrics.SideType, callback: () => void) {\r\n\t\tthis.engineChunk = chunk\r\n\t\tconst a = this.pos.a\r\n\t\tconst freeAxis = side1.axis !== 0 && side2.axis !== 0 ? 0 : side1.axis !== 1 && side2.axis !== 1 ? 1 : 2\r\n\t\ta[side1.axis] = side1.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0\r\n\t\ta[side2.axis] = side2.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0\r\n\t\tfor (a[freeAxis] = 0; a[freeAxis] < geometrics.CHUNK_SIZE; a[freeAxis] += 1) {\r\n\t\t\tthis.recalculateIndex()\r\n\t\t\tcallback()\r\n\t\t}\r\n\t}\r\n\tsetBlockOnCorner(chunk: EngineChunk, side1: geometrics.SideType, side2: geometrics.SideType, side3: geometrics.SideType) {\r\n\t\tthis.engineChunk = chunk\r\n\t\tconst a = this.pos.a\r\n\t\ta[side1.axis] = side1.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0\r\n\t\ta[side2.axis] = side2.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0\r\n\t\ta[side3.axis] = side3.axisDelta === 1 ? geometrics.CHUNK_SIZE - 1 : 0\r\n\t\tthis.recalculateIndex()\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `BlockPos(${this.pos.toString()} @ ${this.engineChunk ? this.engineChunk.chunkData.pos.toString() : \"no-chunk\"})`\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/BlockPos.ts","import * as keycode from \"keycode\"\r\n\r\nconst keynames = {\r\n\t[keycode('up')] : \"up\",\r\n\t[keycode('down')] : \"down\",\r\n\t[keycode('left')] : \"left\",\r\n\t[keycode('right')] : \"right\",\r\n\t[keycode('w')] : \"w\",\r\n\t[keycode('s')] : \"s\",\r\n\t[keycode('a')] : \"a\",\r\n\t[keycode('d')] : \"d\",\r\n\t[keycode('shift')] : \"shift\",\r\n\t[keycode('space')] : \"space\",\r\n}\r\n\r\nexport default class PlayerInput {\r\n\r\n\tdomElement: HTMLElement\r\n\tmouseSpeed: number\r\n\tpointerLocked: boolean\r\n\theading: number\r\n\tpitch: number\r\n\tkeysDown: { [key: string]: boolean }\r\n\tkeysPressed: { [key: string]: boolean }\r\n\r\n\tconstructor(private onClick: (event: MouseEvent) => void) {\r\n\t\tthis.domElement = gl.canvas\r\n\t\tthis.mouseSpeed = 0.002\r\n\t\tthis.pointerLocked = false\r\n\t\tthis.heading = 0\r\n\t\tthis.pitch = 0\r\n\t\tthis.keysDown = {}\r\n\t\tthis.keysPressed = {}\r\n\t\tthis.initMouse()\r\n\t\tthis.initKeys()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.keysPressed = {}\r\n\t}\r\n\r\n\tinitMouse() {\r\n\t\t// on click, request pointer lock (or if already locked, fire a click event in Engine)\r\n\t\tthis.domElement.addEventListener('click', event => {\r\n\t\t\tif (!this.pointerLocked) {\r\n\t\t\t\tthis.domElement.requestPointerLock = this.domElement.requestPointerLock // || this.domElement.mozRequestPointerLock || this.domElement.webkitRequestPointerLock\r\n\t\t\t\tthis.domElement.requestPointerLock()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.onClick(event)\r\n\t\t\t}\r\n\t\t}, false)\r\n\r\n\t\t// listen for pointer lock event\r\n\t\tdocument.addEventListener('pointerlockchange', this.onPointerLockChange.bind(this), false)\r\n\t\tdocument.addEventListener('mozpointerlockchange', this.onPointerLockChange.bind(this), false)\r\n\t\tdocument.addEventListener('webkitpointerlockchange', this.onPointerLockChange.bind(this), false)\r\n\r\n\t\t// update player camera rotation during pointer lock\r\n\t\tdocument.addEventListener('mousemove', event => {\r\n\t\t\tif (this.pointerLocked) {\r\n\t\t\t\tthis.heading -= this.mouseSpeed * (event.movementX ) // || event.mozMovementX || event.webkitMovementX || 0)\r\n\t\t\t\tthis.pitch -= this.mouseSpeed * (event.movementY ) // || event.mozMovementY || event.webkitMovementY || 0)\r\n\t\t\t\twhile (this.heading > Math.PI) { this.heading -= 2 * Math.PI }\r\n\t\t\t\twhile (this.heading < Math.PI) { this.heading += 2 * Math.PI }\r\n\t\t\t\tthis.pitch = Math.min(Math.max(-Math.PI / 2, this.pitch), Math.PI / 2) // clamp to up and down\r\n\t\t\t}\r\n\t\t}, false)\r\n\t}\r\n\tonPointerLockChange(_event: Event) {\r\n\t\tif (document.pointerLockElement === this.domElement ) { // || document.mozPointerLockElement === this.domElement || document.webkitPointerLockElement === this.domElement) {\r\n\t\t\tthis.pointerLocked = true\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.pointerLocked = false\r\n\t\t}\r\n\t}\r\n\tinitKeys() {\r\n\t\tdocument.addEventListener('keydown', event => {\r\n\t\t\tconst keyname = keynames[event.which]\r\n\t\t\tif (keyname) {\r\n\t\t\t\tthis.keysDown[keyname] = true\r\n\t\t\t\tthis.keysPressed[keyname] = true\r\n\t\t\t}\r\n\t\t}, false)\r\n\t\tdocument.addEventListener('keyup', event => {\r\n\t\t\tconst keyname = keynames[event.which]\r\n\t\t\tif (keyname) {\r\n\t\t\t\tthis.keysDown[keyname] = false\r\n\t\t\t}\r\n\t\t}, false)\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/engine/PlayerInput.ts","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nexports = module.exports = function(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = 24\n// module chunks = 0","import * as geometrics from \"geometrics\"\r\nimport ChunkData from \"../ChunkData\"\r\nimport v3 from \"v3\"\r\nimport * as WorkerManager from \"../worker/WorkerManager\"\r\nimport TaskGenerateAndMeshChunk from \"../worker/TaskGenerateAndMeshChunk\"\r\nimport DebugChunkLogger from \"../DebugChunkLogger\"\r\nimport DebugFrameLogger from \"../DebugFrameLogger\"\r\nimport LocalAuthority from \"./LocalAuthority\"\r\nimport VoxelsInSphere from \"VoxelsInSphere\"\r\nimport DebugHud from \"../engine/DebugHud\"\r\n\r\nconst cursorPos = new v3()\r\n\r\nexport default class ChunkLoader {\r\n\r\n\tcenterPos: v3\r\n\taddQueue: Array<v3>\r\n\tremoveQueue: Array<string>\r\n\ttasks: { [key: string]: { taskId: number, tag: number } }\r\n\tsortedRelativePositions: Array<Array<number>>\r\n\tnewTag: number\r\n\r\n\tconstructor(private localAuthority: LocalAuthority, private radius: number) {\r\n\t\tthis.centerPos = new v3(NaN, NaN, NaN)\r\n\t\tthis.addQueue = []\r\n\t\tthis.removeQueue = []\r\n\t\tthis.tasks = {}\r\n\t\tthis.sortedRelativePositions = VoxelsInSphere.getSortedList(radius)\r\n\t\tthis.newTag = 1\r\n\t}\r\n\tupdatePlayerPos(playerPos: v3) {\r\n\t\tconst newCenterPos = geometrics.worldPosToChunkPos(playerPos)\r\n\t\t\r\n\t\t// no change? short circuit\r\n\t\tif (this.centerPos.exactEquals(newCenterPos)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.centerPos = newCenterPos\r\n\t\tconsole.log(`%cChunkLoader: new chunk center is ${newCenterPos.id}`, 'color: teal;')\r\n\r\n\t\tthis.newTag = this.newTag === 1 ? 2 : 1 // toggle between 1 and 2\r\n\t\tthis.addQueue = []\r\n\t\tthis.removeQueue = []\r\n\r\n\t\tconst positionCount = this.sortedRelativePositions.length\r\n\t\tfor (let i = 0; i < positionCount; i += 1) {\r\n\t\t\tconst deltaPos = this.sortedRelativePositions[i]\r\n\t\t\tconst x = deltaPos[0] + newCenterPos.a[0]\r\n\t\t\tconst y = deltaPos[1] + newCenterPos.a[1]\r\n\t\t\tconst z = deltaPos[2] + newCenterPos.a[2]\r\n\t\t\tcursorPos.set(x, y, z)\r\n\t\t\tconst cursorHash = x + ',' + y + ',' + z\r\n\r\n\t\t\tconst loadedChunk = this.localAuthority.chunks[cursorHash]\r\n\t\t\tif (loadedChunk) {\r\n\t\t\t\tloadedChunk.chunkLoaderTag = this.newTag\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst task = this.tasks[cursorHash]\r\n\t\t\t\tif (task) {\r\n\t\t\t\t\ttask.tag = this.newTag\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.addQueue.push(cursorPos.clone())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let chunkId in this.localAuthority.chunks) {\r\n\t\t\tconst chunk = this.localAuthority.chunks[chunkId]\r\n\t\t\tif (chunk.chunkLoaderTag !== this.newTag) {\r\n\t\t\t\tthis.removeQueue.push(chunkId)\r\n\t\t\t\tchunk.chunkLoaderTag = this.newTag\r\n\t\t\t\tchunk.chunkLoaderUnloading = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchunk.chunkLoaderUnloading = false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let chunkId in this.tasks) {\r\n\t\t\tconst task = this.tasks[chunkId]\r\n\t\t\tif (task.tag !== this.newTag) {\r\n\t\t\t\tTaskGenerateAndMeshChunk.cancel(task.taskId)\r\n\t\t\t\tdelete this.tasks[chunkId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tonFrame() {\r\n\t\tif (this.removeQueue.length) {\r\n\t\t\tconst removeChunkId = this.removeQueue.shift()\r\n\t\t\tthis.localAuthority.onChunkUnloaded(this.localAuthority.chunks[removeChunkId])\r\n\t\t}\r\n\t\tif (this.addQueue.length) {\r\n\t\t\tconst chunkPos = this.addQueue.shift()\r\n\t\t\tconst chunkId = chunkPos.id\r\n\t\t\tconst taskId = TaskGenerateAndMeshChunk.queue(\r\n\t\t\t\tchunkPos,\r\n\t\t\t\t(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide) => {\r\n\t\t\t\t\tchunkData.chunkLoaderTag = this.newTag\r\n\t\t\t\t\tchunkData.chunkLoaderUnloading = false\r\n\t\t\t\t\tthis.localAuthority.onChunkLoaded(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide)\r\n\t\t\t\t\tdelete this.tasks[chunkId]\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.tasks[chunkId] = { taskId, tag: this.newTag }\r\n\t\t}\r\n\t\tDebugHud.updateChunks(Object.keys(this.localAuthority.chunks).length, this.addQueue.length, this.removeQueue.length)\r\n\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/singleplayer/ChunkLoader.ts","import v3 from \"v3\"\r\nimport ChunkData from \"../ChunkData\"\r\nimport * as WorkerManager from \"./WorkerManager\"\r\nimport * as WorkerObligation from \"./WorkerObligation\"\r\nimport * as ChunkGeneration from \"../singleplayer/ChunkGeneration\"\r\nimport * as geometrics from \"geometrics\"\r\nimport EngineChunkBuilder from \"../engine/chunk/EngineChunkBuilder\"\r\nimport EngineChunkVertexArrayPool from \"../engine/chunk/EngineChunkVertexArrayPool\"\r\nimport EngineChunkQuadLookupPool from \"../engine/chunk/EngineChunkQuadLookupPool\"\r\nimport Pool from \"Pool\"\r\n\r\nconst TASK_TYPE_ID = \"TaskGenerateAndMeshChunk\"\r\n\r\nexport default {\r\n\tid: TASK_TYPE_ID,\r\n\tcancel(taskId: number) {\r\n\t\tWorkerManager.cancelTask(taskId)\r\n\t},\r\n\tqueue(chunkPos: v3, onComplete: (chunkData: ChunkData, quadCount: number, vertexArrays: Array<geometrics.VertexArrayType>, quadIdsByBlockAndSide: Uint16Array) => void) {\r\n\t\tconst chunkId = chunkPos.toString()\r\n\t\tlet chunkData\r\n\r\n\t\tconst taskId = WorkerManager.queueTask(\r\n\t\t\tTASK_TYPE_ID,\r\n\t\t\t() => {\r\n\t\t\t\t// this allocation is deferred until the task starts, because the onCancelled handler (below) doesn't get called if the task is cancelled before it starts)\r\n\t\t\t\tchunkData = ChunkData.pool.acquire() // n.b. chunkData may contain old data, so make sure to set everything!\r\n\t\t\t\tchunkData.setChunkPos(chunkPos)\r\n\r\n\t\t\t\tconst quadIdsByBlockAndSide = EngineChunkQuadLookupPool.acquire()\r\n\t\t\t\tconst initialVertexArrays = [EngineChunkVertexArrayPool.acquire()]\r\n\r\n\t\t\t\tconst requestPayload = {\r\n\t\t\t\t\tchunkPos: [chunkPos.a[0], chunkPos.a[1], chunkPos.a[2]],\r\n\t\t\t\t\tblockData: chunkData.blocks.buffer,\r\n\t\t\t\t\tquadIdsByBlockAndSide: quadIdsByBlockAndSide.buffer,\r\n\t\t\t\t\tinitialVertexArrays: initialVertexArrays.map(a => a.buffer),\r\n\t\t\t\t}\r\n\t\t\t\tconst transferableObjects = [\r\n\t\t\t\t\tchunkData.blocks.buffer,\r\n\t\t\t\t\tquadIdsByBlockAndSide.buffer,\r\n\t\t\t\t\t...(initialVertexArrays.map(a => a.buffer)),\r\n\t\t\t\t]\r\n\t\t\t\treturn { requestPayload, transferableObjects }\r\n\t\t\t},\r\n\t\t\t(completePayload: WorkerManager.WorkerPayload) => {\r\n\t\t\t\tchunkData.blocks = new Uint8Array(completePayload.blockData)\r\n\r\n\t\t\t\tconst unusedVertexArrays = completePayload.unusedVertexArrays.map(buffer => new Uint32Array(buffer))\r\n\t\t\t\tunusedVertexArrays.forEach(vertexArray => {\r\n\t\t\t\t\tEngineChunkVertexArrayPool.release(vertexArray)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst quadCount = <number>completePayload.quadCount\r\n\t\t\t\tconst vertexArrays = completePayload.vertexArrays.map(buffer => new Uint32Array(buffer))\r\n\t\t\t\tconst quadIdsByBlockAndSide = new Uint16Array(completePayload.quadIdsByBlockAndSide)\r\n\r\n\t\t\t\tonComplete(chunkData, quadCount, vertexArrays, quadIdsByBlockAndSide)\r\n\t\t\t},\r\n\t\t\t(cancelledPayload: WorkerManager.WorkerPayload) => {\r\n\t\t\t\tchunkData.blocks = new Uint8Array(cancelledPayload.blockData)\r\n\t\t\t\tChunkData.pool.release(chunkData)\r\n\r\n\t\t\t\tconst cancelledQuadIdsByBlockAndSide = new Uint16Array(cancelledPayload.quadIdsByBlockAndSide)\r\n\t\t\t\tEngineChunkQuadLookupPool.release(cancelledQuadIdsByBlockAndSide)\r\n\r\n\t\t\t\tconst unusedVertexArrays = cancelledPayload.unusedVertexArrays.map(buffer => new Uint32Array(buffer))\r\n\t\t\t\tunusedVertexArrays.forEach(vertexArray => {\r\n\t\t\t\t\tEngineChunkVertexArrayPool.release(vertexArray)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst vertexArrays = cancelledPayload.vertexArrays.map(buffer => new Uint32Array(buffer))\r\n\t\t\t\tvertexArrays.forEach(vertexArray => {\r\n\t\t\t\t\tEngineChunkVertexArrayPool.release(vertexArray)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn taskId\r\n\t},\r\n\twork(requestPayload, responseCallback) {\r\n\t\t// get request\r\n\t\tconst chunkPosRaw: Array<number> = requestPayload.chunkPos\r\n\t\tconst chunkPos = new v3(chunkPosRaw[0], chunkPosRaw[1], chunkPosRaw[2])\r\n\t\tconst blockData: Uint8Array = new Uint8Array(requestPayload.blockData)\r\n\t\tconst quadIdsByBlockAndSide: Uint16Array = new Uint16Array(requestPayload.quadIdsByBlockAndSide)\r\n\t\tconst initialVertexArrays: Array<geometrics.VertexArrayType> = requestPayload.initialVertexArrays.map(buffer => new Uint32Array(buffer))\r\n\r\n\t\t// process request\r\n\t\tChunkGeneration.generateChunk(chunkPos, blockData)\r\n\t\tquadIdsByBlockAndSide.fill(0)\r\n\t\tconst { quadCount, vertexArrays, unusedVertexArrays } = EngineChunkBuilder.drawInternalChunkQuads(blockData, quadIdsByBlockAndSide, initialVertexArrays)\r\n\r\n\t\t// respond\r\n\t\tconst responsePayload: WorkerObligation.WorkerPayload = {\r\n\t\t\tblockData: blockData.buffer,\r\n\t\t\tquadCount,\r\n\t\t\tvertexArrays: vertexArrays.map(arr => arr.buffer),\r\n\t\t\tquadIdsByBlockAndSide: quadIdsByBlockAndSide.buffer,\r\n\t\t\tunusedVertexArrays: unusedVertexArrays.map(arr => arr.buffer),\r\n\t\t}\r\n\t\tconst transferableObjects: Array<any> = [\r\n\t\t\tblockData.buffer,\r\n\t\t\tquadIdsByBlockAndSide.buffer,\r\n\t\t\t...(vertexArrays.map(arr => arr.buffer)),\r\n\t\t\t...(unusedVertexArrays.map(arr => arr.buffer)),\r\n\t\t]\r\n\t\tresponseCallback(responsePayload, transferableObjects)\r\n\t},\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/worker/TaskGenerateAndMeshChunk.ts","import { CHUNK_SIZE } from \"geometrics\"\r\nimport v3 from \"v3\"\r\nimport BlockTypes from \"BlockTypes\"\r\n//import * as noise from \"noise\"\r\nimport { libnoise } from \"libnoise\" // https://github.com/DropechoStudios/libnoise/tree/master/Sources/libnoise/generator\r\n\r\nconst quality = libnoise.QualityMode.MEDIUM\r\n// Perlin(frequency : Float, lacunarity : Float, persistence : Float, octaves : Int, seed : Int, quality : QualityMode)\r\nconst perlin0 = new libnoise.generator.Perlin(.01, 2.0, 0.5, 8, 123, quality)\r\n// RidgedMultifractal(frequency : Float, lacunarity : Float, octaves : Int, seed : Int, quality : QualityMode)\r\nconst ridged0 = new libnoise.generator.RidgedMultifractal(.01, 2.0, 8, 123, quality)\r\n\r\nconst sampleVector = new v3()\r\n\r\nexport function generateChunk(chunkPos: v3, chunkBlocks: Uint8Array) {\r\n\tvar chunkBlockIndex = 0\r\n\tfor (var x = 0; x < CHUNK_SIZE; x += 1) {\r\n\t\tfor (var z = 0; z < CHUNK_SIZE; z += 1) {\r\n\t\t\tsampleVector.y = 0\r\n\t\t\tsampleVector.x = x + chunkPos.x * CHUNK_SIZE\r\n\t\t\tsampleVector.z = z + chunkPos.z * CHUNK_SIZE\r\n\r\n\t\t\tconst scale = 3\r\n\t\t\tconst groundHeight = Math.floor(ridged0.getValue(-10 + sampleVector.x / scale, -10 + sampleVector.y / scale, sampleVector.z / scale) * 50 - 50)\r\n\r\n\t\t\tfor (var y = 0; y < CHUNK_SIZE; y += 1) {\r\n\t\t\t\tsampleVector.y = y + chunkPos.y * CHUNK_SIZE\r\n\r\n\t\t\t\tconst depth = groundHeight - sampleVector.y\r\n\r\n\t\t\t\tlet blockData\r\n\r\n\t\t\t\tif (depth < 0) {\r\n\t\t\t\t\tblockData = BlockTypes.byName.air.id\r\n\t\t\t\t}\r\n\t\t\t\telse if (depth < 1) {\r\n\t\t\t\t\tif (sampleVector.y > 0) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.snow.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sampleVector.y > -40) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.stone.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sampleVector.y > -60) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.dirt.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.grass.id\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (depth < 2) {\r\n\t\t\t\t\tif (sampleVector.y > 0) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.snow.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sampleVector.y > -40) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.stone.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sampleVector.y > -60) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.dirt.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.dirt.id\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tblockData = BlockTypes.byName.stone.id\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchunkBlocks[chunkBlockIndex] = blockData\r\n\t\t\t\tchunkBlockIndex += 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\n/*\r\nconst fbm1 = new noise.FBM3(250).setFractal(2, 0.5, 1.1)\r\nconst fbm2 = new noise.FBM3(80)\r\nconst fbm3 = new noise.FBM3(250)\r\nconst warp1 = new noise.NoiseWarp3d(1, fbm1)\r\nconst warp2 = new noise.NoiseWarp3d(100, fbm1)\r\nconst cell1 = new noise.CellNoise(0.02)\r\n\r\nconst biomeSizeFactor = 5\r\n\r\nconst sampleVector = new v3()\r\nconst biomeVector = new v3()\r\nconst workVector = new v3()\r\n\r\nexport default {\r\n\tgenerateChunk(chunkPos: v3, chunkBlocks: Uint8Array) {\r\n\r\n\t\tvar chunkBlockIndex = 0\r\n\t\tfor (var x = 0; x < CHUNK_SIZE; x += 1) {\r\n\t\t\tfor (var z = 0; z < CHUNK_SIZE; z += 1) {\r\n\t\t\t\tsampleVector.y = 0\r\n\t\t\t\tsampleVector.x = x + chunkPos.x * CHUNK_SIZE\r\n\t\t\t\tsampleVector.z = z + chunkPos.z * CHUNK_SIZE\r\n\r\n\t\t\t\tbiomeVector.setFrom(sampleVector)\r\n\r\n\t\t\t\twarp2.warp3(biomeVector)\r\n\r\n\r\n\t\t\t\tvar cellNoise = cell1.sample2sqr(biomeVector.x / biomeSizeFactor, biomeVector.z / biomeSizeFactor)\r\n\t\t\t\tvar v_dist = cellNoise[0]\r\n\t\t\t\tvar v_closest = cellNoise[1]\r\n\r\n\r\n\t\t\t\tfor (var y = 0; y < CHUNK_SIZE; y += 1) {\r\n\t\t\t\t\tsampleVector.y = y + chunkPos.y * CHUNK_SIZE + 30\r\n\r\n\r\n\t\t\t\t\tvar blockData = BlockTypes.byName.air.id\r\n\r\n\t\t\t\t\tif (sampleVector.y < -10) {\r\n\t\t\t\t\t\tblockData = BlockTypes.byName.obsidian.id\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (sampleVector.y < 50) {\r\n\t\t\t\t\t\tblockData = this.terrainGen(sampleVector, v_dist, v_closest)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchunkBlocks[chunkBlockIndex] = blockData\r\n\t\t\t\t\tchunkBlockIndex += 1\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tterrainGen(pos: v3, v_dist: number, v_closest: number) {\r\n\r\n\t\tconst normalized_v_closest = (v_closest + 1.5) % 1\r\n\r\n\t\tvar biomeBlockTypes = [\r\n\t\t\tBlockTypes.byName.stone.id,\r\n\t\t\tBlockTypes.byName.dirt.id,\r\n\t\t\tBlockTypes.byName.sand.id,\r\n\t\t\tBlockTypes.byName.gravel.id,\r\n\t\t\tBlockTypes.byName.snow.id,\r\n\t\t\tBlockTypes.byName.ice.id,\r\n\t\t\tBlockTypes.byName.sandstone.id,\r\n\t\t\tBlockTypes.byName.grass.id,\r\n\t\t]\r\n\r\n\t\tvar biomeSolidBlock = biomeBlockTypes[Math.floor(normalized_v_closest * biomeBlockTypes.length)]\r\n\r\n\t\tworkVector.setFrom(pos)\r\n\r\n\t\twarp1.warp3(workVector)\r\n\r\n\t\tvar sample1 = fbm1.sample2(workVector)\r\n\t\tsample1 += fbm2.sample3(workVector) * 0.5\r\n\t\tsample1 += fbm3.sample3(workVector) * 0.25\r\n\r\n\t\t//sample1 *= 1 - v_dist\r\n\r\n\t\tsample1 = Math.pow(sample1, 2)\r\n\r\n\r\n\t\t//var sample2 = fbm2.sample(workVector)\r\n\t\t//var sample3 = fbm3.sample(workVector)\r\n\r\n\t\t//var lerped = sample1 * (sample3) + sample2 * (1 - sample3)\r\n\r\n\t\tif (sample1 > pos.y / 25) {\r\n\t\t\treturn biomeSolidBlock\r\n\t\t}\r\n\r\n\t\treturn BlockTypes.byName.air.id\r\n\t},\r\n}\r\n*/\n\n\n// WEBPACK FOOTER //\n// ./src/client/singleplayer/ChunkGeneration.ts","// Generated by Haxe 4.0.0\n(function ($hx_exports) { \"use strict\";\n$hx_exports[\"libnoise\"] = $hx_exports[\"libnoise\"] || {};\n$hx_exports[\"libnoise\"][\"operator\"] = $hx_exports[\"libnoise\"][\"operator\"] || {};\n;$hx_exports[\"libnoise\"][\"generator\"] = $hx_exports[\"libnoise\"][\"generator\"] || {};\nfunction $extend(from, fields) {\n\tfunction Inherit() {} Inherit.prototype = from; var proto = new Inherit();\n\tfor (var name in fields) proto[name] = fields[name];\n\tif( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;\n\treturn proto;\n}\nMath.__name__ = true;\nvar haxe_ds_ArraySort = function() { };\nhaxe_ds_ArraySort.__name__ = true;\nhaxe_ds_ArraySort.sort = function(a,cmp) {\n\thaxe_ds_ArraySort.rec(a,cmp,0,a.length);\n};\nhaxe_ds_ArraySort.rec = function(a,cmp,from,to) {\n\tvar middle = from + to >> 1;\n\tif(to - from < 12) {\n\t\tif(to <= from) {\n\t\t\treturn;\n\t\t}\n\t\tvar _g1 = from + 1;\n\t\tvar _g = to;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar j = i;\n\t\t\twhile(j > from) {\n\t\t\t\tif(cmp(a[j],a[j - 1]) < 0) {\n\t\t\t\t\thaxe_ds_ArraySort.swap(a,j - 1,j);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t--j;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\thaxe_ds_ArraySort.rec(a,cmp,from,middle);\n\thaxe_ds_ArraySort.rec(a,cmp,middle,to);\n\thaxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);\n};\nhaxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {\n\tvar first_cut;\n\tvar second_cut;\n\tvar len11;\n\tvar len22;\n\tif(len1 == 0 || len2 == 0) {\n\t\treturn;\n\t}\n\tif(len1 + len2 == 2) {\n\t\tif(cmp(a[pivot],a[from]) < 0) {\n\t\t\thaxe_ds_ArraySort.swap(a,pivot,from);\n\t\t}\n\t\treturn;\n\t}\n\tif(len1 > len2) {\n\t\tlen11 = len1 >> 1;\n\t\tfirst_cut = from + len11;\n\t\tsecond_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);\n\t\tlen22 = second_cut - pivot;\n\t} else {\n\t\tlen22 = len2 >> 1;\n\t\tsecond_cut = pivot + len22;\n\t\tfirst_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);\n\t\tlen11 = first_cut - from;\n\t}\n\thaxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);\n\tvar new_mid = first_cut + len22;\n\thaxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);\n\thaxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);\n};\nhaxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {\n\tif(from == mid || mid == to) {\n\t\treturn;\n\t}\n\tvar n = haxe_ds_ArraySort.gcd(to - from,mid - from);\n\twhile(n-- != 0) {\n\t\tvar val = a[from + n];\n\t\tvar shift = mid - from;\n\t\tvar p1 = from + n;\n\t\tvar p2 = from + n + shift;\n\t\twhile(p2 != from + n) {\n\t\t\ta[p1] = a[p2];\n\t\t\tp1 = p2;\n\t\t\tif(to - p2 > shift) {\n\t\t\t\tp2 += shift;\n\t\t\t} else {\n\t\t\t\tp2 = from + (shift - (to - p2));\n\t\t\t}\n\t\t}\n\t\ta[p1] = val;\n\t}\n};\nhaxe_ds_ArraySort.gcd = function(m,n) {\n\twhile(n != 0) {\n\t\tvar t = m % n;\n\t\tm = n;\n\t\tn = t;\n\t}\n\treturn m;\n};\nhaxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {\n\tvar len = to - from;\n\tvar half;\n\tvar mid;\n\twhile(len > 0) {\n\t\thalf = len >> 1;\n\t\tmid = from + half;\n\t\tif(cmp(a[val],a[mid]) < 0) {\n\t\t\tlen = half;\n\t\t} else {\n\t\t\tfrom = mid + 1;\n\t\t\tlen = len - half - 1;\n\t\t}\n\t}\n\treturn from;\n};\nhaxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {\n\tvar len = to - from;\n\tvar half;\n\tvar mid;\n\twhile(len > 0) {\n\t\thalf = len >> 1;\n\t\tmid = from + half;\n\t\tif(cmp(a[mid],a[val]) < 0) {\n\t\t\tfrom = mid + 1;\n\t\t\tlen = len - half - 1;\n\t\t} else {\n\t\t\tlen = half;\n\t\t}\n\t}\n\treturn from;\n};\nhaxe_ds_ArraySort.swap = function(a,i,j) {\n\tvar tmp = a[i];\n\ta[i] = a[j];\n\ta[j] = tmp;\n};\nvar js__$Boot_HaxeError = function(val) {\n\tError.call(this);\n\tthis.val = val;\n\tthis.message = String(val);\n\tif(Error.captureStackTrace) {\n\t\tError.captureStackTrace(this,js__$Boot_HaxeError);\n\t}\n};\njs__$Boot_HaxeError.__name__ = true;\njs__$Boot_HaxeError.wrap = function(val) {\n\tif((val instanceof Error)) {\n\t\treturn val;\n\t} else {\n\t\treturn new js__$Boot_HaxeError(val);\n\t}\n};\njs__$Boot_HaxeError.__super__ = Error;\njs__$Boot_HaxeError.prototype = $extend(Error.prototype,{\n});\nvar js_Boot = function() { };\njs_Boot.__name__ = true;\njs_Boot.__string_rec = function(o,s) {\n\tif(o == null) {\n\t\treturn \"null\";\n\t}\n\tif(s.length >= 5) {\n\t\treturn \"<...>\";\n\t}\n\tvar t = typeof(o);\n\tif(t == \"function\" && (o.__name__ || o.__ename__)) {\n\t\tt = \"object\";\n\t}\n\tswitch(t) {\n\tcase \"function\":\n\t\treturn \"<function>\";\n\tcase \"object\":\n\t\tif(o instanceof Array) {\n\t\t\tif(o.__enum__) {\n\t\t\t\tif(o.length == 2) {\n\t\t\t\t\treturn o[0];\n\t\t\t\t}\n\t\t\t\tvar str = o[0] + \"(\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar _g1 = 2;\n\t\t\t\tvar _g = o.length;\n\t\t\t\twhile(_g1 < _g) {\n\t\t\t\t\tvar i = _g1++;\n\t\t\t\t\tif(i != 2) {\n\t\t\t\t\t\tstr += \",\" + js_Boot.__string_rec(o[i],s);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += js_Boot.__string_rec(o[i],s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn str + \")\";\n\t\t\t}\n\t\t\tvar l = o.length;\n\t\t\tvar i1;\n\t\t\tvar str1 = \"[\";\n\t\t\ts += \"\\t\";\n\t\t\tvar _g11 = 0;\n\t\t\tvar _g2 = l;\n\t\t\twhile(_g11 < _g2) {\n\t\t\t\tvar i2 = _g11++;\n\t\t\t\tstr1 += (i2 > 0 ? \",\" : \"\") + js_Boot.__string_rec(o[i2],s);\n\t\t\t}\n\t\t\tstr1 += \"]\";\n\t\t\treturn str1;\n\t\t}\n\t\tvar tostr;\n\t\ttry {\n\t\t\ttostr = o.toString;\n\t\t} catch( e ) {\n\t\t\treturn \"???\";\n\t\t}\n\t\tif(tostr != null && tostr != Object.toString && typeof(tostr) == \"function\") {\n\t\t\tvar s2 = o.toString();\n\t\t\tif(s2 != \"[object Object]\") {\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t\tvar k = null;\n\t\tvar str2 = \"{\\n\";\n\t\ts += \"\\t\";\n\t\tvar hasp = o.hasOwnProperty != null;\n\t\tfor( var k in o ) {\n\t\tif(hasp && !o.hasOwnProperty(k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif(k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\") {\n\t\t\tcontinue;\n\t\t}\n\t\tif(str2.length != 2) {\n\t\t\tstr2 += \", \\n\";\n\t\t}\n\t\tstr2 += s + k + \" : \" + js_Boot.__string_rec(o[k],s);\n\t\t}\n\t\ts = s.substring(1);\n\t\tstr2 += \"\\n\" + s + \"}\";\n\t\treturn str2;\n\tcase \"string\":\n\t\treturn o;\n\tdefault:\n\t\treturn String(o);\n\t}\n};\nvar libnoise_ModuleBase = $hx_exports[\"libnoise\"][\"ModuleBase\"] = function(count) {\n\tif(count > 0) {\n\t\tvar this1 = new Array(count);\n\t\tthis.modules = this1;\n\t}\n};\nlibnoise_ModuleBase.__name__ = true;\nlibnoise_ModuleBase.prototype = {\n\tget: function(index) {\n\t\treturn this.modules[index];\n\t}\n\t,set: function(index,value) {\n\t\treturn this.modules[index] = value;\n\t}\n\t,length: function() {\n\t\treturn this.modules.length;\n\t}\n\t,getValue: function(x,y,z) {\n\t\tthrow new js__$Boot_HaxeError(\"ModuleBase.getValue is an abstract method\");\n\t}\n};\nvar libnoise_QualityMode = { __ename__ : true, __constructs__ : [\"LOW\",\"MEDIUM\",\"HIGH\"] };\nlibnoise_QualityMode.LOW = [\"LOW\",0];\nlibnoise_QualityMode.LOW.__enum__ = libnoise_QualityMode;\nlibnoise_QualityMode.MEDIUM = [\"MEDIUM\",1];\nlibnoise_QualityMode.MEDIUM.__enum__ = libnoise_QualityMode;\nlibnoise_QualityMode.HIGH = [\"HIGH\",2];\nlibnoise_QualityMode.HIGH.__enum__ = libnoise_QualityMode;\nvar libnoise_E_$QualityMode = $hx_exports[\"libnoise\"][\"QualityMode\"] = function() { };\nlibnoise_E_$QualityMode.__name__ = true;\nvar libnoise_Utils = $hx_exports[\"libnoise\"][\"Utils\"] = function() { };\nlibnoise_Utils.__name__ = true;\nlibnoise_Utils.GradientCoherentNoise3D = function(x,y,z,seed,quality) {\n\tvar x0 = x > 0.0 ? x | 0 : (x | 0) - 1;\n\tvar x1 = x0 + 1;\n\tvar y0 = y > 0.0 ? y | 0 : (y | 0) - 1;\n\tvar y1 = y0 + 1;\n\tvar z0 = z > 0.0 ? z | 0 : (z | 0) - 1;\n\tvar z1 = z0 + 1;\n\tvar xs = 0.0;\n\tvar ys = 0.0;\n\tvar zs = 0.0;\n\tswitch(quality[1]) {\n\tcase 0:\n\t\txs = x - x0;\n\t\tys = y - y0;\n\t\tzs = z - z0;\n\t\tbreak;\n\tcase 1:\n\t\tvar value = x - x0;\n\t\txs = value * value * (3.0 - 2.0 * value);\n\t\tvar value1 = y - y0;\n\t\tys = value1 * value1 * (3.0 - 2.0 * value1);\n\t\tvar value2 = z - z0;\n\t\tzs = value2 * value2 * (3.0 - 2.0 * value2);\n\t\tbreak;\n\tcase 2:\n\t\txs = libnoise_Utils.MapQuinticSCurve(x - x0);\n\t\tys = libnoise_Utils.MapQuinticSCurve(y - y0);\n\t\tzs = libnoise_Utils.MapQuinticSCurve(z - z0);\n\t\tbreak;\n\t}\n\tvar n0 = libnoise_Utils.GradientNoise3D(x,y,z,x0,y0,z0,seed);\n\tvar n1 = libnoise_Utils.GradientNoise3D(x,y,z,x1,y0,z0,seed);\n\tvar ix0 = libnoise_Utils.InterpolateLinear(n0,n1,xs);\n\tn0 = libnoise_Utils.GradientNoise3D(x,y,z,x0,y1,z0,seed);\n\tn1 = libnoise_Utils.GradientNoise3D(x,y,z,x1,y1,z0,seed);\n\tvar ix1 = libnoise_Utils.InterpolateLinear(n0,n1,xs);\n\tvar iy0 = libnoise_Utils.InterpolateLinear(ix0,ix1,ys);\n\tn0 = libnoise_Utils.GradientNoise3D(x,y,z,x0,y0,z1,seed);\n\tn1 = libnoise_Utils.GradientNoise3D(x,y,z,x1,y0,z1,seed);\n\tix0 = libnoise_Utils.InterpolateLinear(n0,n1,xs);\n\tn0 = libnoise_Utils.GradientNoise3D(x,y,z,x0,y1,z1,seed);\n\tn1 = libnoise_Utils.GradientNoise3D(x,y,z,x1,y1,z1,seed);\n\tix1 = libnoise_Utils.InterpolateLinear(n0,n1,xs);\n\tvar iy1 = libnoise_Utils.InterpolateLinear(ix0,ix1,ys);\n\treturn libnoise_Utils.InterpolateLinear(iy0,iy1,zs);\n};\nlibnoise_Utils.GradientNoise3D = function(fx,fy,fz,ix,iy,iz,seed) {\n\tvar i = libnoise_Utils.GeneratorNoiseX * ix + libnoise_Utils.GeneratorNoiseY * iy + libnoise_Utils.GeneratorNoiseZ * iz + libnoise_Utils.GeneratorSeed * seed & -1;\n\ti ^= i >> libnoise_Utils.GeneratorShift;\n\ti &= 255;\n\tvar xvg = libnoise_Utils.Randoms[i << 2];\n\tvar yvg = libnoise_Utils.Randoms[(i << 2) + 1];\n\tvar zvg = libnoise_Utils.Randoms[(i << 2) + 2];\n\tvar xvp = fx - ix;\n\tvar yvp = fy - iy;\n\tvar zvp = fz - iz;\n\treturn (xvg * xvp + yvg * yvp + zvg * zvp) * 2.12;\n};\nlibnoise_Utils.InterpolateCubic = function(a,b,c,d,position) {\n\tvar p = d - c - (a - b);\n\tvar q = a - b - p;\n\tvar r = c - a;\n\tvar s = b;\n\treturn p * position * position * position + q * position * position + r * position + s;\n};\nlibnoise_Utils.InterpolateLinear = function(a,b,position) {\n\treturn (1.0 - position) * a + position * b;\n};\nlibnoise_Utils.fmod = function(a,b) {\n\treturn a - (a / b | 0) * b;\n};\nlibnoise_Utils.MakeInt32Range = function(value) {\n\tif(value >= 1073741824.0) {\n\t\treturn 2.0 * (value - (value / 1073741824.0 | 0) * 1073741824.0) - 1073741824.0;\n\t}\n\tif(value <= -1073741824.0) {\n\t\treturn 2.0 * (value - (value / 1073741824.0 | 0) * 1073741824.0) + 1073741824.0;\n\t}\n\treturn value;\n};\nlibnoise_Utils.MapCubicSCurve = function(value) {\n\treturn value * value * (3.0 - 2.0 * value);\n};\nlibnoise_Utils.MapQuinticSCurve = function(value) {\n\tvar a3 = value * value * value;\n\tvar a4 = a3 * value;\n\tvar a5 = a4 * value;\n\treturn 6.0 * a5 - 15.0 * a4 + 10.0 * a3;\n};\nlibnoise_Utils.ValueNoise3D = function(x,y,z,seed) {\n\treturn 1.0 - libnoise_Utils.ValueNoise3DInt(x,y,z,seed) / 1073741824.0;\n};\nlibnoise_Utils.ValueNoise3DInt = function(x,y,z,seed) {\n\tvar n = libnoise_Utils.GeneratorNoiseX * x + libnoise_Utils.GeneratorNoiseY * y + libnoise_Utils.GeneratorNoiseZ * z + libnoise_Utils.GeneratorSeed * seed & 2147483647;\n\tn = n >> 13 ^ n;\n\treturn n * (n * n * 60493 + 19990303) + 1376312589 & 2147483647;\n};\nlibnoise_Utils.Clamp = function(value,min,max) {\n\tif(value < min) {\n\t\treturn min;\n\t} else if(value > max) {\n\t\treturn max;\n\t} else {\n\t\treturn value;\n\t}\n};\nvar libnoise_generator_Billow = $hx_exports[\"libnoise\"][\"generator\"][\"Billow\"] = function(frequency,lacunarity,persistence,octaves,seed,quality) {\n\tthis.frequency = frequency;\n\tthis.lacunarity = lacunarity;\n\tthis.persistence = persistence;\n\tthis.octaves = octaves;\n\tthis.seed = seed;\n\tthis.quality = quality;\n\tlibnoise_ModuleBase.call(this,0);\n};\nlibnoise_generator_Billow.__name__ = true;\nlibnoise_generator_Billow.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Billow.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar value = 0.0;\n\t\tvar curp = 1.0;\n\t\tx *= this.frequency;\n\t\ty *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.octaves;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar nx = libnoise_Utils.MakeInt32Range(x);\n\t\t\tvar ny = libnoise_Utils.MakeInt32Range(y);\n\t\t\tvar nz = libnoise_Utils.MakeInt32Range(z);\n\t\t\tvar _seed = this.seed + i & -1;\n\t\t\tvar signal = libnoise_Utils.GradientCoherentNoise3D(nx,ny,nz,_seed,this.quality);\n\t\t\tsignal = 2.0 * Math.abs(signal) - 1.0;\n\t\t\tvalue += signal * curp;\n\t\t\tx *= this.lacunarity;\n\t\t\ty *= this.lacunarity;\n\t\t\tz *= this.lacunarity;\n\t\t\tcurp *= this.persistence;\n\t\t}\n\t\treturn value + 0.5;\n\t}\n});\nvar libnoise_generator_Checker = $hx_exports[\"libnoise\"][\"generator\"][\"Checker\"] = function() {\n\tlibnoise_ModuleBase.call(this,0);\n};\nlibnoise_generator_Checker.__name__ = true;\nlibnoise_generator_Checker.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Checker.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar ix = Math.floor(libnoise_Utils.MakeInt32Range(x)) | 0;\n\t\tvar iy = Math.floor(libnoise_Utils.MakeInt32Range(y)) | 0;\n\t\tvar iz = Math.floor(libnoise_Utils.MakeInt32Range(z)) | 0;\n\t\tif((((ix & 1 ^ iy) & 1 ^ iz) & 1) != 0) {\n\t\t\treturn -1.0;\n\t\t} else {\n\t\t\treturn 1.0;\n\t\t}\n\t}\n});\nvar libnoise_generator_Const = $hx_exports[\"libnoise\"][\"generator\"][\"Const\"] = function(value) {\n\tlibnoise_ModuleBase.call(this,0);\n\tthis.value = value;\n};\nlibnoise_generator_Const.__name__ = true;\nlibnoise_generator_Const.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Const.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.value;\n\t}\n});\nvar libnoise_generator_Cylinder = $hx_exports[\"libnoise\"][\"generator\"][\"Cylinder\"] = function(frequency) {\n\tthis.frequency = 1.0;\n\tlibnoise_ModuleBase.call(this,0);\n\tthis.frequency = frequency;\n};\nlibnoise_generator_Cylinder.__name__ = true;\nlibnoise_generator_Cylinder.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Cylinder.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tx *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar dfc = Math.sqrt(x * x + z * z);\n\t\tvar dfss = dfc - Math.floor(dfc);\n\t\tvar dfls = 1.0 - dfss;\n\t\tvar nd = Math.min(dfss,dfls);\n\t\treturn 1.0 - nd * 4.0;\n\t}\n});\nvar libnoise_generator_Perlin = $hx_exports[\"libnoise\"][\"generator\"][\"Perlin\"] = function(frequency,lacunarity,persistence,octaves,seed,quality) {\n\tthis.frequency = frequency;\n\tthis.lacunarity = lacunarity;\n\tthis.persistence = persistence;\n\tthis.octaves = octaves;\n\tthis.seed = seed;\n\tthis.quality = quality;\n\tlibnoise_ModuleBase.call(this,0);\n};\nlibnoise_generator_Perlin.__name__ = true;\nlibnoise_generator_Perlin.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Perlin.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar value = 0.0;\n\t\tvar cp = 1.0;\n\t\tx *= this.frequency;\n\t\ty *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.octaves;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar nx = libnoise_Utils.MakeInt32Range(x);\n\t\t\tvar ny = libnoise_Utils.MakeInt32Range(y);\n\t\t\tvar nz = libnoise_Utils.MakeInt32Range(z);\n\t\t\tvar _seed = this.seed + i & -1;\n\t\t\tvar signal = libnoise_Utils.GradientCoherentNoise3D(nx,ny,nz,_seed,this.quality);\n\t\t\tvalue += signal * cp;\n\t\t\tx *= this.lacunarity;\n\t\t\ty *= this.lacunarity;\n\t\t\tz *= this.lacunarity;\n\t\t\tcp *= this.persistence;\n\t\t}\n\t\treturn value;\n\t}\n});\nvar libnoise_generator_RidgedMultifractal = $hx_exports[\"libnoise\"][\"generator\"][\"RidgedMultifractal\"] = function(frequency,lacunarity,octaves,seed,quality) {\n\tvar this1 = new Array(30);\n\tthis.weights = this1;\n\tthis.frequency = frequency;\n\tthis.lacunarity = lacunarity;\n\tthis.octaves = octaves;\n\tthis.seed = seed;\n\tthis.quality = quality;\n\tthis.updateWeights();\n\tlibnoise_ModuleBase.call(this,0);\n};\nlibnoise_generator_RidgedMultifractal.__name__ = true;\nlibnoise_generator_RidgedMultifractal.__super__ = libnoise_ModuleBase;\nlibnoise_generator_RidgedMultifractal.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tx *= this.frequency;\n\t\ty *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar value = 0.0;\n\t\tvar weight = 1.0;\n\t\tvar offset = 1.0;\n\t\tvar gain = 2.0;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.octaves;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar nx = libnoise_Utils.MakeInt32Range(x);\n\t\t\tvar ny = libnoise_Utils.MakeInt32Range(y);\n\t\t\tvar nz = libnoise_Utils.MakeInt32Range(z);\n\t\t\tvar _seed = this.seed + i & 2147483647;\n\t\t\tvar signal = libnoise_Utils.GradientCoherentNoise3D(nx,ny,nz,_seed,this.quality);\n\t\t\tsignal = Math.abs(signal);\n\t\t\tsignal = offset - signal;\n\t\t\tsignal *= signal;\n\t\t\tsignal *= weight;\n\t\t\tweight = signal * gain;\n\t\t\tif(weight > 1.0) {\n\t\t\t\tweight = 1.0;\n\t\t\t} else if(weight < 0) {\n\t\t\t\tweight = 0;\n\t\t\t} else {\n\t\t\t\tweight = weight;\n\t\t\t}\n\t\t\tvalue += signal * this.weights[i];\n\t\t\tx *= this.lacunarity;\n\t\t\ty *= this.lacunarity;\n\t\t\tz *= this.lacunarity;\n\t\t}\n\t\treturn value * 1.25 - 1.0;\n\t}\n\t,updateWeights: function() {\n\t\tvar f = 1.0;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.weights.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis.weights[i] = Math.pow(f,-1.0);\n\t\t\tf *= this.lacunarity;\n\t\t}\n\t}\n});\nvar libnoise_generator_Sphere = $hx_exports[\"libnoise\"][\"generator\"][\"Sphere\"] = function(frequency) {\n\tthis.frequency = 1.0;\n\tlibnoise_ModuleBase.call(this,0);\n\tthis.frequency = frequency;\n};\nlibnoise_generator_Sphere.__name__ = true;\nlibnoise_generator_Sphere.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Sphere.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tx *= this.frequency;\n\t\ty *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar dfc = Math.sqrt(x * x + y * y + z * z);\n\t\tvar dfss = dfc - Math.floor(dfc);\n\t\tvar dfls = 1.0 - dfss;\n\t\tvar nd = Math.min(dfss,dfls);\n\t\treturn 1.0 - nd * 4.0;\n\t}\n});\nvar libnoise_generator_Voronoi = $hx_exports[\"libnoise\"][\"generator\"][\"Voronoi\"] = function(frequency,displacement,seed,distance) {\n\tthis.frequency = frequency;\n\tthis.displacement = displacement;\n\tthis.seed = seed;\n\tthis.distance = distance;\n\tlibnoise_ModuleBase.call(this,0);\n};\nlibnoise_generator_Voronoi.__name__ = true;\nlibnoise_generator_Voronoi.__super__ = libnoise_ModuleBase;\nlibnoise_generator_Voronoi.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tx *= this.frequency;\n\t\ty *= this.frequency;\n\t\tz *= this.frequency;\n\t\tvar xi = x > 0.0 ? x | 0 : x - 1 | 0;\n\t\tvar iy = y > 0.0 ? y | 0 : y - 1 | 0;\n\t\tvar iz = z > 0.0 ? z | 0 : z - 1 | 0;\n\t\tvar md = 2147483647.0;\n\t\tvar xc = 0;\n\t\tvar yc = 0;\n\t\tvar zc = 0;\n\t\tvar _g1 = iz - 2;\n\t\tvar _g = iz + 3;\n\t\twhile(_g1 < _g) {\n\t\t\tvar zcu = _g1++;\n\t\t\tvar _g3 = iy - 2;\n\t\t\tvar _g2 = iy + 3;\n\t\t\twhile(_g3 < _g2) {\n\t\t\t\tvar ycu = _g3++;\n\t\t\t\tvar _g5 = xi - 2;\n\t\t\t\tvar _g4 = xi + 3;\n\t\t\t\twhile(_g5 < _g4) {\n\t\t\t\t\tvar xcu = _g5++;\n\t\t\t\t\tvar xp = xcu + (1.0 - libnoise_Utils.ValueNoise3DInt(xcu,ycu,zcu,this.seed) / 1073741824.0);\n\t\t\t\t\tvar yp = ycu + (1.0 - libnoise_Utils.ValueNoise3DInt(xcu,ycu,zcu,this.seed + 1) / 1073741824.0);\n\t\t\t\t\tvar zp = zcu + (1.0 - libnoise_Utils.ValueNoise3DInt(xcu,ycu,zcu,this.seed + 2) / 1073741824.0);\n\t\t\t\t\tvar xd = xp - x;\n\t\t\t\t\tvar yd = yp - y;\n\t\t\t\t\tvar zd = zp - z;\n\t\t\t\t\tvar d = xd * xd + yd * yd + zd * zd;\n\t\t\t\t\tif(d < md) {\n\t\t\t\t\t\tmd = d;\n\t\t\t\t\t\txc = xp;\n\t\t\t\t\t\tyc = yp;\n\t\t\t\t\t\tzc = zp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar v;\n\t\tif(this.distance) {\n\t\t\tvar xd1 = xc - x;\n\t\t\tvar yd1 = yc - y;\n\t\t\tvar zd1 = zc - z;\n\t\t\tv = Math.sqrt(xd1 * xd1 + yd1 * yd1 + zd1 * zd1) * 1.7320508075688772935 - 1.0;\n\t\t} else {\n\t\t\tv = 0.0;\n\t\t}\n\t\treturn v + this.displacement * (1.0 - libnoise_Utils.ValueNoise3DInt(Math.floor(xc) | 0,Math.floor(yc) | 0,Math.floor(zc) | 0,0) / 1073741824.0);\n\t}\n});\nvar libnoise_operator_Abs = $hx_exports[\"libnoise\"][\"operator\"][\"Abs\"] = function(input) {\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n};\nlibnoise_operator_Abs.__name__ = true;\nlibnoise_operator_Abs.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Abs.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn Math.abs(this.modules[0].getValue(x,y,z));\n\t}\n});\nvar libnoise_operator_Add = $hx_exports[\"libnoise\"][\"operator\"][\"Add\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Add.__name__ = true;\nlibnoise_operator_Add.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Add.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar val1 = this.modules[0].getValue(x,y,z);\n\t\tvar val2 = this.modules[1].getValue(x,y,z);\n\t\treturn val1 + val2;\n\t}\n});\nvar libnoise_operator_Blend = $hx_exports[\"libnoise\"][\"operator\"][\"Blend\"] = function(rhs,lhs,controller) {\n\tlibnoise_ModuleBase.call(this,3);\n\tthis.modules[0] = rhs;\n\tthis.modules[1] = lhs;\n\tthis.modules[2] = controller;\n};\nlibnoise_operator_Blend.__name__ = true;\nlibnoise_operator_Blend.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Blend.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tset_controller: function(value) {\n\t\treturn this.modules[2] = value;\n\t}\n\t,get_controller: function() {\n\t\treturn this.modules[2];\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar a = this.modules[0].getValue(x,y,z);\n\t\tvar b = this.modules[1].getValue(x,y,z);\n\t\tvar c = (this.modules[2].getValue(x,y,z) + 1.0) / 2.0;\n\t\treturn libnoise_Utils.InterpolateLinear(a,b,c);\n\t}\n});\nvar libnoise_operator_Cache = $hx_exports[\"libnoise\"][\"operator\"][\"Cache\"] = function(input) {\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n};\nlibnoise_operator_Cache.__name__ = true;\nlibnoise_operator_Cache.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Cache.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tif(!(this.cached && this.cx == x && this.cy == y && this.cz == z)) {\n\t\t\tthis.value = this.modules[0].getValue(x,y,z);\n\t\t\tthis.cx = x;\n\t\t\tthis.cy = y;\n\t\t\tthis.cz = z;\n\t\t}\n\t\tthis.cached = true;\n\t\treturn this.value;\n\t}\n});\nvar libnoise_operator_Clamp = $hx_exports[\"libnoise\"][\"operator\"][\"Clamp\"] = function(min,max,input) {\n\tthis.max = 1.0;\n\tthis.min = -1.0;\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.min = min;\n\tthis.max = max;\n};\nlibnoise_operator_Clamp.__name__ = true;\nlibnoise_operator_Clamp.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Clamp.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar value = this.modules[0].getValue(x,y,z);\n\t\tif(value < this.min) {\n\t\t\treturn this.min;\n\t\t} else if(value > this.max) {\n\t\t\treturn this.max;\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n});\nvar libnoise_operator_Curve = $hx_exports[\"libnoise\"][\"operator\"][\"Curve\"] = function(input) {\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.data = [];\n};\nlibnoise_operator_Curve.__name__ = true;\nlibnoise_operator_Curve.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Curve.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tcontrolPointCount: function() {\n\t\treturn this.data.length;\n\t}\n\t,add: function(input,output) {\n\t\tvar this1 = new Array(2);\n\t\tvar vec = this1;\n\t\tvec[0] = input;\n\t\tvec[1] = output;\n\t\tvar _g = 0;\n\t\tvar _g1 = this.data;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar v = _g1[_g];\n\t\t\t++_g;\n\t\t\tif(v[0] == input) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.data.push(vec);\n\t\thaxe_ds_ArraySort.sort(this.data,function(a,b) {\n\t\t\tif(a[0] < b[0]) {\n\t\t\t\treturn -1;\n\t\t\t} else if(a[0] == b[0]) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\t}\n\t,clear: function() {\n\t\tthis.data = [];\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar smv = this.modules[0].getValue(x,y,z);\n\t\tvar ip = 0;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.data.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tif(smv < this.data[ip++][0]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar value = ip - 2;\n\t\tvar max = this.data.length - 1;\n\t\tvar i0 = value < 0 ? 0 : value > max ? max : value;\n\t\tvar value1 = ip - 1;\n\t\tvar max1 = this.data.length - 1;\n\t\tvar i1 = value1 < 0 ? 0 : value1 > max1 ? max1 : value1;\n\t\tvar max2 = this.data.length - 1;\n\t\tvar i2 = ip < 0 ? 0 : ip > max2 ? max2 : ip;\n\t\tvar value2 = ip + 1;\n\t\tvar max3 = this.data.length - 1;\n\t\tvar i3 = value2 < 0 ? 0 : value2 > max3 ? max3 : value2;\n\t\tif(i1 == i2) {\n\t\t\treturn this.data[i1][1];\n\t\t}\n\t\tvar ip0 = this.data[i1][0];\n\t\tvar ip1 = this.data[i2][0];\n\t\tvar a = (smv - ip0) / (ip1 - ip0);\n\t\treturn libnoise_Utils.InterpolateCubic(this.data[i0][1],this.data[i1][1],this.data[i2][1],this.data[i3][1],a);\n\t}\n});\nvar libnoise_operator_Displace = $hx_exports[\"libnoise\"][\"operator\"][\"Displace\"] = function(input,x,y,z) {\n\tthis.exponent = 1.0;\n\tlibnoise_ModuleBase.call(this,4);\n\tthis.modules[0] = input;\n\tthis.modules[1] = x;\n\tthis.modules[2] = y;\n\tthis.modules[3] = z;\n};\nlibnoise_operator_Displace.__name__ = true;\nlibnoise_operator_Displace.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Displace.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tset_X: function(val) {\n\t\treturn this.modules[1] = val;\n\t}\n\t,get_X: function() {\n\t\treturn this.modules[1];\n\t}\n\t,set_Y: function(val) {\n\t\treturn this.modules[2] = val;\n\t}\n\t,get_Y: function() {\n\t\treturn this.modules[2];\n\t}\n\t,set_Z: function(val) {\n\t\treturn this.modules[3] = val;\n\t}\n\t,get_Z: function() {\n\t\treturn this.modules[3];\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar dx = x + this.modules[1].getValue(x,y,z);\n\t\tvar dy = y + this.modules[2].getValue(x,y,z);\n\t\tvar dz = z + this.modules[3].getValue(x,y,z);\n\t\treturn this.modules[0].getValue(dx,dy,dz);\n\t}\n});\nvar libnoise_operator_Exponent = $hx_exports[\"libnoise\"][\"operator\"][\"Exponent\"] = function(exponent,input) {\n\tthis.exponent = 1.0;\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.exponent = exponent;\n};\nlibnoise_operator_Exponent.__name__ = true;\nlibnoise_operator_Exponent.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Exponent.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar value = this.modules[0].getValue(x,y,z);\n\t\treturn Math.pow(Math.abs((value + 1) / 2.0),this.exponent) * 2 - 1;\n\t}\n});\nvar libnoise_operator_Invert = $hx_exports[\"libnoise\"][\"operator\"][\"Invert\"] = function(input) {\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n};\nlibnoise_operator_Invert.__name__ = true;\nlibnoise_operator_Invert.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Invert.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn -this.modules[0].getValue(x,y,z);\n\t}\n});\nvar libnoise_operator_Max = $hx_exports[\"libnoise\"][\"operator\"][\"Max\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Max.__name__ = true;\nlibnoise_operator_Max.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Max.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar a = this.modules[0].getValue(x,y,z);\n\t\tvar b = this.modules[1].getValue(x,y,z);\n\t\treturn Math.max(a,b);\n\t}\n});\nvar libnoise_operator_Min = $hx_exports[\"libnoise\"][\"operator\"][\"Min\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Min.__name__ = true;\nlibnoise_operator_Min.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Min.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar a = this.modules[0].getValue(x,y,z);\n\t\tvar b = this.modules[1].getValue(x,y,z);\n\t\treturn Math.min(a,b);\n\t}\n});\nvar libnoise_operator_Multiply = $hx_exports[\"libnoise\"][\"operator\"][\"Multiply\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Multiply.__name__ = true;\nlibnoise_operator_Multiply.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Multiply.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.modules[0].getValue(x,y,z) * this.modules[1].getValue(x,y,z);\n\t}\n});\nvar libnoise_operator_Power = $hx_exports[\"libnoise\"][\"operator\"][\"Power\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Power.__name__ = true;\nlibnoise_operator_Power.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Power.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn Math.pow(this.modules[0].getValue(x,y,z),this.modules[1].getValue(x,y,z));\n\t}\n});\nvar libnoise_operator_Rotate = $hx_exports[\"libnoise\"][\"operator\"][\"Rotate\"] = function(rx,ry,rz,input) {\n\tif(rz == null) {\n\t\trz = 0.0;\n\t}\n\tif(ry == null) {\n\t\try = 0.0;\n\t}\n\tif(rx == null) {\n\t\trx = 0.0;\n\t}\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.rx = rx;\n\tthis.ry = ry;\n\tthis.rz = rz;\n\tthis.setAngles(rx,ry,rz);\n};\nlibnoise_operator_Rotate.__name__ = true;\nlibnoise_operator_Rotate.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Rotate.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tsetAngles: function(_rx,_ry,_rz) {\n\t\tvar xc = Math.cos(_rx * 0.01745329251);\n\t\tvar yc = Math.cos(_ry * 0.01745329251);\n\t\tvar zc = Math.cos(_rz * 0.01745329251);\n\t\tvar xs = Math.sin(_rx * 0.01745329251);\n\t\tvar ys = Math.sin(_ry * 0.01745329251);\n\t\tvar zs = Math.sin(_rz * 0.01745329251);\n\t\tthis.x1Matrix = ys * xs * zs + yc * zc;\n\t\tthis.y1Matrix = xc * zs;\n\t\tthis.z1Matrix = ys * zc - yc * xs * zs;\n\t\tthis.x2Matrix = ys * xs * zc - yc * zs;\n\t\tthis.y2Matrix = xc * zc;\n\t\tthis.z2Matrix = -yc * xs * zc - ys * zs;\n\t\tthis.x3Matrix = -ys * xc;\n\t\tthis.y3Matrix = xs;\n\t\tthis.z3Matrix = yc * xc;\n\t\tthis.rx = _rx;\n\t\tthis.ry = _ry;\n\t\tthis.rz = _rz;\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar nx = this.x1Matrix * x + this.y1Matrix * y + this.z1Matrix * z;\n\t\tvar ny = this.x2Matrix * x + this.y2Matrix * y + this.z2Matrix * z;\n\t\tvar nz = this.x3Matrix * x + this.y3Matrix * y + this.z3Matrix * z;\n\t\treturn this.modules[0].getValue(nx,ny,nz);\n\t}\n});\nvar libnoise_operator_Scale = $hx_exports[\"libnoise\"][\"operator\"][\"Scale\"] = function(sx,sy,sz,input) {\n\tif(sz == null) {\n\t\tsz = 1.0;\n\t}\n\tif(sy == null) {\n\t\tsy = 1.0;\n\t}\n\tif(sx == null) {\n\t\tsx = 1.0;\n\t}\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.sx = sx;\n\tthis.sy = sy;\n\tthis.sz = sz;\n};\nlibnoise_operator_Scale.__name__ = true;\nlibnoise_operator_Scale.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Scale.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.modules[0].getValue(x * this.sx,y * this.sy,z * this.sz);\n\t}\n});\nvar libnoise_operator_ScaleBias = $hx_exports[\"libnoise\"][\"operator\"][\"ScaleBias\"] = function(scale,bias,input) {\n\tif(bias == null) {\n\t\tbias = 0.0;\n\t}\n\tif(scale == null) {\n\t\tscale = 1.0;\n\t}\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.scale = scale;\n\tthis.bias = bias;\n};\nlibnoise_operator_ScaleBias.__name__ = true;\nlibnoise_operator_ScaleBias.__super__ = libnoise_ModuleBase;\nlibnoise_operator_ScaleBias.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.modules[0].getValue(x,y,z) * this.scale + this.bias;\n\t}\n});\nvar libnoise_operator_Select = $hx_exports[\"libnoise\"][\"operator\"][\"Select\"] = function(min,max,fallOff,inputA,inputB,controller) {\n\tif(fallOff == null) {\n\t\tfallOff = 0.0;\n\t}\n\tif(max == null) {\n\t\tmax = 1.0;\n\t}\n\tif(min == null) {\n\t\tmin = -1.0;\n\t}\n\tthis.max = 1.0;\n\tthis.min = -1.0;\n\tlibnoise_ModuleBase.call(this,3);\n\tthis.modules[0] = inputA;\n\tthis.modules[1] = inputB;\n\tthis.modules[2] = controller;\n\tthis.min = min;\n\tthis.max = max;\n\tthis.fallOff = fallOff;\n};\nlibnoise_operator_Select.__name__ = true;\nlibnoise_operator_Select.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Select.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\tvar cv = this.modules[2].getValue(x,y,z);\n\t\tif(this.fallOff > 0) {\n\t\t\tvar a;\n\t\t\tif(cv < this.min - this.fallOff) {\n\t\t\t\treturn this.modules[0].getValue(x,y,z);\n\t\t\t}\n\t\t\tif(cv < this.min + this.fallOff) {\n\t\t\t\tvar lc = this.min - this.fallOff;\n\t\t\t\tvar uc = this.min + this.fallOff;\n\t\t\t\tvar value = (cv - lc) / (uc - lc);\n\t\t\t\ta = value * value * (3.0 - 2.0 * value);\n\t\t\t\treturn libnoise_Utils.InterpolateLinear(this.modules[0].getValue(x,y,z),this.modules[1].getValue(x,y,z),a);\n\t\t\t}\n\t\t\tif(cv < this.max - this.fallOff) {\n\t\t\t\treturn this.modules[1].getValue(x,y,z);\n\t\t\t}\n\t\t\tif(cv < this.max + this.fallOff) {\n\t\t\t\tvar lc1 = this.max - this.fallOff;\n\t\t\t\tvar uc1 = this.max + this.fallOff;\n\t\t\t\tvar value1 = (cv - lc1) / (uc1 - lc1);\n\t\t\t\ta = value1 * value1 * (3.0 - 2.0 * value1);\n\t\t\t\treturn libnoise_Utils.InterpolateLinear(this.modules[1].getValue(x,y,z),this.modules[0].getValue(x,y,z),a);\n\t\t\t}\n\t\t\treturn this.modules[0].getValue(x,y,z);\n\t\t}\n\t\tif(cv < this.min || cv > this.max) {\n\t\t\treturn this.modules[0].getValue(x,y,z);\n\t\t}\n\t\treturn this.modules[1].getValue(x,y,z);\n\t}\n});\nvar libnoise_operator_Subtract = $hx_exports[\"libnoise\"][\"operator\"][\"Subtract\"] = function(lhs,rhs) {\n\tlibnoise_ModuleBase.call(this,2);\n\tthis.modules[0] = lhs;\n\tthis.modules[1] = rhs;\n};\nlibnoise_operator_Subtract.__name__ = true;\nlibnoise_operator_Subtract.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Subtract.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.modules[0].getValue(x,y,z) - this.modules[1].getValue(x,y,z);\n\t}\n});\nvar libnoise_operator_Terrace = $hx_exports[\"libnoise\"][\"operator\"][\"Terrace\"] = function(input,inverted) {\n\tif(inverted == null) {\n\t\tinverted = false;\n\t}\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.inverted = inverted;\n\tthis.data = [];\n};\nlibnoise_operator_Terrace.__name__ = true;\nlibnoise_operator_Terrace.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Terrace.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tcontrolPointCount: function() {\n\t\treturn this.data.length;\n\t}\n\t,clear: function() {\n\t\tthis.data = [];\n\t}\n\t,add: function(value) {\n\t\tvar _g = 0;\n\t\tvar _g1 = this.data;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar val = _g1[_g];\n\t\t\t++_g;\n\t\t\tif(val == value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.data.push(value);\n\t\thaxe_ds_ArraySort.sort(this.data,function(a,b) {\n\t\t\tif(a < b) {\n\t\t\t\treturn -1;\n\t\t\t} else if(a == b) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\t}\n\t,generate: function(steps) {\n\t\tthis.clear();\n\t\tvar ts = 2.0 / (steps - 1.0);\n\t\tvar cv = -1.0;\n\t\tvar _g1 = 0;\n\t\tvar _g = steps;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis.add(cv);\n\t\t\tcv += ts;\n\t\t}\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar smv = this.modules[0].getValue(x,y,z);\n\t\tvar ip = 0;\n\t\tvar _g1 = 0;\n\t\tvar _g = this.data.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tif(smv < this.data[ip++]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar i0 = ip - 1 < 0 ? 0 : ip - 1 > this.data.length - 1 ? this.data.length - 1 : ip - 1;\n\t\tvar i1 = ip < 0 ? 0 : ip > this.data.length - 1 ? this.data.length - 1 : ip;\n\t\tif(i0 == i1) {\n\t\t\treturn this.data[i1];\n\t\t}\n\t\tvar v0 = this.data[i0];\n\t\tvar v1 = this.data[i1];\n\t\tvar a = (smv - v0) / (v1 - v0);\n\t\tif(this.inverted) {\n\t\t\ta = 1.0 - a;\n\t\t\tvar t = v0;\n\t\t\tv0 = v1;\n\t\t\tv1 = t;\n\t\t}\n\t\ta *= a;\n\t\treturn libnoise_Utils.InterpolateLinear(v0,v1,a);\n\t}\n});\nvar libnoise_operator_Translate = $hx_exports[\"libnoise\"][\"operator\"][\"Translate\"] = function(x,y,z,input) {\n\tthis.dz = 1.0;\n\tthis.dy = 1.0;\n\tthis.dx = 1.0;\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.dx = x;\n\tthis.dy = y;\n\tthis.dz = z;\n};\nlibnoise_operator_Translate.__name__ = true;\nlibnoise_operator_Translate.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Translate.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tgetValue: function(x,y,z) {\n\t\treturn this.modules[0].getValue(x + this.dx,y + this.dy,z + this.dz);\n\t}\n});\nvar libnoise_operator_Turbulence = $hx_exports[\"libnoise\"][\"operator\"][\"Turbulence\"] = function(power,input,distortX,distortY,distortZ) {\n\tthis.power = 1.0;\n\tlibnoise_ModuleBase.call(this,1);\n\tthis.modules[0] = input;\n\tthis.power = power;\n\tif(distortX == null) {\n\t\tthis.xDistort = new libnoise_generator_Perlin(1.0,2.0,0.5,6,123,libnoise_QualityMode.MEDIUM);\n\t} else {\n\t\tthis.xDistort = distortX;\n\t}\n\tif(distortY == null) {\n\t\tthis.yDistort = new libnoise_generator_Perlin(1.0,2.0,0.5,6,123,libnoise_QualityMode.MEDIUM);\n\t} else {\n\t\tthis.yDistort = distortY;\n\t}\n\tif(distortZ == null) {\n\t\tthis.zDistort = new libnoise_generator_Perlin(1.0,2.0,0.5,6,123,libnoise_QualityMode.MEDIUM);\n\t} else {\n\t\tthis.zDistort = distortZ;\n\t}\n};\nlibnoise_operator_Turbulence.__name__ = true;\nlibnoise_operator_Turbulence.__super__ = libnoise_ModuleBase;\nlibnoise_operator_Turbulence.prototype = $extend(libnoise_ModuleBase.prototype,{\n\tsetFrequency: function(frequency) {\n\t\tthis.xDistort.frequency = frequency;\n\t\tthis.yDistort.frequency = frequency;\n\t\tthis.zDistort.frequency = frequency;\n\t}\n\t,setRoughness: function(roughness) {\n\t\tthis.xDistort.octaves = roughness;\n\t\tthis.yDistort.octaves = roughness;\n\t\tthis.zDistort.octaves = roughness;\n\t}\n\t,setSeed: function(seed) {\n\t\tthis.xDistort.seed = seed;\n\t\tthis.yDistort.seed = seed;\n\t\tthis.zDistort.seed = seed;\n\t}\n\t,getValue: function(x,y,z) {\n\t\tvar xd = x + this.xDistort.getValue(x + 0.189422607421875,y + 0.99371337890625,z + 0.4781646728515625) * this.power;\n\t\tvar yd = y + this.yDistort.getValue(x + 0.4046478271484375,y + 0.276611328125,z + 0.9230499267578125) * this.power;\n\t\tvar zd = z + this.zDistort.getValue(x + 0.82122802734375,y + 0.1710968017578125,z + 0.6842803955078125) * this.power;\n\t\treturn this.modules[0].getValue(xd,yd,zd);\n\t}\n});\nString.__name__ = true;\nArray.__name__ = true;\nlibnoise_E_$QualityMode.LOW = libnoise_QualityMode.LOW;\nlibnoise_E_$QualityMode.MEDIUM = libnoise_QualityMode.MEDIUM;\nlibnoise_E_$QualityMode.HIGH = libnoise_QualityMode.HIGH;\nlibnoise_Utils.SQRT3 = 1.7320508075688772935;\nlibnoise_Utils.OctavesMaximum = 30;\nlibnoise_Utils.Deg2Rad = 0.01745329251;\nlibnoise_Utils.GeneratorNoiseX = 1619;\nlibnoise_Utils.GeneratorNoiseY = 31337;\nlibnoise_Utils.GeneratorNoiseZ = 6971;\nlibnoise_Utils.GeneratorSeed = 1013;\nlibnoise_Utils.GeneratorShift = 8;\nlibnoise_Utils.Randoms = [-0.763874,-0.596439,-0.246489,0.0,0.396055,0.904518,-0.158073,0.0,-0.499004,-0.8665,-0.0131631,0.0,0.468724,-0.824756,0.316346,0.0,0.829598,0.43195,0.353816,0.0,-0.454473,0.629497,-0.630228,0.0,-0.162349,-0.869962,-0.465628,0.0,0.932805,0.253451,0.256198,0.0,-0.345419,0.927299,-0.144227,0.0,-0.715026,-0.293698,-0.634413,0.0,-0.245997,0.717467,-0.651711,0.0,-0.967409,-0.250435,-0.037451,0.0,0.901729,0.397108,-0.170852,0.0,0.892657,-0.0720622,-0.444938,0.0,0.0260084,-0.0361701,0.999007,0.0,0.949107,-0.19486,0.247439,0.0,0.471803,-0.807064,-0.355036,0.0,0.879737,0.141845,0.453809,0.0,0.570747,0.696415,0.435033,0.0,-0.141751,-0.988233,-0.0574584,0.0,-0.58219,-0.0303005,0.812488,0.0,-0.60922,0.239482,-0.755975,0.0,0.299394,-0.197066,-0.933557,0.0,-0.851615,-0.220702,-0.47544,0.0,0.848886,0.341829,-0.403169,0.0,-0.156129,-0.687241,0.709453,0.0,-0.665651,0.626724,0.405124,0.0,0.595914,-0.674582,0.43569,0.0,0.171025,-0.509292,0.843428,0.0,0.78605,0.536414,-0.307222,0.0,0.18905,-0.791613,0.581042,0.0,-0.294916,0.844994,0.446105,0.0,0.342031,-0.58736,-0.7335,0.0,0.57155,0.7869,0.232635,0.0,0.885026,-0.408223,0.223791,0.0,-0.789518,0.571645,0.223347,0.0,0.774571,0.31566,0.548087,0.0,-0.79695,-0.0433603,-0.602487,0.0,-0.142425,-0.473249,-0.869339,0.0,-0.0698838,0.170442,0.982886,0.0,0.687815,-0.484748,0.540306,0.0,0.543703,-0.534446,-0.647112,0.0,0.97186,0.184391,-0.146588,0.0,0.707084,0.485713,-0.513921,0.0,0.942302,0.331945,0.043348,0.0,0.499084,0.599922,0.625307,0.0,-0.289203,0.211107,0.9337,0.0,0.412433,-0.71667,-0.56239,0.0,0.87721,-0.082816,0.47291,0.0,-0.420685,-0.214278,0.881538,0.0,0.752558,-0.0391579,0.657361,0.0,0.0765725,-0.996789,0.0234082,0.0,-0.544312,-0.309435,-0.779727,0.0,-0.455358,-0.415572,0.787368,0.0,-0.874586,0.483746,0.0330131,0.0,0.245172,-0.0838623,0.965846,0.0,0.382293,-0.432813,0.81641,0.0,-0.287735,-0.905514,0.311853,0.0,-0.667704,0.704955,-0.239186,0.0,0.717885,-0.464002,-0.518983,0.0,0.976342,-0.214895,0.0240053,0.0,-0.0733096,-0.921136,0.382276,0.0,-0.986284,0.151224,-0.0661379,0.0,-0.899319,-0.429671,0.0812908,0.0,0.652102,-0.724625,0.222893,0.0,0.203761,0.458023,-0.865272,0.0,-0.030396,0.698724,-0.714745,0.0,-0.460232,0.839138,0.289887,0.0,-0.0898602,0.837894,0.538386,0.0,-0.731595,0.0793784,0.677102,0.0,-0.447236,-0.788397,0.422386,0.0,0.186481,0.645855,-0.740335,0.0,-0.259006,0.935463,0.240467,0.0,0.445839,0.819655,-0.359712,0.0,0.349962,0.755022,-0.554499,0.0,-0.997078,-0.0359577,0.0673977,0.0,-0.431163,-0.147516,-0.890133,0.0,0.299648,-0.63914,0.708316,0.0,0.397043,0.566526,-0.722084,0.0,-0.502489,0.438308,-0.745246,0.0,0.0687235,0.354097,0.93268,0.0,-0.0476651,-0.462597,0.885286,0.0,-0.221934,0.900739,-0.373383,0.0,-0.956107,-0.225676,0.186893,0.0,-0.187627,0.391487,-0.900852,0.0,-0.224209,-0.315405,0.92209,0.0,-0.730807,-0.537068,0.421283,0.0,-0.0353135,-0.816748,0.575913,0.0,-0.941391,0.176991,-0.287153,0.0,-0.154174,0.390458,0.90762,0.0,-0.283847,0.533842,0.796519,0.0,-0.482737,-0.850448,0.209052,0.0,-0.649175,0.477748,0.591886,0.0,0.885373,-0.405387,-0.227543,0.0,-0.147261,0.181623,-0.972279,0.0,0.0959236,-0.115847,-0.988624,0.0,-0.89724,-0.191348,0.397928,0.0,0.903553,-0.428461,-0.00350461,0.0,0.849072,-0.295807,-0.437693,0.0,0.65551,0.741754,-0.141804,0.0,0.61598,-0.178669,0.767232,0.0,0.0112967,0.932256,-0.361623,0.0,-0.793031,0.258012,0.551845,0.0,0.421933,0.454311,0.784585,0.0,-0.319993,0.0401618,-0.946568,0.0,-0.81571,0.551307,-0.175151,0.0,-0.377644,0.00322313,0.925945,0.0,0.129759,-0.666581,-0.734052,0.0,0.601901,-0.654237,-0.457919,0.0,-0.927463,-0.0343576,-0.372334,0.0,-0.438663,-0.868301,-0.231578,0.0,-0.648845,-0.749138,-0.133387,0.0,0.507393,-0.588294,0.629653,0.0,0.726958,0.623665,0.287358,0.0,0.411159,0.367614,-0.834151,0.0,0.806333,0.585117,-0.0864016,0.0,0.263935,-0.880876,0.392932,0.0,0.421546,-0.201336,0.884174,0.0,-0.683198,-0.569557,-0.456996,0.0,-0.117116,-0.0406654,-0.992285,0.0,-0.643679,-0.109196,-0.757465,0.0,-0.561559,-0.62989,0.536554,0.0,0.0628422,0.104677,-0.992519,0.0,0.480759,-0.2867,-0.828658,0.0,-0.228559,-0.228965,-0.946222,0.0,-0.10194,-0.65706,-0.746914,0.0,0.0689193,-0.678236,0.731605,0.0,0.401019,-0.754026,0.52022,0.0,-0.742141,0.547083,-0.387203,0.0,-0.00210603,-0.796417,-0.604745,0.0,0.296725,-0.409909,-0.862513,0.0,-0.260932,-0.798201,0.542945,0.0,-0.641628,0.742379,0.192838,0.0,-0.186009,-0.101514,0.97729,0.0,0.106711,-0.962067,0.251079,0.0,-0.743499,0.30988,-0.592607,0.0,-0.795853,-0.605066,-0.0226607,0.0,-0.828661,-0.419471,-0.370628,0.0,0.0847218,-0.489815,-0.8677,0.0,-0.381405,0.788019,-0.483276,0.0,0.282042,-0.953394,0.107205,0.0,0.530774,0.847413,0.0130696,0.0,0.0515397,0.922524,0.382484,0.0,-0.631467,-0.709046,0.313852,0.0,0.688248,0.517273,0.508668,0.0,0.646689,-0.333782,-0.685845,0.0,-0.932528,-0.247532,-0.262906,0.0,0.630609,0.68757,-0.359973,0.0,0.577805,-0.394189,0.714673,0.0,-0.887833,-0.437301,-0.14325,0.0,0.690982,0.174003,0.701617,0.0,-0.866701,0.0118182,0.498689,0.0,-0.482876,0.727143,0.487949,0.0,-0.577567,0.682593,-0.447752,0.0,0.373768,0.0982991,0.922299,0.0,0.170744,0.964243,-0.202687,0.0,0.993654,-0.035791,-0.106632,0.0,0.587065,0.4143,-0.695493,0.0,-0.396509,0.26509,-0.878924,0.0,-0.0866853,0.83553,-0.542563,0.0,0.923193,0.133398,-0.360443,0.0,0.00379108,-0.258618,0.965972,0.0,0.239144,0.245154,-0.939526,0.0,0.758731,-0.555871,0.33961,0.0,0.295355,0.309513,0.903862,0.0,0.0531222,-0.91003,-0.411124,0.0,0.270452,0.0229439,-0.96246,0.0,0.563634,0.0324352,0.825387,0.0,0.156326,0.147392,0.976646,0.0,-0.0410141,0.981824,0.185309,0.0,-0.385562,-0.576343,-0.720535,0.0,0.388281,0.904441,0.176702,0.0,0.945561,-0.192859,-0.262146,0.0,0.844504,0.520193,0.127325,0.0,0.0330893,0.999121,-0.0257505,0.0,-0.592616,-0.482475,-0.644999,0.0,0.539471,0.631024,-0.557476,0.0,0.655851,-0.027319,-0.754396,0.0,0.274465,0.887659,0.369772,0.0,-0.123419,0.975177,-0.183842,0.0,-0.223429,0.708045,0.66989,0.0,-0.908654,0.196302,0.368528,0.0,-0.95759,-0.00863708,0.288005,0.0,0.960535,0.030592,0.276472,0.0,-0.413146,0.907537,0.0754161,0.0,-0.847992,0.350849,-0.397259,0.0,0.614736,0.395841,0.68221,0.0,-0.503504,-0.666128,-0.550234,0.0,-0.268833,-0.738524,-0.618314,0.0,0.792737,-0.60001,-0.107502,0.0,-0.637582,0.508144,-0.579032,0.0,0.750105,0.282165,-0.598101,0.0,-0.351199,-0.392294,-0.850155,0.0,0.250126,-0.960993,-0.118025,0.0,-0.732341,0.680909,-0.0063274,0.0,-0.760674,-0.141009,0.633634,0.0,0.222823,-0.304012,0.926243,0.0,0.209178,0.505671,0.836984,0.0,0.757914,-0.56629,-0.323857,0.0,-0.782926,-0.339196,0.52151,0.0,-0.462952,0.585565,0.665424,0.0,0.61879,0.194119,-0.761194,0.0,0.741388,-0.276743,0.611357,0.0,0.707571,0.702621,0.0752872,0.0,0.156562,0.819977,0.550569,0.0,-0.793606,0.440216,0.42,0.0,0.234547,0.885309,-0.401517,0.0,0.132598,0.80115,-0.58359,0.0,-0.377899,-0.639179,0.669808,0.0,-0.865993,-0.396465,0.304748,0.0,-0.624815,-0.44283,0.643046,0.0,-0.485705,0.825614,-0.287146,0.0,-0.971788,0.175535,0.157529,0.0,-0.456027,0.392629,0.798675,0.0,-0.0104443,0.521623,-0.853112,0.0,-0.660575,-0.74519,0.091282,0.0,-0.0157698,-0.307475,-0.951425,0.0,-0.603467,-0.250192,0.757121,0.0,0.506876,0.25006,0.824952,0.0,0.255404,0.966794,0.00884498,0.0,0.466764,-0.874228,-0.133625,0.0,0.475077,-0.0682351,-0.877295,0.0,-0.224967,-0.938972,-0.260233,0.0,-0.377929,-0.814757,-0.439705,0.0,-0.305847,0.542333,-0.782517,0.0,0.26658,-0.902905,-0.337191,0.0,0.0275773,0.322158,-0.946284,0.0,0.0185422,0.716349,0.697496,0.0,-0.20483,0.978416,0.0273371,0.0,-0.898276,0.373969,0.230752,0.0,-0.00909378,0.546594,0.837349,0.0,0.6602,-0.751089,0.000959236,0.0,0.855301,-0.303056,0.420259,0.0,0.797138,0.0623013,-0.600574,0.0,0.48947,-0.866813,0.0951509,0.0,0.251142,0.674531,0.694216,0.0,-0.578422,-0.737373,-0.348867,0.0,-0.254689,-0.514807,0.818601,0.0,0.374972,0.761612,0.528529,0.0,0.640303,-0.734271,-0.225517,0.0,-0.638076,0.285527,0.715075,0.0,0.772956,-0.15984,-0.613995,0.0,0.798217,-0.590628,0.118356,0.0,-0.986276,-0.0578337,-0.154644,0.0,-0.312988,-0.94549,0.0899272,0.0,-0.497338,0.178325,0.849032,0.0,-0.101136,-0.981014,0.165477,0.0,-0.521688,0.0553434,-0.851339,0.0,-0.786182,-0.583814,0.202678,0.0,-0.565191,0.821858,-0.0714658,0.0,0.437895,0.152598,-0.885981,0.0,-0.92394,0.353436,-0.14635,0.0,0.212189,-0.815162,-0.538969,0.0,-0.859262,0.143405,-0.491024,0.0,0.991353,0.112814,0.0670273,0.0,0.0337884,-0.979891,-0.196654,0.0];\nlibnoise_operator_Turbulence.X0 = 0.189422607421875;\nlibnoise_operator_Turbulence.Y0 = 0.99371337890625;\nlibnoise_operator_Turbulence.Z0 = 0.4781646728515625;\nlibnoise_operator_Turbulence.X1 = 0.4046478271484375;\nlibnoise_operator_Turbulence.Y1 = 0.276611328125;\nlibnoise_operator_Turbulence.Z1 = 0.9230499267578125;\nlibnoise_operator_Turbulence.X2 = 0.82122802734375;\nlibnoise_operator_Turbulence.Y2 = 0.1710968017578125;\nlibnoise_operator_Turbulence.Z2 = 0.6842803955078125;\n})(exports);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libnoise/artifacts/js/libnoise.js\n// module id = 28\n// module chunks = 0","// find the last entry in voxelSphereAreaByDistance for while the first element is <= your distance, the second element tells you how many sortedVoxelDistances elements to look at\r\n\r\nexport default {\r\n\tgetSortedList(radius: number): Array< Array<number> > {\r\n\t\tlet voxelCount = 1\r\n\t\tfor (let i = 0; i < voxelSphereAreaByDistance.length; i += 1) {\r\n\t\t\tif (voxelSphereAreaByDistance[i][0] > radius) { break }\r\n\t\t\tvoxelCount = voxelSphereAreaByDistance[i][1]\r\n\t\t}\r\n\t\treturn sortedVoxelDistances.slice(0, voxelCount)\r\n\t}\r\n}\r\n\r\nconst voxelSphereAreaByDistance = [[1, 7], [1.414, 19], [1.732, 27], [2, 33], [2.236, 57], [2.449, 81], [2.828, 93], [3, 123], [3.162, 147], [3.317, 171], [3.464, 179], [3.606, 203], [3.742, 251], [4, 257], [4.123, 305], [4.243, 341], [4.359, 365], [4.472, 389], [4.583, 437], [4.69, 461], [4.899, 485], [5, 515], [5.099, 587], [5.196, 619], [5.385, 691], [5.477, 739], [5.657, 751], [5.745, 799], [5.831, 847], [5.916, 895], [6, 925], [6.083, 949], [6.164, 1021], [6.325, 1045], [6.403, 1141], [6.481, 1189], [6.557, 1213], [6.633, 1237], [6.708, 1309], [6.782, 1357], [6.928, 1365], [7, 1419], [7.071, 1503], [7.141, 1551], [7.211, 1575], [7.28, 1647], [7.348, 1743], [7.483, 1791], [7.55, 1839], [7.616, 1863], [7.681, 1935], [7.81, 2007], [7.874, 2103], [8, 2109], [8.062, 2205], [8.124, 2301], [8.185, 2325], [8.246, 2373], [8.307, 2469], [8.367, 2517]]\r\n\r\nconst sortedVoxelDistances = [[0, 0, 0], [-1, 0, 0], [0, -1, 0], [0, 0, -1], [0, 0, 1], [0, 1, 0], [1, 0, 0], [-1, -1, 0], [-1, 0, -1], [-1, 0, 1], [-1, 1, 0], [0, -1, -1], [0, -1, 1], [0, 1, -1], [0, 1, 1], [1, -1, 0], [1, 0, -1], [1, 0, 1], [1, 1, 0], [-1, -1, -1], [-1, -1, 1], [-1, 1, -1], [-1, 1, 1], [1, -1, -1], [1, -1, 1], [1, 1, -1], [1, 1, 1], [-2, 0, 0], [0, -2, 0], [0, 0, -2], [0, 0, 2], [0, 2, 0], [2, 0, 0], [-2, -1, 0], [-2, 0, -1], [-2, 0, 1], [-2, 1, 0], [-1, -2, 0], [-1, 0, -2], [-1, 0, 2], [-1, 2, 0], [0, -2, -1], [0, -2, 1], [0, -1, -2], [0, -1, 2], [0, 1, -2], [0, 1, 2], [0, 2, -1], [0, 2, 1], [1, -2, 0], [1, 0, -2], [1, 0, 2], [1, 2, 0], [2, -1, 0], [2, 0, -1], [2, 0, 1], [2, 1, 0], [-2, -1, -1], [-2, -1, 1], [-2, 1, -1], [-2, 1, 1], [-1, -2, -1], [-1, -2, 1], [-1, -1, -2], [-1, -1, 2], [-1, 1, -2], [-1, 1, 2], [-1, 2, -1], [-1, 2, 1], [1, -2, -1], [1, -2, 1], [1, -1, -2], [1, -1, 2], [1, 1, -2], [1, 1, 2], [1, 2, -1], [1, 2, 1], [2, -1, -1], [2, -1, 1], [2, 1, -1], [2, 1, 1], [-2, -2, 0], [-2, 0, -2], [-2, 0, 2], [-2, 2, 0], [0, -2, -2], [0, -2, 2], [0, 2, -2], [0, 2, 2], [2, -2, 0], [2, 0, -2], [2, 0, 2], [2, 2, 0], [-3, 0, 0], [-2, -2, -1], [-2, -2, 1], [-2, -1, -2], [-2, -1, 2], [-2, 1, -2], [-2, 1, 2], [-2, 2, -1], [-2, 2, 1], [-1, -2, -2], [-1, -2, 2], [-1, 2, -2], [-1, 2, 2], [0, -3, 0], [0, 0, -3], [0, 0, 3], [0, 3, 0], [1, -2, -2], [1, -2, 2], [1, 2, -2], [1, 2, 2], [2, -2, -1], [2, -2, 1], [2, -1, -2], [2, -1, 2], [2, 1, -2], [2, 1, 2], [2, 2, -1], [2, 2, 1], [3, 0, 0], [-3, -1, 0], [-3, 0, -1], [-3, 0, 1], [-3, 1, 0], [-1, -3, 0], [-1, 0, -3], [-1, 0, 3], [-1, 3, 0], [0, -3, -1], [0, -3, 1], [0, -1, -3], [0, -1, 3], [0, 1, -3], [0, 1, 3], [0, 3, -1], [0, 3, 1], [1, -3, 0], [1, 0, -3], [1, 0, 3], [1, 3, 0], [3, -1, 0], [3, 0, -1], [3, 0, 1], [3, 1, 0], [-3, -1, -1], [-3, -1, 1], [-3, 1, -1], [-3, 1, 1], [-1, -3, -1], [-1, -3, 1], [-1, -1, -3], [-1, -1, 3], [-1, 1, -3], [-1, 1, 3], [-1, 3, -1], [-1, 3, 1], [1, -3, -1], [1, -3, 1], [1, -1, -3], [1, -1, 3], [1, 1, -3], [1, 1, 3], [1, 3, -1], [1, 3, 1], [3, -1, -1], [3, -1, 1], [3, 1, -1], [3, 1, 1], [-2, -2, -2], [-2, -2, 2], [-2, 2, -2], [-2, 2, 2], [2, -2, -2], [2, -2, 2], [2, 2, -2], [2, 2, 2], [-3, -2, 0], [-3, 0, -2], [-3, 0, 2], [-3, 2, 0], [-2, -3, 0], [-2, 0, -3], [-2, 0, 3], [-2, 3, 0], [0, -3, -2], [0, -3, 2], [0, -2, -3], [0, -2, 3], [0, 2, -3], [0, 2, 3], [0, 3, -2], [0, 3, 2], [2, -3, 0], [2, 0, -3], [2, 0, 3], [2, 3, 0], [3, -2, 0], [3, 0, -2], [3, 0, 2], [3, 2, 0], [-3, -2, -1], [-3, -2, 1], [-3, -1, -2], [-3, -1, 2], [-3, 1, -2], [-3, 1, 2], [-3, 2, -1], [-3, 2, 1], [-2, -3, -1], [-2, -3, 1], [-2, -1, -3], [-2, -1, 3], [-2, 1, -3], [-2, 1, 3], [-2, 3, -1], [-2, 3, 1], [-1, -3, -2], [-1, -3, 2], [-1, -2, -3], [-1, -2, 3], [-1, 2, -3], [-1, 2, 3], [-1, 3, -2], [-1, 3, 2], [1, -3, -2], [1, -3, 2], [1, -2, -3], [1, -2, 3], [1, 2, -3], [1, 2, 3], [1, 3, -2], [1, 3, 2], [2, -3, -1], [2, -3, 1], [2, -1, -3], [2, -1, 3], [2, 1, -3], [2, 1, 3], [2, 3, -1], [2, 3, 1], [3, -2, -1], [3, -2, 1], [3, -1, -2], [3, -1, 2], [3, 1, -2], [3, 1, 2], [3, 2, -1], [3, 2, 1], [-4, 0, 0], [0, -4, 0], [0, 0, -4], [0, 0, 4], [0, 4, 0], [4, 0, 0], [-4, -1, 0], [-4, 0, -1], [-4, 0, 1], [-4, 1, 0], [-3, -2, -2], [-3, -2, 2], [-3, 2, -2], [-3, 2, 2], [-2, -3, -2], [-2, -3, 2], [-2, -2, -3], [-2, -2, 3], [-2, 2, -3], [-2, 2, 3], [-2, 3, -2], [-2, 3, 2], [-1, -4, 0], [-1, 0, -4], [-1, 0, 4], [-1, 4, 0], [0, -4, -1], [0, -4, 1], [0, -1, -4], [0, -1, 4], [0, 1, -4], [0, 1, 4], [0, 4, -1], [0, 4, 1], [1, -4, 0], [1, 0, -4], [1, 0, 4], [1, 4, 0], [2, -3, -2], [2, -3, 2], [2, -2, -3], [2, -2, 3], [2, 2, -3], [2, 2, 3], [2, 3, -2], [2, 3, 2], [3, -2, -2], [3, -2, 2], [3, 2, -2], [3, 2, 2], [4, -1, 0], [4, 0, -1], [4, 0, 1], [4, 1, 0], [-4, -1, -1], [-4, -1, 1], [-4, 1, -1], [-4, 1, 1], [-3, -3, 0], [-3, 0, -3], [-3, 0, 3], [-3, 3, 0], [-1, -4, -1], [-1, -4, 1], [-1, -1, -4], [-1, -1, 4], [-1, 1, -4], [-1, 1, 4], [-1, 4, -1], [-1, 4, 1], [0, -3, -3], [0, -3, 3], [0, 3, -3], [0, 3, 3], [1, -4, -1], [1, -4, 1], [1, -1, -4], [1, -1, 4], [1, 1, -4], [1, 1, 4], [1, 4, -1], [1, 4, 1], [3, -3, 0], [3, 0, -3], [3, 0, 3], [3, 3, 0], [4, -1, -1], [4, -1, 1], [4, 1, -1], [4, 1, 1], [-3, -3, -1], [-3, -3, 1], [-3, -1, -3], [-3, -1, 3], [-3, 1, -3], [-3, 1, 3], [-3, 3, -1], [-3, 3, 1], [-1, -3, -3], [-1, -3, 3], [-1, 3, -3], [-1, 3, 3], [1, -3, -3], [1, -3, 3], [1, 3, -3], [1, 3, 3], [3, -3, -1], [3, -3, 1], [3, -1, -3], [3, -1, 3], [3, 1, -3], [3, 1, 3], [3, 3, -1], [3, 3, 1], [-4, -2, 0], [-4, 0, -2], [-4, 0, 2], [-4, 2, 0], [-2, -4, 0], [-2, 0, -4], [-2, 0, 4], [-2, 4, 0], [0, -4, -2], [0, -4, 2], [0, -2, -4], [0, -2, 4], [0, 2, -4], [0, 2, 4], [0, 4, -2], [0, 4, 2], [2, -4, 0], [2, 0, -4], [2, 0, 4], [2, 4, 0], [4, -2, 0], [4, 0, -2], [4, 0, 2], [4, 2, 0], [-4, -2, -1], [-4, -2, 1], [-4, -1, -2], [-4, -1, 2], [-4, 1, -2], [-4, 1, 2], [-4, 2, -1], [-4, 2, 1], [-2, -4, -1], [-2, -4, 1], [-2, -1, -4], [-2, -1, 4], [-2, 1, -4], [-2, 1, 4], [-2, 4, -1], [-2, 4, 1], [-1, -4, -2], [-1, -4, 2], [-1, -2, -4], [-1, -2, 4], [-1, 2, -4], [-1, 2, 4], [-1, 4, -2], [-1, 4, 2], [1, -4, -2], [1, -4, 2], [1, -2, -4], [1, -2, 4], [1, 2, -4], [1, 2, 4], [1, 4, -2], [1, 4, 2], [2, -4, -1], [2, -4, 1], [2, -1, -4], [2, -1, 4], [2, 1, -4], [2, 1, 4], [2, 4, -1], [2, 4, 1], [4, -2, -1], [4, -2, 1], [4, -1, -2], [4, -1, 2], [4, 1, -2], [4, 1, 2], [4, 2, -1], [4, 2, 1], [-3, -3, -2], [-3, -3, 2], [-3, -2, -3], [-3, -2, 3], [-3, 2, -3], [-3, 2, 3], [-3, 3, -2], [-3, 3, 2], [-2, -3, -3], [-2, -3, 3], [-2, 3, -3], [-2, 3, 3], [2, -3, -3], [2, -3, 3], [2, 3, -3], [2, 3, 3], [3, -3, -2], [3, -3, 2], [3, -2, -3], [3, -2, 3], [3, 2, -3], [3, 2, 3], [3, 3, -2], [3, 3, 2], [-4, -2, -2], [-4, -2, 2], [-4, 2, -2], [-4, 2, 2], [-2, -4, -2], [-2, -4, 2], [-2, -2, -4], [-2, -2, 4], [-2, 2, -4], [-2, 2, 4], [-2, 4, -2], [-2, 4, 2], [2, -4, -2], [2, -4, 2], [2, -2, -4], [2, -2, 4], [2, 2, -4], [2, 2, 4], [2, 4, -2], [2, 4, 2], [4, -2, -2], [4, -2, 2], [4, 2, -2], [4, 2, 2], [-5, 0, 0], [-4, -3, 0], [-4, 0, -3], [-4, 0, 3], [-4, 3, 0], [-3, -4, 0], [-3, 0, -4], [-3, 0, 4], [-3, 4, 0], [0, -5, 0], [0, -4, -3], [0, -4, 3], [0, -3, -4], [0, -3, 4], [0, 0, -5], [0, 0, 5], [0, 3, -4], [0, 3, 4], [0, 4, -3], [0, 4, 3], [0, 5, 0], [3, -4, 0], [3, 0, -4], [3, 0, 4], [3, 4, 0], [4, -3, 0], [4, 0, -3], [4, 0, 3], [4, 3, 0], [5, 0, 0], [-5, -1, 0], [-5, 0, -1], [-5, 0, 1], [-5, 1, 0], [-4, -3, -1], [-4, -3, 1], [-4, -1, -3], [-4, -1, 3], [-4, 1, -3], [-4, 1, 3], [-4, 3, -1], [-4, 3, 1], [-3, -4, -1], [-3, -4, 1], [-3, -1, -4], [-3, -1, 4], [-3, 1, -4], [-3, 1, 4], [-3, 4, -1], [-3, 4, 1], [-1, -5, 0], [-1, -4, -3], [-1, -4, 3], [-1, -3, -4], [-1, -3, 4], [-1, 0, -5], [-1, 0, 5], [-1, 3, -4], [-1, 3, 4], [-1, 4, -3], [-1, 4, 3], [-1, 5, 0], [0, -5, -1], [0, -5, 1], [0, -1, -5], [0, -1, 5], [0, 1, -5], [0, 1, 5], [0, 5, -1], [0, 5, 1], [1, -5, 0], [1, -4, -3], [1, -4, 3], [1, -3, -4], [1, -3, 4], [1, 0, -5], [1, 0, 5], [1, 3, -4], [1, 3, 4], [1, 4, -3], [1, 4, 3], [1, 5, 0], [3, -4, -1], [3, -4, 1], [3, -1, -4], [3, -1, 4], [3, 1, -4], [3, 1, 4], [3, 4, -1], [3, 4, 1], [4, -3, -1], [4, -3, 1], [4, -1, -3], [4, -1, 3], [4, 1, -3], [4, 1, 3], [4, 3, -1], [4, 3, 1], [5, -1, 0], [5, 0, -1], [5, 0, 1], [5, 1, 0], [-5, -1, -1], [-5, -1, 1], [-5, 1, -1], [-5, 1, 1], [-3, -3, -3], [-3, -3, 3], [-3, 3, -3], [-3, 3, 3], [-1, -5, -1], [-1, -5, 1], [-1, -1, -5], [-1, -1, 5], [-1, 1, -5], [-1, 1, 5], [-1, 5, -1], [-1, 5, 1], [1, -5, -1], [1, -5, 1], [1, -1, -5], [1, -1, 5], [1, 1, -5], [1, 1, 5], [1, 5, -1], [1, 5, 1], [3, -3, -3], [3, -3, 3], [3, 3, -3], [3, 3, 3], [5, -1, -1], [5, -1, 1], [5, 1, -1], [5, 1, 1], [-5, -2, 0], [-5, 0, -2], [-5, 0, 2], [-5, 2, 0], [-4, -3, -2], [-4, -3, 2], [-4, -2, -3], [-4, -2, 3], [-4, 2, -3], [-4, 2, 3], [-4, 3, -2], [-4, 3, 2], [-3, -4, -2], [-3, -4, 2], [-3, -2, -4], [-3, -2, 4], [-3, 2, -4], [-3, 2, 4], [-3, 4, -2], [-3, 4, 2], [-2, -5, 0], [-2, -4, -3], [-2, -4, 3], [-2, -3, -4], [-2, -3, 4], [-2, 0, -5], [-2, 0, 5], [-2, 3, -4], [-2, 3, 4], [-2, 4, -3], [-2, 4, 3], [-2, 5, 0], [0, -5, -2], [0, -5, 2], [0, -2, -5], [0, -2, 5], [0, 2, -5], [0, 2, 5], [0, 5, -2], [0, 5, 2], [2, -5, 0], [2, -4, -3], [2, -4, 3], [2, -3, -4], [2, -3, 4], [2, 0, -5], [2, 0, 5], [2, 3, -4], [2, 3, 4], [2, 4, -3], [2, 4, 3], [2, 5, 0], [3, -4, -2], [3, -4, 2], [3, -2, -4], [3, -2, 4], [3, 2, -4], [3, 2, 4], [3, 4, -2], [3, 4, 2], [4, -3, -2], [4, -3, 2], [4, -2, -3], [4, -2, 3], [4, 2, -3], [4, 2, 3], [4, 3, -2], [4, 3, 2], [5, -2, 0], [5, 0, -2], [5, 0, 2], [5, 2, 0], [-5, -2, -1], [-5, -2, 1], [-5, -1, -2], [-5, -1, 2], [-5, 1, -2], [-5, 1, 2], [-5, 2, -1], [-5, 2, 1], [-2, -5, -1], [-2, -5, 1], [-2, -1, -5], [-2, -1, 5], [-2, 1, -5], [-2, 1, 5], [-2, 5, -1], [-2, 5, 1], [-1, -5, -2], [-1, -5, 2], [-1, -2, -5], [-1, -2, 5], [-1, 2, -5], [-1, 2, 5], [-1, 5, -2], [-1, 5, 2], [1, -5, -2], [1, -5, 2], [1, -2, -5], [1, -2, 5], [1, 2, -5], [1, 2, 5], [1, 5, -2], [1, 5, 2], [2, -5, -1], [2, -5, 1], [2, -1, -5], [2, -1, 5], [2, 1, -5], [2, 1, 5], [2, 5, -1], [2, 5, 1], [5, -2, -1], [5, -2, 1], [5, -1, -2], [5, -1, 2], [5, 1, -2], [5, 1, 2], [5, 2, -1], [5, 2, 1], [-4, -4, 0], [-4, 0, -4], [-4, 0, 4], [-4, 4, 0], [0, -4, -4], [0, -4, 4], [0, 4, -4], [0, 4, 4], [4, -4, 0], [4, 0, -4], [4, 0, 4], [4, 4, 0], [-5, -2, -2], [-5, -2, 2], [-5, 2, -2], [-5, 2, 2], [-4, -4, -1], [-4, -4, 1], [-4, -1, -4], [-4, -1, 4], [-4, 1, -4], [-4, 1, 4], [-4, 4, -1], [-4, 4, 1], [-2, -5, -2], [-2, -5, 2], [-2, -2, -5], [-2, -2, 5], [-2, 2, -5], [-2, 2, 5], [-2, 5, -2], [-2, 5, 2], [-1, -4, -4], [-1, -4, 4], [-1, 4, -4], [-1, 4, 4], [1, -4, -4], [1, -4, 4], [1, 4, -4], [1, 4, 4], [2, -5, -2], [2, -5, 2], [2, -2, -5], [2, -2, 5], [2, 2, -5], [2, 2, 5], [2, 5, -2], [2, 5, 2], [4, -4, -1], [4, -4, 1], [4, -1, -4], [4, -1, 4], [4, 1, -4], [4, 1, 4], [4, 4, -1], [4, 4, 1], [5, -2, -2], [5, -2, 2], [5, 2, -2], [5, 2, 2], [-5, -3, 0], [-5, 0, -3], [-5, 0, 3], [-5, 3, 0], [-4, -3, -3], [-4, -3, 3], [-4, 3, -3], [-4, 3, 3], [-3, -5, 0], [-3, -4, -3], [-3, -4, 3], [-3, -3, -4], [-3, -3, 4], [-3, 0, -5], [-3, 0, 5], [-3, 3, -4], [-3, 3, 4], [-3, 4, -3], [-3, 4, 3], [-3, 5, 0], [0, -5, -3], [0, -5, 3], [0, -3, -5], [0, -3, 5], [0, 3, -5], [0, 3, 5], [0, 5, -3], [0, 5, 3], [3, -5, 0], [3, -4, -3], [3, -4, 3], [3, -3, -4], [3, -3, 4], [3, 0, -5], [3, 0, 5], [3, 3, -4], [3, 3, 4], [3, 4, -3], [3, 4, 3], [3, 5, 0], [4, -3, -3], [4, -3, 3], [4, 3, -3], [4, 3, 3], [5, -3, 0], [5, 0, -3], [5, 0, 3], [5, 3, 0], [-5, -3, -1], [-5, -3, 1], [-5, -1, -3], [-5, -1, 3], [-5, 1, -3], [-5, 1, 3], [-5, 3, -1], [-5, 3, 1], [-3, -5, -1], [-3, -5, 1], [-3, -1, -5], [-3, -1, 5], [-3, 1, -5], [-3, 1, 5], [-3, 5, -1], [-3, 5, 1], [-1, -5, -3], [-1, -5, 3], [-1, -3, -5], [-1, -3, 5], [-1, 3, -5], [-1, 3, 5], [-1, 5, -3], [-1, 5, 3], [1, -5, -3], [1, -5, 3], [1, -3, -5], [1, -3, 5], [1, 3, -5], [1, 3, 5], [1, 5, -3], [1, 5, 3], [3, -5, -1], [3, -5, 1], [3, -1, -5], [3, -1, 5], [3, 1, -5], [3, 1, 5], [3, 5, -1], [3, 5, 1], [5, -3, -1], [5, -3, 1], [5, -1, -3], [5, -1, 3], [5, 1, -3], [5, 1, 3], [5, 3, -1], [5, 3, 1], [-6, 0, 0], [-4, -4, -2], [-4, -4, 2], [-4, -2, -4], [-4, -2, 4], [-4, 2, -4], [-4, 2, 4], [-4, 4, -2], [-4, 4, 2], [-2, -4, -4], [-2, -4, 4], [-2, 4, -4], [-2, 4, 4], [0, -6, 0], [0, 0, -6], [0, 0, 6], [0, 6, 0], [2, -4, -4], [2, -4, 4], [2, 4, -4], [2, 4, 4], [4, -4, -2], [4, -4, 2], [4, -2, -4], [4, -2, 4], [4, 2, -4], [4, 2, 4], [4, 4, -2], [4, 4, 2], [6, 0, 0], [-6, -1, 0], [-6, 0, -1], [-6, 0, 1], [-6, 1, 0], [-1, -6, 0], [-1, 0, -6], [-1, 0, 6], [-1, 6, 0], [0, -6, -1], [0, -6, 1], [0, -1, -6], [0, -1, 6], [0, 1, -6], [0, 1, 6], [0, 6, -1], [0, 6, 1], [1, -6, 0], [1, 0, -6], [1, 0, 6], [1, 6, 0], [6, -1, 0], [6, 0, -1], [6, 0, 1], [6, 1, 0], [-6, -1, -1], [-6, -1, 1], [-6, 1, -1], [-6, 1, 1], [-5, -3, -2], [-5, -3, 2], [-5, -2, -3], [-5, -2, 3], [-5, 2, -3], [-5, 2, 3], [-5, 3, -2], [-5, 3, 2], [-3, -5, -2], [-3, -5, 2], [-3, -2, -5], [-3, -2, 5], [-3, 2, -5], [-3, 2, 5], [-3, 5, -2], [-3, 5, 2], [-2, -5, -3], [-2, -5, 3], [-2, -3, -5], [-2, -3, 5], [-2, 3, -5], [-2, 3, 5], [-2, 5, -3], [-2, 5, 3], [-1, -6, -1], [-1, -6, 1], [-1, -1, -6], [-1, -1, 6], [-1, 1, -6], [-1, 1, 6], [-1, 6, -1], [-1, 6, 1], [1, -6, -1], [1, -6, 1], [1, -1, -6], [1, -1, 6], [1, 1, -6], [1, 1, 6], [1, 6, -1], [1, 6, 1], [2, -5, -3], [2, -5, 3], [2, -3, -5], [2, -3, 5], [2, 3, -5], [2, 3, 5], [2, 5, -3], [2, 5, 3], [3, -5, -2], [3, -5, 2], [3, -2, -5], [3, -2, 5], [3, 2, -5], [3, 2, 5], [3, 5, -2], [3, 5, 2], [5, -3, -2], [5, -3, 2], [5, -2, -3], [5, -2, 3], [5, 2, -3], [5, 2, 3], [5, 3, -2], [5, 3, 2], [6, -1, -1], [6, -1, 1], [6, 1, -1], [6, 1, 1], [-6, -2, 0], [-6, 0, -2], [-6, 0, 2], [-6, 2, 0], [-2, -6, 0], [-2, 0, -6], [-2, 0, 6], [-2, 6, 0], [0, -6, -2], [0, -6, 2], [0, -2, -6], [0, -2, 6], [0, 2, -6], [0, 2, 6], [0, 6, -2], [0, 6, 2], [2, -6, 0], [2, 0, -6], [2, 0, 6], [2, 6, 0], [6, -2, 0], [6, 0, -2], [6, 0, 2], [6, 2, 0], [-6, -2, -1], [-6, -2, 1], [-6, -1, -2], [-6, -1, 2], [-6, 1, -2], [-6, 1, 2], [-6, 2, -1], [-6, 2, 1], [-5, -4, 0], [-5, 0, -4], [-5, 0, 4], [-5, 4, 0], [-4, -5, 0], [-4, -4, -3], [-4, -4, 3], [-4, -3, -4], [-4, -3, 4], [-4, 0, -5], [-4, 0, 5], [-4, 3, -4], [-4, 3, 4], [-4, 4, -3], [-4, 4, 3], [-4, 5, 0], [-3, -4, -4], [-3, -4, 4], [-3, 4, -4], [-3, 4, 4], [-2, -6, -1], [-2, -6, 1], [-2, -1, -6], [-2, -1, 6], [-2, 1, -6], [-2, 1, 6], [-2, 6, -1], [-2, 6, 1], [-1, -6, -2], [-1, -6, 2], [-1, -2, -6], [-1, -2, 6], [-1, 2, -6], [-1, 2, 6], [-1, 6, -2], [-1, 6, 2], [0, -5, -4], [0, -5, 4], [0, -4, -5], [0, -4, 5], [0, 4, -5], [0, 4, 5], [0, 5, -4], [0, 5, 4], [1, -6, -2], [1, -6, 2], [1, -2, -6], [1, -2, 6], [1, 2, -6], [1, 2, 6], [1, 6, -2], [1, 6, 2], [2, -6, -1], [2, -6, 1], [2, -1, -6], [2, -1, 6], [2, 1, -6], [2, 1, 6], [2, 6, -1], [2, 6, 1], [3, -4, -4], [3, -4, 4], [3, 4, -4], [3, 4, 4], [4, -5, 0], [4, -4, -3], [4, -4, 3], [4, -3, -4], [4, -3, 4], [4, 0, -5], [4, 0, 5], [4, 3, -4], [4, 3, 4], [4, 4, -3], [4, 4, 3], [4, 5, 0], [5, -4, 0], [5, 0, -4], [5, 0, 4], [5, 4, 0], [6, -2, -1], [6, -2, 1], [6, -1, -2], [6, -1, 2], [6, 1, -2], [6, 1, 2], [6, 2, -1], [6, 2, 1], [-5, -4, -1], [-5, -4, 1], [-5, -1, -4], [-5, -1, 4], [-5, 1, -4], [-5, 1, 4], [-5, 4, -1], [-5, 4, 1], [-4, -5, -1], [-4, -5, 1], [-4, -1, -5], [-4, -1, 5], [-4, 1, -5], [-4, 1, 5], [-4, 5, -1], [-4, 5, 1], [-1, -5, -4], [-1, -5, 4], [-1, -4, -5], [-1, -4, 5], [-1, 4, -5], [-1, 4, 5], [-1, 5, -4], [-1, 5, 4], [1, -5, -4], [1, -5, 4], [1, -4, -5], [1, -4, 5], [1, 4, -5], [1, 4, 5], [1, 5, -4], [1, 5, 4], [4, -5, -1], [4, -5, 1], [4, -1, -5], [4, -1, 5], [4, 1, -5], [4, 1, 5], [4, 5, -1], [4, 5, 1], [5, -4, -1], [5, -4, 1], [5, -1, -4], [5, -1, 4], [5, 1, -4], [5, 1, 4], [5, 4, -1], [5, 4, 1], [-5, -3, -3], [-5, -3, 3], [-5, 3, -3], [-5, 3, 3], [-3, -5, -3], [-3, -5, 3], [-3, -3, -5], [-3, -3, 5], [-3, 3, -5], [-3, 3, 5], [-3, 5, -3], [-3, 5, 3], [3, -5, -3], [3, -5, 3], [3, -3, -5], [3, -3, 5], [3, 3, -5], [3, 3, 5], [3, 5, -3], [3, 5, 3], [5, -3, -3], [5, -3, 3], [5, 3, -3], [5, 3, 3], [-6, -2, -2], [-6, -2, 2], [-6, 2, -2], [-6, 2, 2], [-2, -6, -2], [-2, -6, 2], [-2, -2, -6], [-2, -2, 6], [-2, 2, -6], [-2, 2, 6], [-2, 6, -2], [-2, 6, 2], [2, -6, -2], [2, -6, 2], [2, -2, -6], [2, -2, 6], [2, 2, -6], [2, 2, 6], [2, 6, -2], [2, 6, 2], [6, -2, -2], [6, -2, 2], [6, 2, -2], [6, 2, 2], [-6, -3, 0], [-6, 0, -3], [-6, 0, 3], [-6, 3, 0], [-5, -4, -2], [-5, -4, 2], [-5, -2, -4], [-5, -2, 4], [-5, 2, -4], [-5, 2, 4], [-5, 4, -2], [-5, 4, 2], [-4, -5, -2], [-4, -5, 2], [-4, -2, -5], [-4, -2, 5], [-4, 2, -5], [-4, 2, 5], [-4, 5, -2], [-4, 5, 2], [-3, -6, 0], [-3, 0, -6], [-3, 0, 6], [-3, 6, 0], [-2, -5, -4], [-2, -5, 4], [-2, -4, -5], [-2, -4, 5], [-2, 4, -5], [-2, 4, 5], [-2, 5, -4], [-2, 5, 4], [0, -6, -3], [0, -6, 3], [0, -3, -6], [0, -3, 6], [0, 3, -6], [0, 3, 6], [0, 6, -3], [0, 6, 3], [2, -5, -4], [2, -5, 4], [2, -4, -5], [2, -4, 5], [2, 4, -5], [2, 4, 5], [2, 5, -4], [2, 5, 4], [3, -6, 0], [3, 0, -6], [3, 0, 6], [3, 6, 0], [4, -5, -2], [4, -5, 2], [4, -2, -5], [4, -2, 5], [4, 2, -5], [4, 2, 5], [4, 5, -2], [4, 5, 2], [5, -4, -2], [5, -4, 2], [5, -2, -4], [5, -2, 4], [5, 2, -4], [5, 2, 4], [5, 4, -2], [5, 4, 2], [6, -3, 0], [6, 0, -3], [6, 0, 3], [6, 3, 0], [-6, -3, -1], [-6, -3, 1], [-6, -1, -3], [-6, -1, 3], [-6, 1, -3], [-6, 1, 3], [-6, 3, -1], [-6, 3, 1], [-3, -6, -1], [-3, -6, 1], [-3, -1, -6], [-3, -1, 6], [-3, 1, -6], [-3, 1, 6], [-3, 6, -1], [-3, 6, 1], [-1, -6, -3], [-1, -6, 3], [-1, -3, -6], [-1, -3, 6], [-1, 3, -6], [-1, 3, 6], [-1, 6, -3], [-1, 6, 3], [1, -6, -3], [1, -6, 3], [1, -3, -6], [1, -3, 6], [1, 3, -6], [1, 3, 6], [1, 6, -3], [1, 6, 3], [3, -6, -1], [3, -6, 1], [3, -1, -6], [3, -1, 6], [3, 1, -6], [3, 1, 6], [3, 6, -1], [3, 6, 1], [6, -3, -1], [6, -3, 1], [6, -1, -3], [6, -1, 3], [6, 1, -3], [6, 1, 3], [6, 3, -1], [6, 3, 1], [-4, -4, -4], [-4, -4, 4], [-4, 4, -4], [-4, 4, 4], [4, -4, -4], [4, -4, 4], [4, 4, -4], [4, 4, 4], [-7, 0, 0], [-6, -3, -2], [-6, -3, 2], [-6, -2, -3], [-6, -2, 3], [-6, 2, -3], [-6, 2, 3], [-6, 3, -2], [-6, 3, 2], [-3, -6, -2], [-3, -6, 2], [-3, -2, -6], [-3, -2, 6], [-3, 2, -6], [-3, 2, 6], [-3, 6, -2], [-3, 6, 2], [-2, -6, -3], [-2, -6, 3], [-2, -3, -6], [-2, -3, 6], [-2, 3, -6], [-2, 3, 6], [-2, 6, -3], [-2, 6, 3], [0, -7, 0], [0, 0, -7], [0, 0, 7], [0, 7, 0], [2, -6, -3], [2, -6, 3], [2, -3, -6], [2, -3, 6], [2, 3, -6], [2, 3, 6], [2, 6, -3], [2, 6, 3], [3, -6, -2], [3, -6, 2], [3, -2, -6], [3, -2, 6], [3, 2, -6], [3, 2, 6], [3, 6, -2], [3, 6, 2], [6, -3, -2], [6, -3, 2], [6, -2, -3], [6, -2, 3], [6, 2, -3], [6, 2, 3], [6, 3, -2], [6, 3, 2], [7, 0, 0], [-7, -1, 0], [-7, 0, -1], [-7, 0, 1], [-7, 1, 0], [-5, -5, 0], [-5, -4, -3], [-5, -4, 3], [-5, -3, -4], [-5, -3, 4], [-5, 0, -5], [-5, 0, 5], [-5, 3, -4], [-5, 3, 4], [-5, 4, -3], [-5, 4, 3], [-5, 5, 0], [-4, -5, -3], [-4, -5, 3], [-4, -3, -5], [-4, -3, 5], [-4, 3, -5], [-4, 3, 5], [-4, 5, -3], [-4, 5, 3], [-3, -5, -4], [-3, -5, 4], [-3, -4, -5], [-3, -4, 5], [-3, 4, -5], [-3, 4, 5], [-3, 5, -4], [-3, 5, 4], [-1, -7, 0], [-1, 0, -7], [-1, 0, 7], [-1, 7, 0], [0, -7, -1], [0, -7, 1], [0, -5, -5], [0, -5, 5], [0, -1, -7], [0, -1, 7], [0, 1, -7], [0, 1, 7], [0, 5, -5], [0, 5, 5], [0, 7, -1], [0, 7, 1], [1, -7, 0], [1, 0, -7], [1, 0, 7], [1, 7, 0], [3, -5, -4], [3, -5, 4], [3, -4, -5], [3, -4, 5], [3, 4, -5], [3, 4, 5], [3, 5, -4], [3, 5, 4], [4, -5, -3], [4, -5, 3], [4, -3, -5], [4, -3, 5], [4, 3, -5], [4, 3, 5], [4, 5, -3], [4, 5, 3], [5, -5, 0], [5, -4, -3], [5, -4, 3], [5, -3, -4], [5, -3, 4], [5, 0, -5], [5, 0, 5], [5, 3, -4], [5, 3, 4], [5, 4, -3], [5, 4, 3], [5, 5, 0], [7, -1, 0], [7, 0, -1], [7, 0, 1], [7, 1, 0], [-7, -1, -1], [-7, -1, 1], [-7, 1, -1], [-7, 1, 1], [-5, -5, -1], [-5, -5, 1], [-5, -1, -5], [-5, -1, 5], [-5, 1, -5], [-5, 1, 5], [-5, 5, -1], [-5, 5, 1], [-1, -7, -1], [-1, -7, 1], [-1, -5, -5], [-1, -5, 5], [-1, -1, -7], [-1, -1, 7], [-1, 1, -7], [-1, 1, 7], [-1, 5, -5], [-1, 5, 5], [-1, 7, -1], [-1, 7, 1], [1, -7, -1], [1, -7, 1], [1, -5, -5], [1, -5, 5], [1, -1, -7], [1, -1, 7], [1, 1, -7], [1, 1, 7], [1, 5, -5], [1, 5, 5], [1, 7, -1], [1, 7, 1], [5, -5, -1], [5, -5, 1], [5, -1, -5], [5, -1, 5], [5, 1, -5], [5, 1, 5], [5, 5, -1], [5, 5, 1], [7, -1, -1], [7, -1, 1], [7, 1, -1], [7, 1, 1], [-6, -4, 0], [-6, 0, -4], [-6, 0, 4], [-6, 4, 0], [-4, -6, 0], [-4, 0, -6], [-4, 0, 6], [-4, 6, 0], [0, -6, -4], [0, -6, 4], [0, -4, -6], [0, -4, 6], [0, 4, -6], [0, 4, 6], [0, 6, -4], [0, 6, 4], [4, -6, 0], [4, 0, -6], [4, 0, 6], [4, 6, 0], [6, -4, 0], [6, 0, -4], [6, 0, 4], [6, 4, 0], [-7, -2, 0], [-7, 0, -2], [-7, 0, 2], [-7, 2, 0], [-6, -4, -1], [-6, -4, 1], [-6, -1, -4], [-6, -1, 4], [-6, 1, -4], [-6, 1, 4], [-6, 4, -1], [-6, 4, 1], [-4, -6, -1], [-4, -6, 1], [-4, -1, -6], [-4, -1, 6], [-4, 1, -6], [-4, 1, 6], [-4, 6, -1], [-4, 6, 1], [-2, -7, 0], [-2, 0, -7], [-2, 0, 7], [-2, 7, 0], [-1, -6, -4], [-1, -6, 4], [-1, -4, -6], [-1, -4, 6], [-1, 4, -6], [-1, 4, 6], [-1, 6, -4], [-1, 6, 4], [0, -7, -2], [0, -7, 2], [0, -2, -7], [0, -2, 7], [0, 2, -7], [0, 2, 7], [0, 7, -2], [0, 7, 2], [1, -6, -4], [1, -6, 4], [1, -4, -6], [1, -4, 6], [1, 4, -6], [1, 4, 6], [1, 6, -4], [1, 6, 4], [2, -7, 0], [2, 0, -7], [2, 0, 7], [2, 7, 0], [4, -6, -1], [4, -6, 1], [4, -1, -6], [4, -1, 6], [4, 1, -6], [4, 1, 6], [4, 6, -1], [4, 6, 1], [6, -4, -1], [6, -4, 1], [6, -1, -4], [6, -1, 4], [6, 1, -4], [6, 1, 4], [6, 4, -1], [6, 4, 1], [7, -2, 0], [7, 0, -2], [7, 0, 2], [7, 2, 0], [-7, -2, -1], [-7, -2, 1], [-7, -1, -2], [-7, -1, 2], [-7, 1, -2], [-7, 1, 2], [-7, 2, -1], [-7, 2, 1], [-6, -3, -3], [-6, -3, 3], [-6, 3, -3], [-6, 3, 3], [-5, -5, -2], [-5, -5, 2], [-5, -2, -5], [-5, -2, 5], [-5, 2, -5], [-5, 2, 5], [-5, 5, -2], [-5, 5, 2], [-3, -6, -3], [-3, -6, 3], [-3, -3, -6], [-3, -3, 6], [-3, 3, -6], [-3, 3, 6], [-3, 6, -3], [-3, 6, 3], [-2, -7, -1], [-2, -7, 1], [-2, -5, -5], [-2, -5, 5], [-2, -1, -7], [-2, -1, 7], [-2, 1, -7], [-2, 1, 7], [-2, 5, -5], [-2, 5, 5], [-2, 7, -1], [-2, 7, 1], [-1, -7, -2], [-1, -7, 2], [-1, -2, -7], [-1, -2, 7], [-1, 2, -7], [-1, 2, 7], [-1, 7, -2], [-1, 7, 2], [1, -7, -2], [1, -7, 2], [1, -2, -7], [1, -2, 7], [1, 2, -7], [1, 2, 7], [1, 7, -2], [1, 7, 2], [2, -7, -1], [2, -7, 1], [2, -5, -5], [2, -5, 5], [2, -1, -7], [2, -1, 7], [2, 1, -7], [2, 1, 7], [2, 5, -5], [2, 5, 5], [2, 7, -1], [2, 7, 1], [3, -6, -3], [3, -6, 3], [3, -3, -6], [3, -3, 6], [3, 3, -6], [3, 3, 6], [3, 6, -3], [3, 6, 3], [5, -5, -2], [5, -5, 2], [5, -2, -5], [5, -2, 5], [5, 2, -5], [5, 2, 5], [5, 5, -2], [5, 5, 2], [6, -3, -3], [6, -3, 3], [6, 3, -3], [6, 3, 3], [7, -2, -1], [7, -2, 1], [7, -1, -2], [7, -1, 2], [7, 1, -2], [7, 1, 2], [7, 2, -1], [7, 2, 1], [-6, -4, -2], [-6, -4, 2], [-6, -2, -4], [-6, -2, 4], [-6, 2, -4], [-6, 2, 4], [-6, 4, -2], [-6, 4, 2], [-4, -6, -2], [-4, -6, 2], [-4, -2, -6], [-4, -2, 6], [-4, 2, -6], [-4, 2, 6], [-4, 6, -2], [-4, 6, 2], [-2, -6, -4], [-2, -6, 4], [-2, -4, -6], [-2, -4, 6], [-2, 4, -6], [-2, 4, 6], [-2, 6, -4], [-2, 6, 4], [2, -6, -4], [2, -6, 4], [2, -4, -6], [2, -4, 6], [2, 4, -6], [2, 4, 6], [2, 6, -4], [2, 6, 4], [4, -6, -2], [4, -6, 2], [4, -2, -6], [4, -2, 6], [4, 2, -6], [4, 2, 6], [4, 6, -2], [4, 6, 2], [6, -4, -2], [6, -4, 2], [6, -2, -4], [6, -2, 4], [6, 2, -4], [6, 2, 4], [6, 4, -2], [6, 4, 2], [-7, -2, -2], [-7, -2, 2], [-7, 2, -2], [-7, 2, 2], [-5, -4, -4], [-5, -4, 4], [-5, 4, -4], [-5, 4, 4], [-4, -5, -4], [-4, -5, 4], [-4, -4, -5], [-4, -4, 5], [-4, 4, -5], [-4, 4, 5], [-4, 5, -4], [-4, 5, 4], [-2, -7, -2], [-2, -7, 2], [-2, -2, -7], [-2, -2, 7], [-2, 2, -7], [-2, 2, 7], [-2, 7, -2], [-2, 7, 2], [2, -7, -2], [2, -7, 2], [2, -2, -7], [2, -2, 7], [2, 2, -7], [2, 2, 7], [2, 7, -2], [2, 7, 2], [4, -5, -4], [4, -5, 4], [4, -4, -5], [4, -4, 5], [4, 4, -5], [4, 4, 5], [4, 5, -4], [4, 5, 4], [5, -4, -4], [5, -4, 4], [5, 4, -4], [5, 4, 4], [7, -2, -2], [7, -2, 2], [7, 2, -2], [7, 2, 2], [-7, -3, 0], [-7, 0, -3], [-7, 0, 3], [-7, 3, 0], [-3, -7, 0], [-3, 0, -7], [-3, 0, 7], [-3, 7, 0], [0, -7, -3], [0, -7, 3], [0, -3, -7], [0, -3, 7], [0, 3, -7], [0, 3, 7], [0, 7, -3], [0, 7, 3], [3, -7, 0], [3, 0, -7], [3, 0, 7], [3, 7, 0], [7, -3, 0], [7, 0, -3], [7, 0, 3], [7, 3, 0], [-7, -3, -1], [-7, -3, 1], [-7, -1, -3], [-7, -1, 3], [-7, 1, -3], [-7, 1, 3], [-7, 3, -1], [-7, 3, 1], [-5, -5, -3], [-5, -5, 3], [-5, -3, -5], [-5, -3, 5], [-5, 3, -5], [-5, 3, 5], [-5, 5, -3], [-5, 5, 3], [-3, -7, -1], [-3, -7, 1], [-3, -5, -5], [-3, -5, 5], [-3, -1, -7], [-3, -1, 7], [-3, 1, -7], [-3, 1, 7], [-3, 5, -5], [-3, 5, 5], [-3, 7, -1], [-3, 7, 1], [-1, -7, -3], [-1, -7, 3], [-1, -3, -7], [-1, -3, 7], [-1, 3, -7], [-1, 3, 7], [-1, 7, -3], [-1, 7, 3], [1, -7, -3], [1, -7, 3], [1, -3, -7], [1, -3, 7], [1, 3, -7], [1, 3, 7], [1, 7, -3], [1, 7, 3], [3, -7, -1], [3, -7, 1], [3, -5, -5], [3, -5, 5], [3, -1, -7], [3, -1, 7], [3, 1, -7], [3, 1, 7], [3, 5, -5], [3, 5, 5], [3, 7, -1], [3, 7, 1], [5, -5, -3], [5, -5, 3], [5, -3, -5], [5, -3, 5], [5, 3, -5], [5, 3, 5], [5, 5, -3], [5, 5, 3], [7, -3, -1], [7, -3, 1], [7, -1, -3], [7, -1, 3], [7, 1, -3], [7, 1, 3], [7, 3, -1], [7, 3, 1], [-6, -5, 0], [-6, -4, -3], [-6, -4, 3], [-6, -3, -4], [-6, -3, 4], [-6, 0, -5], [-6, 0, 5], [-6, 3, -4], [-6, 3, 4], [-6, 4, -3], [-6, 4, 3], [-6, 5, 0], [-5, -6, 0], [-5, 0, -6], [-5, 0, 6], [-5, 6, 0], [-4, -6, -3], [-4, -6, 3], [-4, -3, -6], [-4, -3, 6], [-4, 3, -6], [-4, 3, 6], [-4, 6, -3], [-4, 6, 3], [-3, -6, -4], [-3, -6, 4], [-3, -4, -6], [-3, -4, 6], [-3, 4, -6], [-3, 4, 6], [-3, 6, -4], [-3, 6, 4], [0, -6, -5], [0, -6, 5], [0, -5, -6], [0, -5, 6], [0, 5, -6], [0, 5, 6], [0, 6, -5], [0, 6, 5], [3, -6, -4], [3, -6, 4], [3, -4, -6], [3, -4, 6], [3, 4, -6], [3, 4, 6], [3, 6, -4], [3, 6, 4], [4, -6, -3], [4, -6, 3], [4, -3, -6], [4, -3, 6], [4, 3, -6], [4, 3, 6], [4, 6, -3], [4, 6, 3], [5, -6, 0], [5, 0, -6], [5, 0, 6], [5, 6, 0], [6, -5, 0], [6, -4, -3], [6, -4, 3], [6, -3, -4], [6, -3, 4], [6, 0, -5], [6, 0, 5], [6, 3, -4], [6, 3, 4], [6, 4, -3], [6, 4, 3], [6, 5, 0], [-7, -3, -2], [-7, -3, 2], [-7, -2, -3], [-7, -2, 3], [-7, 2, -3], [-7, 2, 3], [-7, 3, -2], [-7, 3, 2], [-6, -5, -1], [-6, -5, 1], [-6, -1, -5], [-6, -1, 5], [-6, 1, -5], [-6, 1, 5], [-6, 5, -1], [-6, 5, 1], [-5, -6, -1], [-5, -6, 1], [-5, -1, -6], [-5, -1, 6], [-5, 1, -6], [-5, 1, 6], [-5, 6, -1], [-5, 6, 1], [-3, -7, -2], [-3, -7, 2], [-3, -2, -7], [-3, -2, 7], [-3, 2, -7], [-3, 2, 7], [-3, 7, -2], [-3, 7, 2], [-2, -7, -3], [-2, -7, 3], [-2, -3, -7], [-2, -3, 7], [-2, 3, -7], [-2, 3, 7], [-2, 7, -3], [-2, 7, 3], [-1, -6, -5], [-1, -6, 5], [-1, -5, -6], [-1, -5, 6], [-1, 5, -6], [-1, 5, 6], [-1, 6, -5], [-1, 6, 5], [1, -6, -5], [1, -6, 5], [1, -5, -6], [1, -5, 6], [1, 5, -6], [1, 5, 6], [1, 6, -5], [1, 6, 5], [2, -7, -3], [2, -7, 3], [2, -3, -7], [2, -3, 7], [2, 3, -7], [2, 3, 7], [2, 7, -3], [2, 7, 3], [3, -7, -2], [3, -7, 2], [3, -2, -7], [3, -2, 7], [3, 2, -7], [3, 2, 7], [3, 7, -2], [3, 7, 2], [5, -6, -1], [5, -6, 1], [5, -1, -6], [5, -1, 6], [5, 1, -6], [5, 1, 6], [5, 6, -1], [5, 6, 1], [6, -5, -1], [6, -5, 1], [6, -1, -5], [6, -1, 5], [6, 1, -5], [6, 1, 5], [6, 5, -1], [6, 5, 1], [7, -3, -2], [7, -3, 2], [7, -2, -3], [7, -2, 3], [7, 2, -3], [7, 2, 3], [7, 3, -2], [7, 3, 2], [-8, 0, 0], [0, -8, 0], [0, 0, -8], [0, 0, 8], [0, 8, 0], [8, 0, 0], [-8, -1, 0], [-8, 0, -1], [-8, 0, 1], [-8, 1, 0], [-7, -4, 0], [-7, 0, -4], [-7, 0, 4], [-7, 4, 0], [-6, -5, -2], [-6, -5, 2], [-6, -2, -5], [-6, -2, 5], [-6, 2, -5], [-6, 2, 5], [-6, 5, -2], [-6, 5, 2], [-5, -6, -2], [-5, -6, 2], [-5, -2, -6], [-5, -2, 6], [-5, 2, -6], [-5, 2, 6], [-5, 6, -2], [-5, 6, 2], [-4, -7, 0], [-4, 0, -7], [-4, 0, 7], [-4, 7, 0], [-2, -6, -5], [-2, -6, 5], [-2, -5, -6], [-2, -5, 6], [-2, 5, -6], [-2, 5, 6], [-2, 6, -5], [-2, 6, 5], [-1, -8, 0], [-1, 0, -8], [-1, 0, 8], [-1, 8, 0], [0, -8, -1], [0, -8, 1], [0, -7, -4], [0, -7, 4], [0, -4, -7], [0, -4, 7], [0, -1, -8], [0, -1, 8], [0, 1, -8], [0, 1, 8], [0, 4, -7], [0, 4, 7], [0, 7, -4], [0, 7, 4], [0, 8, -1], [0, 8, 1], [1, -8, 0], [1, 0, -8], [1, 0, 8], [1, 8, 0], [2, -6, -5], [2, -6, 5], [2, -5, -6], [2, -5, 6], [2, 5, -6], [2, 5, 6], [2, 6, -5], [2, 6, 5], [4, -7, 0], [4, 0, -7], [4, 0, 7], [4, 7, 0], [5, -6, -2], [5, -6, 2], [5, -2, -6], [5, -2, 6], [5, 2, -6], [5, 2, 6], [5, 6, -2], [5, 6, 2], [6, -5, -2], [6, -5, 2], [6, -2, -5], [6, -2, 5], [6, 2, -5], [6, 2, 5], [6, 5, -2], [6, 5, 2], [7, -4, 0], [7, 0, -4], [7, 0, 4], [7, 4, 0], [8, -1, 0], [8, 0, -1], [8, 0, 1], [8, 1, 0], [-8, -1, -1], [-8, -1, 1], [-8, 1, -1], [-8, 1, 1], [-7, -4, -1], [-7, -4, 1], [-7, -1, -4], [-7, -1, 4], [-7, 1, -4], [-7, 1, 4], [-7, 4, -1], [-7, 4, 1], [-5, -5, -4], [-5, -5, 4], [-5, -4, -5], [-5, -4, 5], [-5, 4, -5], [-5, 4, 5], [-5, 5, -4], [-5, 5, 4], [-4, -7, -1], [-4, -7, 1], [-4, -5, -5], [-4, -5, 5], [-4, -1, -7], [-4, -1, 7], [-4, 1, -7], [-4, 1, 7], [-4, 5, -5], [-4, 5, 5], [-4, 7, -1], [-4, 7, 1], [-1, -8, -1], [-1, -8, 1], [-1, -7, -4], [-1, -7, 4], [-1, -4, -7], [-1, -4, 7], [-1, -1, -8], [-1, -1, 8], [-1, 1, -8], [-1, 1, 8], [-1, 4, -7], [-1, 4, 7], [-1, 7, -4], [-1, 7, 4], [-1, 8, -1], [-1, 8, 1], [1, -8, -1], [1, -8, 1], [1, -7, -4], [1, -7, 4], [1, -4, -7], [1, -4, 7], [1, -1, -8], [1, -1, 8], [1, 1, -8], [1, 1, 8], [1, 4, -7], [1, 4, 7], [1, 7, -4], [1, 7, 4], [1, 8, -1], [1, 8, 1], [4, -7, -1], [4, -7, 1], [4, -5, -5], [4, -5, 5], [4, -1, -7], [4, -1, 7], [4, 1, -7], [4, 1, 7], [4, 5, -5], [4, 5, 5], [4, 7, -1], [4, 7, 1], [5, -5, -4], [5, -5, 4], [5, -4, -5], [5, -4, 5], [5, 4, -5], [5, 4, 5], [5, 5, -4], [5, 5, 4], [7, -4, -1], [7, -4, 1], [7, -1, -4], [7, -1, 4], [7, 1, -4], [7, 1, 4], [7, 4, -1], [7, 4, 1], [8, -1, -1], [8, -1, 1], [8, 1, -1], [8, 1, 1], [-7, -3, -3], [-7, -3, 3], [-7, 3, -3], [-7, 3, 3], [-3, -7, -3], [-3, -7, 3], [-3, -3, -7], [-3, -3, 7], [-3, 3, -7], [-3, 3, 7], [-3, 7, -3], [-3, 7, 3], [3, -7, -3], [3, -7, 3], [3, -3, -7], [3, -3, 7], [3, 3, -7], [3, 3, 7], [3, 7, -3], [3, 7, 3], [7, -3, -3], [7, -3, 3], [7, 3, -3], [7, 3, 3], [-8, -2, 0], [-8, 0, -2], [-8, 0, 2], [-8, 2, 0], [-6, -4, -4], [-6, -4, 4], [-6, 4, -4], [-6, 4, 4], [-4, -6, -4], [-4, -6, 4], [-4, -4, -6], [-4, -4, 6], [-4, 4, -6], [-4, 4, 6], [-4, 6, -4], [-4, 6, 4], [-2, -8, 0], [-2, 0, -8], [-2, 0, 8], [-2, 8, 0], [0, -8, -2], [0, -8, 2], [0, -2, -8], [0, -2, 8], [0, 2, -8], [0, 2, 8], [0, 8, -2], [0, 8, 2], [2, -8, 0], [2, 0, -8], [2, 0, 8], [2, 8, 0], [4, -6, -4], [4, -6, 4], [4, -4, -6], [4, -4, 6], [4, 4, -6], [4, 4, 6], [4, 6, -4], [4, 6, 4], [6, -4, -4], [6, -4, 4], [6, 4, -4], [6, 4, 4], [8, -2, 0], [8, 0, -2], [8, 0, 2], [8, 2, 0], [-8, -2, -1], [-8, -2, 1], [-8, -1, -2], [-8, -1, 2], [-8, 1, -2], [-8, 1, 2], [-8, 2, -1], [-8, 2, 1], [-7, -4, -2], [-7, -4, 2], [-7, -2, -4], [-7, -2, 4], [-7, 2, -4], [-7, 2, 4], [-7, 4, -2], [-7, 4, 2], [-4, -7, -2], [-4, -7, 2], [-4, -2, -7], [-4, -2, 7], [-4, 2, -7], [-4, 2, 7], [-4, 7, -2], [-4, 7, 2], [-2, -8, -1], [-2, -8, 1], [-2, -7, -4], [-2, -7, 4], [-2, -4, -7], [-2, -4, 7], [-2, -1, -8], [-2, -1, 8], [-2, 1, -8], [-2, 1, 8], [-2, 4, -7], [-2, 4, 7], [-2, 7, -4], [-2, 7, 4], [-2, 8, -1], [-2, 8, 1], [-1, -8, -2], [-1, -8, 2], [-1, -2, -8], [-1, -2, 8], [-1, 2, -8], [-1, 2, 8], [-1, 8, -2], [-1, 8, 2], [1, -8, -2], [1, -8, 2], [1, -2, -8], [1, -2, 8], [1, 2, -8], [1, 2, 8], [1, 8, -2], [1, 8, 2], [2, -8, -1], [2, -8, 1], [2, -7, -4], [2, -7, 4], [2, -4, -7], [2, -4, 7], [2, -1, -8], [2, -1, 8], [2, 1, -8], [2, 1, 8], [2, 4, -7], [2, 4, 7], [2, 7, -4], [2, 7, 4], [2, 8, -1], [2, 8, 1], [4, -7, -2], [4, -7, 2], [4, -2, -7], [4, -2, 7], [4, 2, -7], [4, 2, 7], [4, 7, -2], [4, 7, 2], [7, -4, -2], [7, -4, 2], [7, -2, -4], [7, -2, 4], [7, 2, -4], [7, 2, 4], [7, 4, -2], [7, 4, 2], [8, -2, -1], [8, -2, 1], [8, -1, -2], [8, -1, 2], [8, 1, -2], [8, 1, 2], [8, 2, -1], [8, 2, 1], [-6, -5, -3], [-6, -5, 3], [-6, -3, -5], [-6, -3, 5], [-6, 3, -5], [-6, 3, 5], [-6, 5, -3], [-6, 5, 3], [-5, -6, -3], [-5, -6, 3], [-5, -3, -6], [-5, -3, 6], [-5, 3, -6], [-5, 3, 6], [-5, 6, -3], [-5, 6, 3], [-3, -6, -5], [-3, -6, 5], [-3, -5, -6], [-3, -5, 6], [-3, 5, -6], [-3, 5, 6], [-3, 6, -5], [-3, 6, 5], [3, -6, -5], [3, -6, 5], [3, -5, -6], [3, -5, 6], [3, 5, -6], [3, 5, 6], [3, 6, -5], [3, 6, 5], [5, -6, -3], [5, -6, 3], [5, -3, -6], [5, -3, 6], [5, 3, -6], [5, 3, 6], [5, 6, -3], [5, 6, 3], [6, -5, -3], [6, -5, 3], [6, -3, -5], [6, -3, 5], [6, 3, -5], [6, 3, 5], [6, 5, -3], [6, 5, 3]]\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/VoxelsInSphere.ts","import * as WorkerManager from \"./WorkerManager\"\r\nimport Worker from 'worker-loader?{\"name\":\"worker.js\"}!../worker'\r\n\r\nconst estimatedLogicalCoresAvailable = (navigator.hardwareConcurrency || 4) - 2\r\n\r\nexport default {\r\n\tinit() {\r\n\t\tconst workerControllers = []\r\n\t\tfor (let workerId = 0; workerId < estimatedLogicalCoresAvailable; workerId += 1) {\r\n\t\t\tconst worker: Worker = new Worker() // MAGIC!\r\n\t\t\tconst workerController: WorkerManager.WorkerController = new WorkerManager.WorkerController(worker, workerId)\r\n\t\t\tworkerControllers[workerId] = workerController\r\n\t\t}\r\n\t\tWorkerManager.init(workerControllers)\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/worker/WorkerOverseer.ts","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"worker.js\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/worker-loader/dist/cjs.js?{\"name\":\"worker.js\"}!./src/client/worker.ts\n// module id = 31\n// module chunks = 0"],"sourceRoot":""}